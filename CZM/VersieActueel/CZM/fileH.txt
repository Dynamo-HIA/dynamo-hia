(* :Title: CZMDefaultFileNames *)

(* :Context: CZMInitialization` *)

(* :Author: Rudolf T. Hoogenveen, Roel G.M. Breuls *)

(* :Summary:
   CZM initialization routine contains the names of the default import data files *)

(* :Copyright: © 2004 by Roel G.M. Breuls/Rudolf Hoogenveen *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)


(* :History: 	1.0 July 2004 (Roel Breuls), First update new implementation CZM
		1.1 September 2004 (Pieter van Baal), Addition of new default file name: allcauseDALYinput 
        	2.0 first release CZM 2005, version March, *010305.txt input files
		3.0 version november 2005 
		3.1 version March 2007; risk factor class distributions within patients (riskdisinput.txt) *)

(* :Keywords: file names, import *)


BeginPackage["CZMInitialization`CZMDefaultFileNames`",
	"CZMInitialization`CZMLogFile`"]


deminput::usage  		= "Name of file containing data on demography"
smokinput::usage 		= "Name of file containing data on smoking prevalence and transition rates"
SBPinput::usage 	 	= "Name of file containing data on SBP prevalence and transition rates"
cholinput::usage  		= "Name of file containing data on cholesterol prevalence and transition rates"
BMIinput::usage 		= "Name of file containing data on BMI prevalence and transition rates"
lichactinput::usage 		= "Name of file containing data on physical activity prevalence and transition rates"
alcoinput::usage 		= "Name of file containing data on alcohol consumption prevalence and transition rates"
verzvetinput::usage 		= "Name of file containing data on satur fat consumption prevalence and transition rates"
transvetinput::usage 		= "Name of file containing data on trans fat consumption prevalence and transition rates"
fruitinput::usage 		= "Name of file containing data on fruit consumption prevalence and transition rates"
groenteinput::usage 		= "Name of file containing data on vegetables consumption prevalence and transition rates"
visinput::usage 		= "Name of file containing data on fish consumption prevalence and transition rates"
HbA1cinput::usage 		= "Name of file containing data on HbA1c prevalence and transition rates"

riskdisinput		::usage	= "name of file containing data on risk factor class distributions within patients"

RRsmokinput::usage 		= "Name of file containing relative risk data for smoking"
smokduurinput::usage		= "Name of file containing parameters values of decrease of former smokers RR's and relapse rate"
RRSBPinput::usage 		= "Name of file containing relative risk data for SBP"
RRcholinput::usage 		= "Name of file containing relative risk data for cholesterol"
RRBMIinput::usage 		= "Name of file containing relative risk data for BMI"
RRlichactinput::usage 		= "Name of file containing relative risk data for physical activity"
RRalcoinput::usage 		= "Name of file containing relative risk data for alcohol consumption"
RRverzvetinput::usage 		= "Name of file containing relative risk data for saturated fat consumption"
RRtransvetinput::usage 		= "Name of file containing relative risk data for trans fatty acid consumption"
RRfruitinput::usage 		= "Name of file containing relative risk data for fruit consumption"
RRgroenteinput::usage 		= "Name of file containing relative risk data for vegetables consumption"
RRvisinput::usage 		= "Name of file containing relative risk data for fish consumption"
RRHbA1cinput::usage 		= "Name of file containing relative risk data for HbA1c"
RRCVDinput::usage 		= "Name of file containing relative risk data for one disease on another disease incidence"
RRcasefatinput::usage		= "Name of file containing relative risk data for one diseasd on another disease case fatality"	

CHDinput::usage		 	= "Name of file containing incidence, prevalence, and excess mortality rates for CHD"
CHFinput::usage 		= "Name of file containing incidence, prevalence, and excess mortality rates for CHF"
CVAinput::usage 		= "Name of file containing incidence, prevalence, and excess mortality rates for CVA"
CARAinput::usage 		= "Name of file containing incidence, prevalence, and excess mortality rates for CARA"
DMinput::usage 			= "Name of file containing incidence, prevalence, and excess mortality rates for DM"
demeninput::usage 		= "Name of file containing incidence, prevalence, and excess mortality rates for dementia"
artrinput::usage 		= "Name of file containing incidence, prevalence, and excess mortality rates for arthritis"
dorsinput::usage 		= "Name of file containing incidence, prevalence, and excess mortality rates for dorsopathy"
osteinput::usage 		= "Name of file containing incidence, prevalence, and excess mortality rates for
					osteoporosis"
nonmodelprevinput ::usage	= "Name of file containing prevalence rates of diseases not modelled in CZM"

cancmortinput::usage 		= "Name of file containing mortality rates for types of cancer"
cancrelsurvinput::usage		= "Name of file containing relative survival rates for types of cancer"
cancincinput::usage 		= "Name of file containing incidence rates for types of cancer"
cancprevinput::usage 		= "Name of file containing prevalence rates for types of cancer"

DALYwgtinput::usage 		= "Name of file containing DALY weights pf diseases modelled in CZM"
nonmodelDALYwgtinput ::usage	= "Name of file containing DALY weights of diseases not modelled in CZM"

costspersoninput::usage	 	= "Name of file containing costs per person data"
costspatientinput::usage	= "Name of file containing costs per patient data"

userinput::usage	 	= "Name of file containing user selections of input"
useroutput::usage	 	= "Name of file containing user selections of output"


Begin["`Private`"]


Print["CZMDefaultFileNames package is evaluated"];

	userinput	= "userinput011205.txt"
	useroutput	= "useroutput011205.txt"

(* DEMOGRAPHY *)

	deminput  	= "demdata111005.txt"

(* RISK FACTORS *)

	smokinput 	= "smokinput010505.txt"
	SBPinput  	= "SBPinput240406.txt"
	cholinput 	= "cholinput240406.txt"
	BMIinput  	= "BMIinput011205.txt"
	lichactinput	= "lichactCBS011205.txt"
	alcoinput	= "alcoinput011205.txt"
	verzvetinput	= "verzvetinput221105.txt"
	transvetinput	= "transvetinput011205.txt"
	groenteinput	= "groenteinput011205.txt"
	fruitinput	= "fruitinput011205.txt"
	visinput	= "visinput011205.txt"
	HbA1cinput	= "HbA1cinput130106.txt"

(* DISCFRETELY DISTRIBUTED RISK FACTORS WITHIN PATIENTS *)

	riskdisinput			= "riskdisinput.txt";

(* RELATIVE RISKS *)

	RRsmokinput 	= "RRsmok090305.txt"
	smokduurinput 	= "smokinputduur010305.txt"
	RRSBPinput  	= "RRSBPinput240406.txt"
	RRcholinput 	= "RRcholinput240406.txt"
	RRBMIinput  	= "RRBMIinput260505.txt"
	RRlichactinput	= "RRlichactinput010305.txt"
	RRalcoinput	= "RRalcoinput010305.txt"
	RRverzvetinput	= "RRverzvetinput010305.txt"
	RRtransvetinput	= "RRtransvetinput010305.txt"
	RRgroenteinput	= "RRgroenteinput010305.txt"
	RRfruitinput	= "RRfruitinput010305.txt"
	RRvisinput	= "RRvisinput010305.txt"
	RRHbA1cinput	= "RRHbA1cinput120405.txt"
	RRCVDinput  	= "RRCVDinput130605.txt"
	RRcasefatinput	= "RRcasefat130605.txt"

(* NONCANCEROUS DISEASE DATA *)

	CHDinput 	= "CHDinput010305.txt"
	CHFinput	= "CHFinput010305.txt"
	CVAinput	= "CVAinput010305.txt"
	CARAinput	= "CARAinput010305.txt"
	DMinput		= "DMinput241105.txt"
	demeninput	= "demeninput010305.txt"
	artrinput	= "artrinput010305.txt"
	dorsinput	= "dorsinput010305.txt"
	osteinput	= "osteinput010305.txt"

	nonmodelprevinput = "nonmodelprev010305.txt"

(* CANCEROUS DISEASE DATA *)

	cancmortinput 	= "cancmort010305.txt" 
	cancrelsurvinput = "cancrelsurv010305.txt"
	cancincinput 	=  "cancinc010305.txt"
	cancprevinput 	= "cancprev010305.txt"

(* DALYS *)

	DALYwgtinput 	= "DALYwgt010305.txt"
	nonmodelDALYwgtinput = "nonmodelDALYwgt010305.txt" 

	
(* COSTS *)

	costspersoninput  = "costsperson180505.txt"
	costspatientinput = "costspatient180505.txt"
	

(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];


WriteString[logfile, "Summary of input files used for the simulation: \n\n"];

WriteString[logfile,

"Demography" <> "\n\n", 

	"\t" <> deminput 		<> "\n\n", 

"Risk Factors" <> "\n\n",

	"\t" <> smokinput 		<> "\n", 
	"\t" <> SBPinput 		<> "\n", 
	"\t" <> cholinput 		<> "\n", 
	"\t" <> BMIinput 		<> "\n", 
	"\t" <> lichactinput 		<> "\n", 
	"\t" <> alcoinput 		<> "\n", 
	"\t" <> verzvetinput 		<> "\n", 
	"\t" <> transvetinput 		<> "\n", 
	"\t" <> groenteinput 		<> "\n", 
	"\t" <> fruitinput 		<> "\n", 
	"\t" <> visinput 		<> "\n",
	"\t" <> HbA1cinput 		<> "\n\n", 


"Risk Factor distributions within patients" <> "\n\n",

	"\t" <> riskdisinput 		<> "\n\n",


"Relative Risks" <> "\n\n",

	"\t" <> RRsmokinput 		<> "\n", 
	"\t" <> smokduurinput 		<> "\n", 
	"\t" <> RRSBPinput 		<> "\n", 
	"\t" <> RRcholinput 		<> "\n", 
	"\t" <> RRBMIinput 		<> "\n", 
	"\t" <> RRlichactinput 		<> "\n", 
	"\t" <> RRalcoinput 		<> "\n", 
	"\t" <> RRverzvetinput 		<> "\n", 
	"\t" <> RRtransvetinput 	<> "\n", 
	"\t" <> RRgroenteinput 		<> "\n", 
	"\t" <> RRfruitinput 		<> "\n", 
	"\t" <> RRvisinput 		<> "\n", 
	"\t" <> RRHbA1cinput 		<> "\n", 
	"\t" <> RRCVDinput 		<> "\n",
	"\t" <> RRcasefatinput 		<> "\n\n",

"Diseases" <> "\n\n",

	"\t" <> CHDinput 		<> "\n", 
	"\t" <> CHFinput 		<> "\n", 
	"\t" <> CVAinput 		<> "\n", 
	"\t" <> CARAinput 		<> "\n", 
	"\t" <> DMinput 		<> "\n", 
	"\t" <> demeninput 		<> "\n", 
	"\t" <> artrinput 		<> "\n", 
	"\t" <> dorsinput 		<> "\n", 
	"\t" <> osteinput 		<> "\n", 

	"\t" <> cancmortinput 		<> "\n", 
	"\t" <> cancrelsurvinput 	<> "\n", 
	"\t" <> cancincinput 		<> "\n", 
	"\t" <> cancprevinput 		<> "\n", 

	"\t" <> nonmodelprevinput 	<> "\n\n",

"Costs and DALYs" <> "\n\n",

	"\t" <>	costspersoninput 	<> "\n",
	"\t" <>	costspatientinput 	<> "\n",
	"\t" <> DALYwgtinput 		<> "\n", 
	"\t" <> nonmodelDALYwgtinput 	<> "\n\n",

"User Selections" <> "\n\n",

	"\t" <> userinput 		<> "\n", 
	"\t" <> useroutput 		<> "\n\n"
]


End[]

Protect[Evaluate[Context[] <> "*"]]

EndPackage[]

(* :Title: CZMConstants *)

(* :Context: CZMInitialization` *)

(* :Author: Rudolf T. Hoogenveen, Roel G.M. Breuls *)

(* :Summary:
   CZM initialization routine defines age class distributions and
   several constants *)

(* :Copyright: © 2004 by Roel G.M. Breuls *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM July 2004
		2.0 first release CZM 2005, version March
		3.0 version november 2005 
		3.1 version March 2007 *)

(* :Keywords: initialization of age class distributions *)


BeginPackage["CZMInitialization`CZMConstants`",
	"CZMInitialization`CZMLogFile`"]

ng::usage 		= "number of genders (=2)"
gennames::usage		= "gennames[[g]]: gender names"
eps::usage 		= "small number used in the denominater of divisions to prevent dividing by zero" 
na::usage 		= "number of age years (= 85)"
na1::usage		= "number of age years ( = na+1 = 86) "
na2::usage 		= "age at which there are no survivers (120), which is used for life table calculations"
nac::usage 		= "nac[[c]]: number of ageclasses for each ageclass distribution defined"
initageclass::usage 	= "initageclass[[c,ai]]: 1st years per ageclass per ageclass distribution"
lengthageclass::usage 	= "lengthageclass[[c,ai]]: number of years per ageclass per ageclass distribution"
ageyearclass::usage 	= "ageyearclass[[c,a]]: for each age-year the ageclass to which it belongs"


Begin["`Private`"]


Print["CZMConstants package is evaluated"];

(* MISCELLANEOUS *)

ng	= 2;
gennames = {"males ", "females "}; 

eps	= 0.000000000001;

(* AGECLASS DISTRIBUTION DATA *)

na	= 85;
na1	= na + 1;
na2	= 120;
nac	= {18, 20, 9, 5, 8, 6, 4};

initageclass = Partition[Flatten[{
		{5 Range[nac[[1]]] - 5, Table[na1, {21 - nac[[1]]}]}, 
        	{0, 1, 2, 5 Range[17], na1},
		{10 Range[9] - 10, Table[na1, {21 - nac[[3]]}]}, 
		{0, 5, 15, 45, 60, Table[na1, {21 - nac[[4]]}]}, 
		{0, 1, 15, 25, 45, 65, 75, 85, Table[na1, {21 - nac[[5]]}]},
		{0, 30 + 10 Range[5], Table[na1, {21 - nac[[6]]}]},
		{0, 40, 60, 80, Table[na1, {21 - nac[[7]]}]}}],
		21]; 

lengthageclass = Table[Drop[initageclass[[c]], 1] - Drop[initageclass[[c]], -1], {c, Length[nac]}]; 

ageyearclass = Partition[	Flatten[Table[Range[nac[[c]]][[ai]], {c, Length[nac]}, {ai, nac[[c]]}, {lengthageclass[[c, ai]]}]],
				na1];


(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version: " <> ToString[version] <> "\n\n"];

End[]

Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMFunctions *)

(* :Context: CZMInitialization` *)

(* :Author: Rudolf T. Hoogenveen, Roel G.M. Breuls *)

(* :Summary:
   CZM initialization routine defines a number of general functions and unit vectors *)

(* :Copyright: © 2004 by Roel G.M. Breuls *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM July 2004
		2.0 first release CZM 2005, version March, *010305.txt input files
		3.0 version novermber 2005 
		3.1 version March 2007; input file reading routines *)

(* :Keywords: help functions, smoothing functions, unit vectors *)


BeginPackage["CZMInitialization`CZMFunctions`",
	{"CZMInitialization`CZMLogFile`",
	"CZMInitialization`CZMConstants`",
	"Statistics`NormalDistribution`",
	"Statistics`ContinuousDistributions`"}]


skipcomment	::usage	= "skips comment lines in data file"

Min1::usage 	= "Min1[x]: cuts off values larger than 1: 1 if x>=1 and x if x<1"
Max1::usage 	= "Max1[x]: cuts off values smaller than 1: 1 if x<=1 and x if x>1"
Min0::usage 	= "Min0[x]: Cuts off values smaller than 0: 0 if x>=0 and x if x<0"
Max0::usage 	= "Max0[x]: cuts off values smaller than 0: 0 if x<=0 and x if x>0"
Maxc::usage 	= "Maxc[x,c]: cuts off values smaller than c: c if x<=c and x if x>c"
Minc::usage 	= "Minc[x,c]: cuts off values larger than c: c if x>=c and x if x<c"
roundoff::usage	= "roundoff[x,m]: rounds off x to m decimals"

vect0::usage 	= "vector of length nac[[1]] with values 0"
vect1::usage 	= "vector of length nac[[1]] with values 1"
vect00::usage 	= "vector of length na1 with values 0"
vect11::usage 	= "vector of length na1 with values 1 "
vect12::usage 	= "matrix of dimensions 2xna1 with values 1"


aggreg::usage 	= "aggreg[v,c] aggregates a vector v, according to ageclass distribution c"
aggregc::usage 	= "aggreg[v,c1,c2] redistributes a vector aggregated over ageclass distribution c1 to ageclass distribution c2"
meanaggreg::usage = "meanaggreg[v] calculates mean values per 5 year ageclass from age year data"
enlarge::usage	= "enlarge[v] expands 5 year ageclass data to values specified by age year"
enlargec::usage	= "enlargec[v,c] expands data specified by ageclass distrubtion c to values specified by age year"

subsetn::usage	= "subsetn[v1,v2] calculates age 85+ numbers at the end of year as sum of 84 (v1) and 85+ (v2) numbers at start"
subsetp::usage	= "subsetp[v1,v2,wgt] calculates age 85+ rates at the end of year as weighted sum of 84 (v1) and 85+ (v2) rates at start"


fsmooth::usage 	= "fsmooth[x] interpolates a 18 ageclass vector x by (1) expanding the
		   vector to a 86 years vector by copying each element 5 times, and (2)   
		   smoothing this vector using a penalty matrix."

fsmooth1::usage = "fsmooth1[x] interpolates a 18 ageclass vector x by (1) expanding the 
		   vector to a 86 years vector by copying each element 5 times, (2) applying   
		   a log-transformation to it, (3) smoothing this vector using a penalty matrix,
		   and (4) de-transforming it."

schrijf::usage	= "schrijf[naam, dat] writes array dat to file with name naam"


Begin["`Private`"]


Print["CZMFunctions package is evaluated"];


(* --------------------------------------------------
		INPUT FILE READING ROUTINES
----------------------------------------------------*)

skipcomment[dat_] := Block[{}, 
	Skip[dat, Record, RecordSeparators -> {{"(*"}, {"*)"}}];
	Read[dat, Word]];


(* --------------------------------------------------
		CUT-OFF AND ROUND-OFF ROUTINES
----------------------------------------------------*)

Min1[x_] 	:= Min[x, 1]; 
Max1[x_] 	:= Max[x, 1]; 
Max0[x_] 	:= Max[x, 0]; 
Min0[x_] 	:= Min[x, 0]; 
Maxc[x_, c_] 	:= Max[x, c]; 
Minc[x_, c_] 	:= Min[x, c]; 

roundoff[x_, m_] := 1. Round[m x] / m;

SetAttributes[{Max0, Min0, Max1, Min1, Maxc, Minc, roundoff}, Listable]; 


(* --------------------------------------------------
		UNIT VECTORS AND MATRICES
----------------------------------------------------*)

vect1 		= Table[1, {nac[[1]]}]; 
vect0 		= Table[0, {nac[[1]]}];
vect11 		= Table[1, {na1}]; 
vect12 		= {vect11, vect11}; 
vect00 		= 0 vect11;


(* --------------------------------------------------
		AGECLASS CONVERSION ROUTINES
----------------------------------------------------*)

aggreg[v_, c_] 		:= Table[Plus@@v[[initageclass[[c, ai]] + Range[lengthageclass[[c, ai]]]]], {ai, nac[[c]]}]; 

aggregc[v_, c1_, c2_] 	:= Table[Plus@@v[[Range[
				ageyearclass[[c1, initageclass[[c2, ai]] + 1]],
				ageyearclass[[c1,initageclass[[c2, ai + 1]]]]
				]]],
				{ai, nac[[c2]]}]; 

meanaggreg[v_]		:= aggreg[v, 1] / lengthageclass[[1, Range[nac[[1]]]]]; 

enlarge[v_] 		:= Flatten[Table[v[[ai]], {ai, nac[[1]]}, {lengthageclass[[1, ai]]}]];

enlargec[v_, c_] 	:= Flatten[Table[v[[a]], {a, nac[[c]]}, {lengthageclass[[c, a]]}]];

subsetn[v1_, v2_] 	:= Block[{}, v = Flatten[{v1, v2}]; Flatten[{v[[Range[na]]], Plus@@Take[v, -2]}]]; 

subsetp[v1_, v2_, wgt_] := Block[{}, v = Flatten[{v1, v2}]; Flatten[{v[[Range[na]]], Plus@@(wgt Take[v, -2])}]];


(* --------------------------------------------------
		SMOOTHING ROUTINES
----------------------------------------------------*)

(* Calculation of smoothing matrix. This matrix is based on a penalty matrix:
	n				= 90;
	pen				= Table[Switch[Abs[i - j], 0, 6, 1, -4, 2, 1, _, 0], {i, n}, {j, n}];
	pen[[{1, 2}, {1, 2}]] 		= {{1, -2}, {-2, 5}};
	pen[[{n - 1, n}, {n - 1,n}]] 	= {{5, -2}, {-2, 1}};
	wgt				= Table[0, {n}, {n}];
	Do[wgt[[5 i + 3, 5 i + 3]] 	= 1, {i, 0, nac[[1]] - 1}];
	makehat[c_] 			:= Inverse[wgt + c pen].wgt;
	hat				= makehat[5];
	hat1				= makehat[100];
	Put[hat, Global`inputpath <> "hatmatrix.m"]; *)

hat 	= ReadList[Global`inputpath <> "hatmatrix.m"][[1]];

fsmooth[x_] := Block[{}, 
        x1 = Flatten[Table[x[[i]], {i, nac[[1]]}, {5}]]; 
        Flatten[{Max0[(hat.x1)[[Range[na]]]], x[[nac[[1]]]]}]
	]; 

fsmooth1[x_] := Block[{}, 
	x1 = Flatten[Table[Log[x[[i]] + eps], {i, nac[[1]]}, {5}]]; 
        Flatten[{Exp[(hat.x1)[[Range[na]]]], x[[nac[[1]]]]}]
	]; 


(* --------------------------------------------------
		WRITING TO ASCII FILE
----------------------------------------------------*)

schrijf[naam_, dat_] := Block[{},

	fun1[x_] 	:= {Table[{WriteString[naam, x[[i]]], WriteString[naam, ";"]}, {i, Length[x]}]; WriteString[naam, "\n"]};
	fun2[x_, dep_] 	:= If[(dep == 2), fun1[x], Table[fun2[x[[i]], dep - 1], {i, Length[x]}]];
	OpenWrite[naam];
	fun2[dat, Depth[dat]];
	Close[naam]

	];

(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];


End[]


Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMImportUserSelections *)

(* :Context: CZMImportData` *)

(* :Author: Rudolf  T. Hoogenveen, Roel G.M. Breuls *)

(* :Summary:
   CZM package with functions to import the user selections of input*)

(* :Copyright: © 2004 by Rudolf Hoogenveen/Roel Breuls *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM July 2004
		2.0 first release CZM 2005, version March, update menus
		3.0 version november 2005 
		3.1 version March 2007 *)

(* :Keywords: user selections, import *)

BeginPackage["CZMImportData`CZMImportUserSelections`",
	{"CZMMain`CZMMain`",
	"CZMInitialization`CZMLogFile`",
	"CZMInitialization`CZMDefaultFileNames`",
	"CZMInitialization`CZMConstants`",
	"CZMInitialization`CZMFunctions`",
	"CZMDefineScenarios`CZMDefineRuns`"}]

risknames::usage 		= "risknames[[r]]: names of all risk factors distinguished"
nrd0::usage 			= "total number of risk factors distinguished"
nrc0::usage 			= "total number of continuously distributed risk factors distinguished"
riskind::usage 			= "riksind[[r]]: selected risk factors, order is given in the user input file, seel also risknames"
riskindc0::usage 		= "riksindc0[[r]]: continuously distributed risk factors"
riskindcinv::usage		= "riskindcinv[[r]]: order numbers of continuously distributed risk factors" 	

disnamesnoncancers::usage 	= "disnamesnoncancers[[d]]: names of all non-cancer chronic diseases distinguished"
disnamescancers::usage 		= "disnamescancers[[d]]: names of all forms of cancer distinguished"
disnames::usage 		= "disnames[[d]]: names of all implemented diseases, see also disnamesnoncancers and disnamescancers"
ndnoncanc::usage 		= "number of non-cancer diseases"
ndcancers::usage 		= "number of forms of cancer"
nd0::usage 			= "total number of diseases, equals ndnoncanc + ndcancers"
disind0::usage 			= "disind0[[d]]: selected diseases, order is given in the user input file, see also disnames"
disindrisk::usage		= "selection parameter indicating selection of all diseases related to risk factor (1) or not (0)"

agemin::usage			= "selected minimum age value"
agemax::usage			= "selected maximum age value"
agesel::usage 			= "agesel[[a]]: initial age range of the cohort used in the simulations, equals (see) agemin .. agemax"
agesel1::usage 			= "agesel1[[a]]: indicator variable that describes the age-years selected, see agesel"
agerange::usage			= "agerange[[a]]: life course age range of the cohort, equals agemin .. agemax + nstap"
migpopind::usage 		= "selection parameter indicating whether migration is included (1) or not (0)"
birthind::usage 		= "selection parameter indicating whether new borns are included (1) or not (0)"
patientsel::usage		= "restricted to specific disease patient population"

mortothind::usage		= "selection parameter indicating mortality effects through non-modeled disease (1) or not (0)"
excessmortcond::usage		= "selection parameter indicating way of adjusting excess mortality rates for double counting (1,2)"
RRsmokduurind::usage		= "selection parameter indicating use of former smoking RR's dependent on time since cessation (1) or not"
riskcontind::usage		= "selection parameter indicating use of continuously distributed risk factors (1) or not (0)"
trackingind::usage		= "selection parameter indicating use of tracking of individual risk factors (1) or not (0)"
userriskdata::usage		= "selection parameter indicating using user-provided risk factor prevalence data (1) or not"

modelnames::usage		= "modelnames[[m]]: names of different CZM model versions available"
nmodel::usage			= "number of different CZM model versions, see also modelnames"
modelsel::usage			= "modelsel[[m]]: selected CZM model versions, seel also modelnames"
compareselect::usage		= "selection parameter indicating comparing different selections (runs) (1) or not (0)"

nstap::usage 			= "selected number of time steps in the simulation"
nscen0::usage 			= "selected number of user-defined scenarios excluding random parameter drawings"
analyse::usage			= "selected type of analyses: 0: standard, 1: sensitivity analyses, 2: risk factor tracking"
sensparameters::usage		= "model parameters selected for sensitivity analysis"

bugind::usage			= "indicator of printing debugging information (1) or not (0)"
ageclssel::usage		= "ageclssel: fixed age class for presentation over time"

seqPAR::usage			= "seqPAR[[z]]: sequence of scenarios for PAR calculations"


Begin["`Private`"]	


Print["CZMImportUserSelections package is evaluated"];

printbug[c_] 	:= If[(bugind == 1), Print[{"CZMImportUserSelections", c}]];
printtijd	:= If[(bugind == 1), Print[{"CPU time ", TimeUsed[]}]];
bugind 		= 1;

appltype	= StringTake[ToString[Global`application], {8, 11}];

input		= ReadList[Global`inputpath <> userinput, Word, WordSeparators -> {"/t", "="}];

(* s0 to s8 denote the position of the KEYWORDS in the userinput file *)

kop	= {	"DEMOGRAPHIC CONSTANTS SELECTED",
		"EPIDEMIOLOGICAL CONSTANTS SELECTED",
		"MODEL VERSIONS SELECTED",
		"SCENARIO CHARACTERISTICS SELECTED",
		"RISK FACTORS SELECTED",
		"CHRONIC DISEASES SELECTED",
		"NON-CANCER",
		"CANCER",
		"END"};

s0	= Flatten[Position[input, kop[[1]]]][[1]];
s1	= Flatten[Position[input, kop[[2]]]][[1]];
s2	= Flatten[Position[input, kop[[3]]]][[1]];
s3	= Flatten[Position[input, kop[[4]]]][[1]];
s4 	= Flatten[Position[input, kop[[5]]]][[1]];
s5 	= Flatten[Position[input, kop[[6]]]][[1]];
s6 	= Flatten[Position[input, kop[[7]]]][[1]];
s7 	= Flatten[Position[input, kop[[8]]]][[1]];
s8 	= Flatten[Position[input, kop[[9]]]][[1]];


(* -----------------------------------------------
           CONSTANTS
   -----------------------------------------------*)

printbug["1."];


(* DEMOGRAPHIC SELECTIONS *)

printbug["1.1"];

constants1 = ToExpression[Take[input, {s0 + 2, s1 - 1, 2}]];

agemin			= constants1[[1]] + 1;
agemax			= Minc[constants1[[2]] + 1, na1];

migpopind		= constants1[[3]];
birthind		= constants1[[4]];
patientsel		= constants1[[5]];

naam1			= {"agemin", "agemax", "migpopind", "birthind", "patientsel"};


(* EPIDEMIOLOGICAL SELECTIONS *)

printbug["1.2"];

constants2 = ToExpression[Take[input, {s1 + 2, s2 - 1, 2}]];

mortothind		= constants2[[1]];
excessmortcond		= constants2[[2]];
RRsmokduurind		= constants2[[3]];

userriskdata		= constants2[[4]];

riskcontind		= 0;
trackingind		= 0;

If[(excessmortcond == 2),
	Print["if adjusting double-counted mortality numbers using Stat Netherlands mortality data (excessmortcond=2), " <>
		"mortality effect through other causes allowed (thus: mortothind = 1)"];
	mortothind = 1];									(* DEFAULT SELECTION *)

naam2			= {"mortothind", "excessmortcond", "RRsmokduurind", "riskcontind", "trackingind", "userriskdata"};
		

(* MODEL VERSIONS SELECTED *)

printbug["1.3"];

modelnames 		= Take[input, {s2 + 1, s3 - 1, 2}]; 
modelsel		= ToExpression[Take[input, {s2 + 2, s3 - 1, 2}]];

 
If[(modelsel[[5]] == 1) && (patientsel == 0), Print["model 5 is only defined on patient population (thus: modelsel[[5]] = 0)"];
	modelsel[[5]] = 0];									(* DEFAULT SELECTION *)

nmodel			= Length[modelnames];


(* SCENARIO CHARACTERISTICS SELECTED *)

printbug["1.4"];

constants4 = ToExpression[Take[input, {s3 + 2, s4 - 1, 2}]];

nstap			= constants4[[1]];
nscen0			= constants4[[2]];	
analyse			= constants4[[3]];

naam4			= {"nstap", "nscen", "analyse"};


(* -----------------------------------------------
           RISK FACTORS
   -----------------------------------------------*)

printbug["1.5"];

risknames		= Take[input, {s4 + 1, s5 - 1, 2}];
riskind1		= ToExpression[Take[input, {s4 + 2, s5 - 1, 2}]]; 
riskind			= Flatten[Position[ToExpression[riskind1], 1]];
riskindc0		= {2, 3, 4, 5};
riskindcinv		= Table[0, {Length[risknames]}];
Do[riskindcinv[[riskindc0[[r]]]] = r, {r, Length[riskindc0]}];

nrd0			= Length[risknames]; 
nrc0			= Length[riskindc0];


(* -----------------------------------------------
           DISEASES
   -----------------------------------------------*)

printbug["1.6"];
disindrisk		= ToExpression[Take[input, {s5 + 2, s6 - 1, 2}]][[1]]; 

disnamesnoncancers 	= Take[input, {s6 + 1, s7 - 1, 2}]; 
ndnoncanc		= Length[disnamesnoncancers];
disindnoncanc		= ToExpression[Take[input, {s6 + 2, s7 - 1, 2}]]; 

disnamescancers 	= Take[input, {s7 + 1, s8 - 1, 2}]; 
ndcancers		= Length[disnamescancers];
disindcanc		= ToExpression[Take[input, {s7 + 2, s8 - 1, 2}]];

disnames		= Join[disnamesnoncancers, disnamescancers];

disind0			= Join[disindnoncanc, disindcanc];

disind0			= Flatten[Position[ToExpression[disind0], 1]];

nd0			= ndnoncanc + ndcancers;


(* -----------------------------------------------
           EXCLUDING JOINT MODELS IF RISK FACTORS ARE SMOKING AND/OR BMI AND ALL RELATED DISEASES ARE SELECTED
   -----------------------------------------------*)
printbug["1.7"];

If[(disindrisk == 1) && (MemberQ[riskind, 1]||MemberQ[riskind,4]),
	Print["if selecting all smoking and/or BMI related diseases , then all joint models are excluded (thus: modelsel[[2,3,4]]=0)"];
	modelsel[[{2, 3,4}]] = 0];								(* DEFAULT SELECTION *)


(* -----------------------------------------------
           INTERACTIVE PARAMETER INPUT
   -----------------------------------------------*)
			

(* -----------------------------------------------
           OVERRULING SELECTIONS IN EXTRA MODEL RUNS
   -----------------------------------------------*)

If[(appltype != "outp"),

printbug["3."];

	ToExpression[makerun];

printbug["3.1"];

	agesel			= Range[agemin, agemax];
	agesel1 		= Table[0, {na1}]; 
	agesel1[[agesel]] 	= 1; 
	agerange 		= Range[agemin, Minc[agemax + nstap, na1]];

(* DEFAULT INDICATOR VALUES IN CASE OF NON-FULL POPULATION *)

printbug["3.2"];

	If[((agemax - agemin) < 85) || ((Quotient[patientsel, 10] > 0) && (Mod[patientsel, 10] == 0)),
		Print["no migration or newborns in case of restriction of age range or (diseased) population 
				(thus: migpopind = birthind = 0)"];
		migpopind	= 0;								(* DEFAULT SELECTION *)
		birthind	= 0
		];

printbug["3.3"];

	If[(RRsmokduurind == 1),
		Print["risk factor smoking selected in case of duration dependent selected (thus: riskind[[1]] = 1)"];
		riskind = Union[{1}, riskind]];							(* DEFAULT SELECTION *)

	];

(* -----------------------------------------------
           READING SELECTIONS FROM FILE
   -----------------------------------------------*)

printbug["4."];

If[(appltype == "outp"),

printbug["4.1"];

	Do[sel = Read[Global`resfile], {1 + 2 (run - 1) + 1}];
	
printbug["4.2"];

	
	riskindd	= sel[[1]];
	disind		= sel[[2]];
	excessmortcond	= sel[[3]];
	mortothind	= sel[[4]];
	agemin		= sel[[5]];
	agemax		= sel[[6]];
	modelsel	= sel[[7]];
	nstap		= sel[[8]];
	nscen0 = nscen	= sel[[9]];

	nrd		= Length[riskindd];
	nd		= Length[disind];				
	agerange 	= Range[agemin, Minc[agemax + nstap, na1]];
	analyse		= 0;

	Print["standard analysis if only output results are presented from former runs (thus: analyse = 0)"]

	];


(* -----------------------------------------------
           MODEL INPUT PARAMETERS FOR SENSITIVITY ANALYSIS
   -----------------------------------------------*)

printbug["5."];

sensparameters = Table[0, {14}];

If[(analyse == 1),

printbug["5.1"];

	input = ReadList[Global`inputpath <> "sensinput011205.txt", Word, WordSeparators -> {"/t", "="}];

	(* s0 to s1 denote the position of the KEYWORDS in the userinput file *)

	s0	= Flatten[Position[input, "MODEL INPUT PARAMETERS SELECTED"]][[1]];
	s1 	= Flatten[Position[input, "END"]][[1]];

	sensparameters = ToExpression[Take[input, {s0 + 2, s1 - 1, 2}]];

	If[(disindnoncanc[[1]] == 0) && (disindnoncanc[[4]] == 0),
		Print["for sensitivity analysis, no disease selected with case fatality (thus: sensparameters[[{7,12}]] = 0)"];
		sensparameters[[{7, 12}]] *= 0						(* DEFAULT SELECTION *)
		];


	If[(riskcontind == 0),
		Print["for sensitivity analysis, no continuous risk factors selected (thus: sensparameters[[{3,4,9}]] = 0)"];
		sensparameters[[{3, 4, 9}]] = 0						(* DEFAULT SELECTION *)
		];
	
	If[(trackingind == 0),
		Print["for sensitivity analysis, no tracking selected (thus: sensparameters[[10]] = 0)"];
		sensparameters[[10]] = 0						(* DEFAULT SELECTION *)
		];

	If[(RRsmokduurind == 0),
		Print["for sensitivity analysis, no duration dependent smoking events (thus: sensparameters[[{13,14}]] = 0)"];
		sensparameters[[{13, 14}]] *= 0						(* DEFAULT SELECTION *)
		],

	sensparameters = Table[0, {14}]

	];
	

(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];

WriteString[logfile,

	"Selected Risk Factors \n\n",

		"\t" <> ToString[risknames[[riskind]]] 			<> "\n\n",

	"Demographic Selections\n\n",

		"\t" <> "agemin: " 		<> ToString[agemin] 		<> "\n",
		"\t" <> "agemax: " 		<> ToString[agemax] 		<> "\n",
		"\t" <> "migration: " 		<> ToString[migpopind] 		<> "\n",
		"\t" <> "birth: " 		<> ToString[birthind] 		<> "\n",
		"\t" <> "restricted to disease: " <> ToString[patientsel] 	<> "\n\n",

	"Epidemiologic Selections\n\n",

		"\t" <> "mortothind: " 		<> ToString[mortothind] 	<> "\n",	
		"\t" <> "excessmortcond: " 	<> ToString[excessmortcond] 	<> "\n",	
		"\t" <> "RRsmokduurind: " 	<> ToString[RRsmokduurind] 	<> "\n",
		"\t" <> "riskcontind: " 	<> ToString[riskcontind] 	<> "\n",
		"\t" <> "trackingind: " 	<> ToString[trackingind] 	<> "\n",
		"\t" <> "userriskdata: " 	<> ToString[userriskdata] 	<> "\n\n",
		
	"Model Version Selections\n\n",

		modelnames[[Select[Range[nmodel] modelsel, Positive]]] 	<> "\n\n",
		
	"Scenario Characteristics Selections\n\n",

		"\t" <> "nstap: " 		<> ToString[nstap] 		<> "\n",
		"\t" <> "nscen0: " 		<> ToString[nscen0] 		<> "\n",
		"\t" <> "analyse: " 		<> ToString[analyse] 		<> "\n\n"
	
]; 

End[]

Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMImportDemography *)

(* :Context: CZMImportData` *)

(* :Author: Rudolf T. Hoogenveen, Roel G.M. Breuls *)

(* :Summary:
   CZM input data routine imports demographic data *)

(* :Copyright: © 2004 by Roel G.M. Breuls/Rudolf Hoogenveen *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM July 2004
		2.0 first release CZM 2005, version March
		3.0 version november 2005 
		3.1 version March 2007 *)


(* :Keywords: demographic data, import *)


BeginPackage["CZMImportData`CZMImportDemography`",
	{"CZMInitialization`CZMLogFile`",
	"CZMInitialization`CZMDefaultFileNames`",
	"CZMInitialization`CZMConstants`",
	"CZMInitialization`CZMFunctions`"}]


npop0::usage 		= "npop0[[g,a]]: initial population numbers, specified by gender (g=1..ng) and age (a=1..na1)"
npop1::usage 		= "npop1[[g,ai]: initial population numbers, aggregated to 5 year ageclass values."
morttot0::usage		= "mortot0[[g,ai]]: empirical total mortality rates, specified by gender (g) and ageclass (ai=1..nac[2])"

nbirth0::usage 		= "nbirth0[[n,g]]: birth numbers specified by year and gender, specification see input file"

migpop0::usage 		= "migpop0[[n,g,a]]: net migrantion numbers specified by year, gender and age, specification see input file"
migpopyear::usage	= "migpopyear[[n]]: years for which migration data are given"


Begin["`Private`"]


Print["CZMImportDemography package is evaluated"]

(* INITIALIZATION DATA FILE *)

dat		= OpenRead[Global`inputpath <> deminput];
Skip[dat, Record, RecordSeparators->{{"(*"}, {"*)"}}];
Read[dat, Word];


(* POPULATION NUMBERS *)

npop0 		= Table[0, {ng}];
Do[	Read[dat, Word];
	npop0[[g]] = Read[dat, Table[Number, {na1}]],
	{g, ng}];	
npop1 		= Table[aggreg[npop0[[g]], 1], {g, ng}];
npop2 		= Table[aggreg[npop0[[g]], 2], {g, ng}];


(* MORTALITY NUMBERS *)

mort2		= Table[0, {ng}];
Read[dat, Table[Word, {2}]];
div		= Read[dat, Number];
mort2 		= Partition[Read[dat, Table[Number, {ng nac[[2]]}]], nac[[2]]] / div;
morttot0 	= N[Table[aggregc[(mort2 npop2)[[g]], 2, 1] / npop1[[g]], {g, ng}]];


(* SEXRATIO *)

Read[dat, Word];
sexratio 	= Read[dat, Number];
sexratio 	= {sexratio, 1} / (1 + sexratio);


(* NUMBERS OF NEWBORNS *)

Read[dat, Table[Word, {2}]];
ndat		= Read[dat, Number];
nbirthtot 	= Read[dat, Table[Number, {2 ndat}]];
nbirthtot 	= Transpose[Partition[nbirthtot, 2]][[2]];
nbirth0 	= Transpose[Table[nbirthtot sexratio[[g]],{g, ng}]];


(* NET NUMBERS OF MIGRANTS *)

Read[dat, Table[Word, {2}]];
ndat		= Read[dat, Number];
migpop0 	= Read[dat, Table[Number, {ndat (ng na1 + 1)}]];
Close[dat];
migpopyear	= (Transpose[Partition[migpop0, 2na1 + 1]])[[1]];
migpopyear	= migpopyear - migpopyear[[1]] + 1;
migpop0 	= N[Partition[Partition[Flatten[Transpose[Drop[Transpose[Partition[migpop0, ng na1 + 1]], 1]]], na1], ng]];


(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];


End[]


Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMImportRiskFactors *)

(* :Context: CZMImportData` *)

(* :Author: Rudolf T. Hoogenveen, Roel G.M. Breuls *)

(* :Summary:
   CZM import data routine imports initial riskfactor class prevalence 
   and transition rates *)

(* :Copyright: © 2004 by Rudolf Hoogenveen/Roel Breuls *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM July 2004
		2.0 first release CZM 2005, version March, update data
		3.0 version november 2005 
		3.1 version March 2007 *)

(* :Keywords: risk factor data, import *)


BeginPackage["CZMImportData`CZMImportRiskFactors`",
	{"CZMInitialization`CZMLogFile`",
	"CZMInitialization`CZMDefaultFileNames`",
	"CZMInitialization`CZMConstants`",
	"CZMInitialization`CZMFunctions`",
	"CZMImportData`CZMImportUserSelections`"}]


prisk0::usage 		= "prisk0[[r,g,ri,ai]]: all initial risk factor class prevalence rates" 
priskinc0	::usage = "priskinc0[[r,g,ri,ai]]: all initial risk factor class prevalence rates (new disease cases)"
priskDM0::usage 	= "priskDM0[[r,g,ri,ai]]: all initial risk factor class prevalence rates (within current disease (DM) cases)"

transrisk0::usage 	= "transrisk0[[r,g,ri,ai]]: all initial risk factor class transition rates"
transriskind0::usage	= "transriskind0[[r,ri,rj]]: risk factor class transition indicator values"
ncr0::usage 		= "ncr0[[r]]: number of classes for all risk factors"

riskdispair::usage	= "riskdispair[[r]]: risk factors restricted to diseases"
riskdispairinv::usage	= "riskdispairinv[[r]]: diseases to which risk factors are restricted, see riskdispair"

riskDMpair::usage	= "riskDMpair[[r]]: empirical risk factor distributions within patients"
riskDMpairinv::usage	= "riskDMpairinv[[r]]: diseases for which empirical risk factor distributions are provided, see riskDMpair"


Begin["`Private`"]


Print["CZMImportRiskFactors package is evaluated"]

prisk0 = priskinc0	= Table[0, {nrd0}, {ng}];

ncr0			= Table[0, {nrd0}];
transrisk0		= Table[0, {nrd0}, {ng}];
transriskind0		= Table[1, {nrd0}];


(* ----------------------------------------------- 
   RISK FACTOR DATA INPUT ROUTINE
   -----------------------------------------------*)
	
readriskdata[r_, nac_] := Block[{},
	Skip[dat, Record, RecordSeparators -> {{"(*"}, {"*)"}}];
	Read[dat, Word];

(* #RISK FACTOR CLASSES *)

	ncr0[[r]] = Read[dat, {Word, Number}][[2]];

(* INITIAL RISK FACTOR CLASS PREVALENCE DATA *)

	Do[	div 		= N[Read[dat, {Table[Word, {2}], Number}][[2]]];
		prisk0[[r, g]] 	= Partition[Read[dat, Table[Number, {ncr0[[r]] nac}]], nac] / div,
		{g, ng}];


(* INITIAL RISK FACTOR CLASS PREVALENCE DATA (NEW DISEASE CASES) *)

	If[MemberQ[Transpose[riskdispair][[1]], r],

		Do[	div 		= N[Read[dat, {Table[Word, {2}], Number}][[2]]];
			priskinc0[[r, g]] = Partition[Read[dat, Table[Number, {ncr0[[r]] nac}]], nac] / div,
			{g, ng}]];

(* RISK FACTOR CLASS TRANSITIONS SELECTED *)

	ntrans		= Read[dat, {Word, Number}][[2]];
	transind	= Partition[Read[dat, Table[Number, {2 ntrans}]], 2];

(* RISK FACTOR CLASS TRANSITION RATE DATA *)

	Do[	div 			= N[Read[dat, {Table[Word, {2}], Number}][[2]]];
		transrisk0[[r, g]] 	= Table[Read[dat, Table[Number, {nac}]], {ri, Length[transind]}] / div;
		transrisk0[[r, g]] 	= Join[{Table[0, {nac}]}, transrisk0[[r, g]]],
		{g, ng}];

	Close[dat];

	transriskind0[[r]] = Table[1, {ncr0[[r]]}, {ncr0[[r]]}];

	Do[	transriskind0[[r, transind[[ri, 1]], transind[[ri, 2]]]] = ri + 1, 
		{ri, Length[transind]}]

	]; (* READRISKDATA *)


(* ----------------------------------------------- 
   RISK FACTORS ONLY RELEVANT TO DISEASED POPULATIONS, E.G. HBA1C AND DIABETES
   -----------------------------------------------*)


riskdispair	= {{12, 7}};
riskdispairinv 	= Table[0, {nrd0}];
Do[riskdispairinv[[riskdispair[[r, 1]]]] = riskdispair[[r, 2]], {r, Length[riskdispair]}];


(* SMOKING *)

dat		= OpenRead[Global`inputpath <> smokinput];
readriskdata[1, nac[[1]]];
If[(RRsmokduurind == 1), transrisk0[[1, Range[ng], transriskind0[[1, 2, 3]]]] *= .76];


(* SYSTOLIC BLOOD PRESSURE *)

dat 		= OpenRead[Global`inputpath <> SBPinput]; 
readriskdata[2, nac[[1]]];


(* TOTAL CHOLESTEROL *)
	
dat 		= OpenRead[Global`inputpath <> cholinput];  
readriskdata[3, nac[[1]]];


(* BMI *)
	 
dat 		= OpenRead[Global`inputpath <> BMIinput];
readriskdata[4, nac[[1]]];


(* PHYSICAL ACTIVITY *)

dat 		= OpenRead[Global`inputpath <> lichactinput];
readriskdata[5, na1];


(* CONSUMPTION OF ALCOHOL *)

dat 		= OpenRead[Global`inputpath <> alcoinput];
readriskdata[6, nac[[1]]];


(* CONSUMPTION OF FATTY ACIDS *)

dat 		= OpenRead[Global`inputpath <> verzvetinput];
readriskdata[7, nac[[1]]];


(* CONSUMPTION OF TRANS FATTY ACIDS *)

dat 		= OpenRead[Global`inputpath <> transvetinput];
readriskdata[8, nac[[1]]];


(* CONSUMPTION OF FRUIT *)

dat 		= OpenRead[Global`inputpath <> fruitinput];
readriskdata[9, nac[[1]]];


(* CONSUMPTION OF VEGETABLES *)

dat 		= OpenRead[Global`inputpath <> groenteinput];
readriskdata[10, nac[[1]]];


(* CONSUMPTION OF FISH *)

dat 		= OpenRead[Global`inputpath <> visinput];
readriskdata[11, nac[[1]]];

(* HBA1C *)

dat 		= OpenRead[Global`inputpath <> HbA1cinput];
readriskdata[12, nac[[1]]];


(* ----------------------------------------------- 
   EMPIRICAL RISK FACTOR DISTRIBUTIONS WITHIN PATIENTS
   -----------------------------------------------*)

If[(userriskdata >= 1),


	dat		= OpenRead[Global`inputpath <> riskdisinput];
	skipcomment[dat]; 
        Skip[dat, Word];
	npair 		= Read[dat, Number];
	riskDMpair 	= Table[0, {npair}];
	priskDM0 	= Table[0, {npair}, {ng}];

	Do[	skipcomment[dat];
		riskDMpair[[r]] = Transpose[Read[dat, Table[{Word, Number}, {2}]]][[2]];

		Do[	Skip[dat, String];
			div	= N[Read[dat, {Table[Word, {2}], Number}][[2]]];
			priskDM0[[r, g]] = Partition[Read[dat, Table[Number, {ncr0[[riskDMpair[[r, 1]]]] nac[[1]]}]], nac[[1]]] / div,

			{g, ng}],

		{r, npair}];

	Close[dat];

	riskDMpairinv = Table[{}, {nrd0}];
	Do[riskDMpairinv[[riskDMpair[[r, 1]]]] = Flatten[{riskDMpair[[r, 2]], riskDMpairinv[[riskDMpair[[r, 1]]]]}], {r, npair}]];
	

(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];

End[]


Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMImportRelativeRisks *)

(* :Context: CZMImportData` *)

(* :Author: Rudolf T. Hoogenveen, Roel G.M. Breuls *)

(* :Summary:
   CZM import data routine imports relative risks of risk factors on diseases*)

(* :Copyright: © 2004 by Rudolf Hoogenveen/Roel Breuls *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM July 2004
		2.0 first release CZM 2005, version March, update data
		3.0 version november 2005 
		3.1 version March 2007; import relative risks routine *)

(* :Keywords: relative risks, import *)

BeginPackage["CZMImportData`CZMImportRelativeRisks`",
	{"CZMInitialization`CZMLogFile`",
	"CZMInitialization`CZMDefaultFileNames`",
	"CZMInitialization`CZMConstants`",
	"CZMInitialization`CZMFunctions`",
	"CZMImportData`CZMImportUserSelections`",
	"CZMImportData`CZMImportRiskFactors`",
	"CZMImportData`CZMImportDiseaseData`"}]

RRdis0::usage 		= "RRdis0[[d,g,a]]: relative risks for one disease on another disease incidence"
RRdisind::usage 	= "RRdisind[[d,d1]]: pointer to elements of vector RRdis"
RRdisinddata::usage 	= "RRdisinddata[[d]]: lists of independent co-morbid diseases"
RRdisinddatasel::usage 	= "RRdisinddatasel[[d]]: lists of independent co-morbid diseases adjusted for risk factors"

RRcasefat0::usage	= "RRcasefat0[[d,g,a]]: relatve risks for one disease on another disease case fatality"
RRcasefatind		= "RRcasefatind[[d,d1]]: pointer to elements of vector RRcasefat"

RRrisk0::usage 		= "RRrisk0[[r,d,g,ri,a]]: relative risks for each risk factor r for each related disease,
				specified by gender (g), risk factor class (ri) and age (a). 
				Only values for related diseases are stored in RRrisk (See also RRiskind0)
				d=1 refers to NO RELATION between the risk factor and the disease (i.e. RR=1) 
				d=2 is associated with all cause mortality. 
				Positions d>=3 contain the RRs for the diseases associated with the risk factor."
RRriskind0::usage 	= "RRiskind0[[r,d]]: the pointer to the index in RRrisk0 for each risk factor r and disease d" 
disriskrelated::usage	= "disriskrelated[[r,d]]: diseases related to each risk factor"
logRRsmokduur0::usage	= "logRRsmokduur[[d,g]]: parameters of log-linear decrease of former smoker RR's with stopping time"
relapsecoeff::usage	= "relapsecoeff[[g]]: parameters of decrease of relapse rates with stopping time"

riskdisprevind::usage	= "pairs of empirical risk factor distributions within disease patients"
riskdisprev0::usage	= "empirical risk factor distributions within disease patients data"

pdisDM::usage		= "empirical disease prevalence rates within diabetics"
pdisDMpair::usage	= "pairs of diseases with empirical disease prevalence rates within diabetics"


Begin["`Private`"]	


Print["CZMImportRelativeRisks package is evaluated"]


(* ----------------------------------------------- 
   INPUT RELATIVE RISKS ROUTINE 
   -----------------------------------------------*)
	
readriskdata[r_] := Block[{},

	Skip[dat, Record, RecordSeparators -> {{"(*"}, {"*)"}}];
	Read[dat, Word];
	Read[dat, Word];
	nd1		= Read[dat, Number];
	RRrisk0[[r]]	= Table[0, {nd1 + 1}, {ng}];
	RRrisk0[[r, 1]] = Table[1, {ng}, {ncr0[[r]]}, {nac[[1]]}];

	Do[	Skip[dat, Word];
		RRriskind0[[r, Read[dat, Number] + 1]] = d;
		Do[	Skip[dat, Word];
			RRrisk0[[r, d + 1, g]] = Partition[Read[dat, Table[Number, {ncr0[[r]] nac[[1]]}]], nac[[1]]], {g, ng}],
		{d, nd1}];

	Close[dat]

	]; (* READRISKDATA *)

(* ----------------------------------------------- 
   EPIDEMIOLOGICAL RISK FACTORS 
   -----------------------------------------------*)

(* SMOKING *)

RRrisk0		= Table[0, {nrd0}];
RRriskind0	= Table[0, {nrd0}, {nd0 + 1}];

dat		= OpenRead[Global`inputpath <> RRsmokinput];
readriskdata[1];

(* CHECK AND ADJUSTMENT: 1 = RR NEVER SMOKERS <= RR FORMER SMOKERS <= RR CURRENT SMOKERS *)

RRrisk0[[1]] 	= Max1[RRrisk0[[1]]]; 
Do[RRrisk0[[1, d, g, 3]] = Minc[RRrisk0[[1, d, g, 2]], RRrisk0[[1, d, g, 3]]],
		{d, Length[RRrisk0[[1]]]}, {g, ng}]; 


(* SYSTOLIC BLOOD PRESSURE *)

dat 		= OpenRead[Global`inputpath <> RRSBPinput]; 
readriskdata[2];


(* TOTAL CHOLESTEROL LEVEL *)

dat 		= OpenRead[Global`inputpath <> RRcholinput]; 
readriskdata[3];


(* BMI *)

dat 		= OpenRead[Global`inputpath <> RRBMIinput]; 
readriskdata[4];


(* PHYSICAL ACTIVITY *)

dat 		= OpenRead[Global`inputpath <> RRlichactinput]; 
readriskdata[5];


(* CONSUMPTION OF ALCOHOL *)

dat 		= OpenRead[Global`inputpath <> RRalcoinput]; 
readriskdata[6];


(* CONSUMPTION OF FATTY ACIDS *)

dat 		= OpenRead[Global`inputpath <> RRverzvetinput]; 
readriskdata[7];


(* CONSUMPTION OF TRANS FATTY ACIDS *)

dat 		= OpenRead[Global`inputpath <> RRtransvetinput]; 
readriskdata[8];


(* CONSUMPTION OF FRUIT *)

dat 		= OpenRead[Global`inputpath <> RRfruitinput]; 
readriskdata[9];


(* CONSUMPTION OF VEGETABLES *)

dat 		= OpenRead[Global`inputpath <> RRgroenteinput]; 
readriskdata[10];


(* CONSUMPTION OF FISH (ACIDS) *)

dat 		= OpenRead[Global`inputpath <> RRvisinput]; 
readriskdata[11];


(* HbA1c *)

dat 		= OpenRead[Global`inputpath <> RRHbA1cinput]; 
readriskdata[12];

++RRriskind0;

disriskrelated	= Table[Flatten[Table[Select[Range[nd0], RRriskind0[[r, # + 1]] == d1 &],
	{d1, 3, Length[RRriskind0[[r]]]}]], {r, 1, nrd0}];



(* ----------------------------------------------- 
   RELATIVE RISKS FOR ONE DISEASE ANOTHER
   -----------------------------------------------*)

dat 		= OpenRead[Global`inputpath <> RRCVDinput]; 
Skip[dat, Record, RecordSeparators -> {{"(*"}, {"*)"}}];
Read[dat, Word];

(* CONSTRUCTION OF CO-MORBIDITY INDICATOR VALUES *)

nd1		= Read[dat, {Word, Number}][[2]];
RRdisinddata	= Table[0, {nd1}];
RRdisinddatasel	= Table[0, {nd1}];
RRdisind 	= Table[1, {nd0}, {nd0}]; 

(* FILLS IN CO-MORBIDITY RATE VALUES *)

RRdis0		= Table[0, {nd1 + 1}];
RRdis0[[1]]	= Table[1, {ng}, {nac[[1]]}];


Do[	RRdisinddata[[d]]	= Read[dat, {Word, Table[Number, {2}]}][[2]];
	RRdisind[[RRdisinddata[[d, 1]], RRdisinddata[[d, 2]]]] = d + 1;
	RRdisinddatasel[[d]]	= Read[dat, {Word, Number}][[2]];
	RRdis0[[d + 1]] 	= Partition[Read[dat, Table[Number, {ng nac[[1]]}]], nac[[1]]],
	{d, nd1}];

Close[dat];

RRdisinddatasel	= Select[Range[nd1] RRdisinddatasel, Positive];


(* ----------------------------------------------- 
   RELATIVE RISKS FOR CASE FATALITY = 1-MONTH MORTALITY
   -----------------------------------------------*)

dat 		= OpenRead[Global`inputpath <> RRcasefatinput]; 
Skip[dat, Record, RecordSeparators -> {{"(*"}, {"*)"}}];
Read[dat, Word];

(* CONSTRUCTION OF CO-MORBIDITY INDICATOR VALUES *)

nd1		= Read[dat, {Word, Number}][[2]];
RRcasefatinddata = Table[0, {nd1}];
RRcasefatind 	= Table[1, {nd0}, {nd0}]; 

(* FILLS IN CO-MORBIDITY RATE VALUES *)

RRcasefat0	= Table[0, {nd1 + 1}];
RRcasefat0[[1]]	= Table[1, {ng}, {nac[[1]]}];


Do[	RRcasefatinddata[[d]]	= Read[dat, {Word, Table[Number, {2}]}][[2]];
	RRcasefatind[[RRcasefatinddata[[d, 1]], RRcasefatinddata[[d, 2]]]] = d + 1;
	RRcasefat0[[d + 1]] 	= Partition[Read[dat, Table[Number, {ng nac[[1]]}]], nac[[1]]],
	{d, nd1}];

Close[dat];


(* ----------------------------------------------- 
   RISK FACTOR AND DISEASE DATA INPUT ROUTINE CONDITIONAL ON DISEASE PREVALENCE, TRANSFORMED TO RELATIVE RISK VALUES, NOT-USED
   -----------------------------------------------*)

If[(userriskdata == 1),
	
	readriskdata1[r_, nac_] := Block[{},
		Skip[dat, Record, RecordSeparators -> {{"(*"}, {"*)"}}];
		Read[dat, Word];

	(* #RISK FACTOR CLASSES *)

		Read[dat, {Word, Number}][[2]];

	(* INITIAL RISK FACTOR CLASS PREVALENCE DATA *)

		prev	= trans = Table[0, {ng}];

		Do[	div 		= N[Read[dat, {Table[Word, {2}], Number}][[2]]];
			prev[[g]] 	= Partition[Read[dat, Table[Number, {ncr0[[r]] nac}]], nac] / div,
			{g, ng}];

		transind	= Max[transriskind0[[r]]] - 1;

	(* RISK FACTOR CLASS TRANSITION RATE DATA, DATA READ, NOT USED *)

		Do[	div = N[Read[dat, {Table[Word, {2}], Number}][[2]]];
			trans[[g]] = Table[Read[dat, Table[Number, {nac}]], {ri, Max[transriskind0[[r]]] - 1}] / div;
			trans[[g]] = Join[{Table[0, {nac}]}, trans[[g]]],
			{g, ng}];

		Close[dat];

		{prev, trans}

		]; (* READRISKDATA1 *)

	readdisdata1 := Block[{},

		Skip[dat, Record, RecordSeparators -> {{"(*"}, {"*)"}}];
		Read[dat, Word];

		hnd	= Read[dat, {Word, Number}][[2]];
		pdisDM	= pdisDMpair = Table[0, {hnd}];
		div	= N[Read[dat, {Word, Number}][[2]]];

		Do[	pdisDMpair[[d]] = Read[dat, Table[Number, {2}]];
			pdisDM[[d]]	= Partition[Read[dat, Table[Number, {ng nac[[1]]}]], nac[[1]]] / div,

			{d, hnd}];

		Close[dat]

		];

	(* EMPIRICAL RISK FACTOR DISTRIBUTIONS WITHIN DISEASE GROUPS, NOT USED *)

	(* BMI & DIABETES *)

	riskdisprevind = {{4, 7}};						
	dat 	= OpenRead[Global`inputpath <> "BmiInputDm280405.txt"];
	WriteString[logfile, "\t" <> "BmiInputDm280405.txt" <> "\n\n"];
	riskdisprev0	= {readriskdata1[riskdisprevind[[1, 1]], nac[[1]]][[1]]};

	(* EMPIRICAL DISEASE PREVALENCE RATES WITHIN DISEASE GROUPS *)

	If[(1 == 0),

		dat = OpenRead[Global`inputpath <> "disinputDM.txt"];
		WriteString[logfile, "\t" <> "disinputDM.txt" <> "\n\n"];
		readdisdata1;

		(* CALCULATED RELATED DISEASE PREVALENCE RATE RATIO *)

		pcomorbB = Table[pdisDM[[d, g]] (1 - pdis0[[pdisDMpair[[d, 2]], g]]) /
					(pdis0[[pdisDMpair[[d, 1]], g]] - pdisDM[[d, g]] pdis0[[pdisDMpair[[d, 2]], g]]),
				{d, Length[pdisDMpair]}, {g, ng}];

		(* ADJUSTMENT OF RELATIVE RISKS *)

		Do[If[(RRdisind[[pdisDMpair[[d, 1]], pdisDMpair[[d, 2]]]] == 1),
	
				(* NEW ASSOCIATION DATA ADDED *)

				RRdis0 = Join[RRdis0, {pcomorbB[[d]]}];
				RRdisind[[pdisDMpair[[d, 1]], pdisDMpair[[d, 2]]]] = Length[RRdis0],

				(* OLD ASSOCIATION DATA OVERWRITEN *)
	
				RRdis0[[RRdisind[[pdisDMpair[[d, 1]], pdisDMpair[[d, 2]]]]]] = pcomorbB[[d]]

				],
			{d, Length[pdisDMpair]}]

		]

	];


(* ----------------------------------------------- 
   PARAMETERS OF LOG-LINEAR MODELS OF DECREASE OF ALL CAUSE MORTALITY AND
   DISEASE INCIDENCE RR's WITH TIME SINCE SMOKING CESSATION
   -----------------------------------------------*)

dat 		= OpenRead[Global`inputpath <> smokduurinput]; 
Skip[dat, Record, RecordSeparators -> {{"(*"}, {"*)"}}];
Read[dat, Word];

logRRsmokduur0	= Table[0, {1 + Plus@@Sign[RRriskind0[[1]] - 1]} ];

logRRsmokduur0[[1]] = Table[0, {ng}, {2}];

Do[	Read[dat, Word];
	logRRsmokduur0[[d]] = Partition[Read[dat, Table[Number, {4}]], 2],
	{d, 2, Length[logRRsmokduur0]}];

Read[dat, Word];
relapsecoeff = Partition[Read[dat, Table[Number, {2 ng}]], 2];

Close[dat];


(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];

End[]


Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMImportDiseaseData *)

(* :Context: CZMImportData` *)

(* :Author: Rudolf T. Hoogenveen, Roel G.M. Breuls *)

(* :Summary:
   CZM import data routine imports incidences, prevalences, remission,
	case fatality and excess mortality rates of diseases*)

(* :Copyright: © 2004 by Rudolf Hoogenveen/Roel Breuls *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM July 2004
		2.0 first release CZM 2005, version March, partial update data DisMod 2005
		3.0 version november 2005 
		3.1 version March 2007 *)

(* :Keywords: disease data, import *)


BeginPackage["CZMImportData`CZMImportDiseaseData`",
	{"CZMInitialization`CZMLogFile`",
	"CZMInitialization`CZMDefaultFileNames`",
	"CZMInitialization`CZMConstants`",
	"CZMInitialization`CZMFunctions`",
	"CZMImportData`CZMImportUserSelections`",
	"CZMImportData`CZMImportDemography`"}]


inc0::usage		= "inc0[[d,g,ai]]: empirical disease incidence rates"
rem0::usage		= "rem0[[d,g,ai]]: unique empirical disease remission rates, see also remind0"
pdis0::usage		= "pdis0[[d,g,ai]]: empirical initial disease prevalence rates"
excessmort0::usage	= "excessmort0[[d,g,ai]]: calculated disease-related excess mortality rates"
causemort0::usage	= "causemort0[[d,g,ai]]: initial cause-specific mortality rates"
remind0::usage		= "remind0[[d]]: for each disease d, the pointer to the index in variable rem0, see also rem0"	
casefat0::usage		= "casefat0[[d,g,ai]]: case fatality (1-month mortality) rates for all diseases"	
casefatind0::usage	= "casefatind0[[d]]: pointer to the index in casefat0 for each disease d, see also casefat0"	

nonmodelpdis0		= "nonmodelpdis0[[d,g,ai]]: prevalence rates of diseases not modelled in CZM"
ndoth			= "# non-modeled diseases"


Begin["`Private`"]	


Print["CZMImportDiseaseData package is evaluated"]


(* -----------------------------------------------
           INITIALIZATION
   -----------------------------------------------*)

inc0		= Table[0, {nd0}];
pdis0		= Table[0, {nd0}];
excessmort0	= Table[0, {nd0}, {ng}];
casefat0	= {Table[0, {ng}, {nac[[1]]}]};
casefatind0	= Table[1, {nd0}];
rem0		= {Table[0, {ng}, {nac[[1]]}]};
remind0		= Table[1, {nd0}];
causemort0	= Table[0, {nd0}];


(* -----------------------------------------------
           READ NON-CANCER DISEASE DATA
   -----------------------------------------------*)

currremind	= 1;
currcasefatind	= 1;

readdisdat1[dis_, dat_] := Block[{},

	Skip[dat, Record, RecordSeparators -> {{"(*"}, {"*)"}}];
	Read[dat, Word];
	Do[

(* INCIDENCE DATA *)

		div 	= N[Read[dat, {Table[Word, {2}], Number}][[2]]];
		inc0[[dis[[d]]]] = Partition[Read[dat, Table[Number, {ng nac[[1]]}]], {nac[[1]]}] / div;

(* INITIAL PREVALENCE DATA *)

		div 	= N[Read[dat, {Table[Word, {2}], Number}][[2]]];
		pdis0[[dis[[d]]]] = Partition[Read[dat, Table[Number, {ng nac[[1]]}]], {nac[[1]]}] / div;

(* REMISSION DATA *)

		div 	= N[Read[dat, {Table[Word, {2}], Number}][[2]]];
		currrem = Partition[Read[dat, Table[Number, {ng nac[[1]]}]], {nac[[1]]}] / div;
		If[(Max[currrem] > 0),
			currremind	= currremind + 1;
			rem0		= Join[rem0, {currrem}];
			remind0[[dis[[d]]]] = currremind,
			remind0[[dis[[d]]]] = 1];

(* CASE FATALITY = 1-MONTH MORTALITY) DATA *)

		div 	= N[Read[dat, {Table[Word, {2}], Number}][[2]]];
		currcasefat = Partition[Read[dat, Table[Number, {ng nac[[1]]}]], {nac[[1]]}] / div;
		If[(Max[currcasefat] > 0),
			currcasefatind	= currcasefatind + 1;
			casefat0	= Join[casefat0, {currcasefat}];
			casefatind0[[dis[[d]]]] = currcasefatind,
			casefatind0[[dis[[d]]]] = 1];

(* EXCESS MORTALITY DATA *)

		div 	= N[Read[dat, {Table[Word, {2}], Number}][[2]]];
		excessmort0[[dis[[d]]]] = Partition[Read[dat, Table[Number, {ng nac[[1]]}]], {nac[[1]]}] / div;

(* CBS-REGISTERED CAUSE-SPECIFIC MORTALITY DATA *)

		div 	= N[Read[dat, {Table[Word, {2}], Number}][[2]]];
		causemort0[[dis[[d]]]] = N[Partition[Read[dat, Table[Number, {ng nac[[1]]}]], {nac[[1]]}]];
		causemort0[[dis[[d]]]] = causemort0[[dis[[d]]]] / If[(div < 0), npop1, div],
		{d, Length[dis]}];

	Close[dat];

	]; (* READDISDAT1 *)


(* CHD *)

dat 		= OpenRead[Global`inputpath <> CHDinput];
readdisdat1[{1, 2}, dat];


(* CHF *)
	
dat 		= OpenRead[Global`inputpath <> CHFinput]; 
readdisdat1[{3}, dat];


(* CVA *)

dat 		= OpenRead[Global`inputpath <> CVAinput]; 
readdisdat1[{4}, dat];


(* CARA (ASTHMA & COPD) *)

dat 		= OpenRead[Global`inputpath <> CARAinput]; 
readdisdat1[{5, 6}, dat];


(* DIABETES MELLITUS *)

dat 		= OpenRead[Global`inputpath <> DMinput];
readdisdat1[{7}, dat]; 
(*excessmort0[[7]] = Maxc[2.0 excessmort0[[7]], .02];*)


(* DEMENTIA *)

dat 		= OpenRead[Global`inputpath <> demeninput]; 
readdisdat1[{8}, dat];


(* ARTHROSIS OF HIP, KNEE AND OTHER *)

dat 		= OpenRead[Global`inputpath <> artrinput]; 
readdisdat1[{9, 10, 11}, dat];


(* DORSOPATHIES (LOW BACK PAIN) *)

dat 		= OpenRead[Global`inputpath <> dorsinput]; 
readdisdat1[{12}, dat];


(* OSTEOPOROSIS *)

dat 		= OpenRead[Global`inputpath <> osteinput]; 
readdisdat1[{13}, dat];


(* TRANSFORMATION OF RATES TO 1-YEAR RISKS *)

excessmort0[[Range[ndnoncanc]]] =
	1 - ( 1 - excessmort0[[Range[ndnoncanc]]] / 4 )^4;

rem0 = 1 - ( 1 - rem0 / 4 )^4;


(* -----------------------------------------------
           READ CANCER DISEASE DATA
   -----------------------------------------------*)

readdisdat2[dat_] := Block[{},

	Skip[dat, Record, RecordSeparators -> {{"(*"}, {"*)"}}];
	div = N[Read[dat, {Table[Word, {2}], Number}][[2]]];
	res = Table[0, {ndcancers}];
	Do[	Read[dat, Word];
		res[[d]] = Partition[Read[dat, Table[Number, {ng nac[[1]]}]], {nac[[1]]}] / div,
		{d, ndcancers}];
	Close[dat];

	res

	]; (* READDISDAT2 *)

(* INCIDENCE *)

dat 		= OpenRead[Global`inputpath <> cancincinput];
inc0[[ndnoncanc + Range[ndcancers]]] = readdisdat2[dat];
inc0[[ndnoncanc + 6]] = .92 inc0[[ndnoncanc+6]];

(* PREVALENCE *)

dat 		= OpenRead[Global`inputpath <> cancprevinput]; 
pdis0[[ndnoncanc + Range[ndcancers]]] = readdisdat2[dat];

(* REGISTERED MORTALITY NUMBERS *)

dat 		= OpenRead[Global`inputpath <> cancmortinput];
causemort0[[ndnoncanc + Range[ndcancers]]] = readdisdat2[dat];       

(* SURVIVAL PROPORTIONS, TRANSFORMED TO EXCESS MORTALITY RATES *)

dat 		= OpenRead[Global`inputpath <> cancrelsurvinput]; 
cancrelsurv 	= readdisdat2[dat];
cancrelsurv 	= cancrelsurv^.2;
Do[	excessmort0[[ndnoncanc + d, g]] = (1 - morttot0[[g]]) (1 - cancrelsurv[[d, g]]);
	If[(Max[pdis0[[ndnoncanc + d, g]]] < eps),
		excessmort0[[ndnoncanc + d, g]] += causemort0[[ndnoncanc + d, g]],
		excessmort0[[ndnoncanc + d, g]] /= (1 - pdis0[[ndnoncanc + d, g]])],
		{d, ndcancers}, {g, ng}];


(* -----------------------------------------------
           READ DISEASE DATA NON CZM DISEASES
   -----------------------------------------------*)

readfile[dat_, row_, n_] := Block[{},

	OpenRead[dat]; 
    	Skip[dat, Record, RecordSeparators -> {{"(*"}, {"*)"}}]; 
	Skip[dat, Word, 2]; 
      	div = Read[dat, Number]; 
	Table[Read[dat, {Word, Table[Number, {row}, {nac[[1]]}]}][[2]] / div, {n}]

	];

ndoth		= 43;
dat		= Global`inputpath <> nonmodelprevinput;
nonmodelpdis0	= readfile[dat, ng, ndoth];
Close[dat];


(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];


End[]


Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMImportDALYs *)

(* :Context: CZMImportData` *)

(* :Author: Rudolf T. Hoogenveen, Roel G.M. Breuls *)

(* :Summary:
   CZM import data routine imports DALY data*)

(* :Copyright: © 2004 by Rudolf Hoogenveen/Roel Breuls *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)
	
(* :History: 	1.0 first update new implementation CZM July 2004
		1.1 September 2004, Pieter added new variable: allcauseDALY0
		2.0 first release CZM 2005, version March
		3.0 version november 2005 
		3.1 version March 2007 *)

(* :Keywords: DALYs, import *)


BeginPackage["CZMImportData`CZMImportDALYs`",
	{"CZMInitialization`CZMLogFile`",
	"CZMInitialization`CZMDefaultFileNames`",
	"CZMInitialization`CZMConstants`",
	"CZMInitialization`CZMFunctions`",
	"CZMImportData`CZMImportDiseaseData`",
	"CZMImportData`CZMImportUserSelections`"}]


DALYwgt0::usage			= "DALYwgt0[[d,g,ai]]: DALY wgt coefficients of modeled diseases"
nonmodelDALYwgt0::usage 	= "nonmodelDALYwgt0[[d,g,ai]]: DALY wgt coefficients of diseases not modelled in CZM" 
DALYwgtall::usage		= "DALYwgtall[[d,g,ai]]: DALY wgt coefficients of all diseases"


Begin["`Private`"]	


Print["CZMImportDALYs package is evaluated"]

(* INPUT DATA ROUTINE *)

readfile[dat_, n_] := Block[{},

	OpenRead[dat]; 
	Skip[dat, Record, RecordSeparators -> {{"(*"}, {"*)"}}];
	Skip[dat, Word, 2]; 
      	div = Read[dat, Number];
	Table[Read[dat, {Word, Table[Number, {ng}, {nac[[1]]}]}][[2]] / div, {n}]

	];

(* DALY WEIGHTS OF NON-MODELED DISEASES *)

dat			= Global`inputpath <> nonmodelDALYwgtinput;
nonmodelDALYwgt0	= readfile[dat, ndoth];
Close[dat];


(* DALY WEIGHTS OF MODELED DISEASES *)

dat			= Global`inputpath <> DALYwgtinput;
DALYwgt0 		= readfile[dat, 28];
Close[dat];

DALYwgtall		= Join[DALYwgt0, nonmodelDALYwgt0];
	

(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];

End[]


Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMImportCosts *)

(* :Context: CZMImportData`CZMImportCosts` *)

(* :Author: Rudolf T. Hoogenveen, Roel G.M. Breuls, Pieter van Baal *)

(* :Summary:
   CZM import data routine imports disease costs data*)

(* :Copyright: © 2004 by Rudolf Hoogenveen/Roel Breuls *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM July 2004 
		1.1 update by Pieter for 010305 CZM version
		2.0 first release CZM 2005, version March, data update by Pieter
		3.0 version november 2005 
		3.1 version March 2007 *)

(* :Keywords: costs data, import *)


BeginPackage["CZMImportData`CZMImportCosts`",
	{"CZMInitialization`CZMLogFile`",
	"CZMInitialization`CZMDefaultFileNames`",
	"CZMInitialization`CZMConstants`",
	"CZMInitialization`CZMFunctions`",
	"CZMImportData`CZMImportUserSelections`",
	"CZMImportData`CZMImportDemography`",
	"CZMImportData`CZMImportDiseaseData`"}]

costsperson0::usage	= "costsperson0[[d,g,ai]]: health care use costs per person year per disease, d=29: total costs"
costspatient0::usage	= "costspatient0[[d,g,ai]]: health care use costs per patient year per disease"


Begin["`Private`"]	


Print["CZMImportCosts package is evaluated"]


(* ----------------------------------------------- 
   		INPUT COST DATA
   -----------------------------------------------*)

readfile[dat_, n_] := Block[{},

	OpenRead[dat]; 
	Skip[dat, Record, RecordSeparators -> {{"(*"}, {"*)"}}];
	Skip[dat, Word, 2]; 
      	div = Read[dat, Number];
	Table[Read[dat, {Word, Table[Number, {ng}, {nac[[1]]}]}][[2]] / div, {n}]
	
	];

(* COSTS PER PERSON YEAR *)

dat 		= Global`inputpath <> costspersoninput;
costsperson0 	= readfile[dat, 29];
Close[dat];

(* COSTS PER PATIENT YEAR *)

dat 		= Global`inputpath <> costspatientinput;
costspatient0 	= readfile[dat, 28];
Close[dat];


(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"          Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];

End[]


Protect[Evaluate[Context[]<>"*"]]


EndPackage[]
(* :Title: CZMDataSmoothing *)

(* :Context: CZMAdjustData` *)

(* :Author: Rudolf T. Hoogenveen, Roel G.M. Breuls *)

(* :Summary:
   CZM adjust data routine converts numbers specified by 5-year ageclass to values specified by age year *)

(* :Copyright: © 2004 by Rudolf Hoogenveen/Roel Breuls *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM July 2004
		2.0 first release CZM 2005, version March
		3.0 version november 2005
		3.1 version march 2007 *)

(* :Keywords: data smoothing *)


BeginPackage["CZMAdjustData`CZMDataSmoothing`",
	{"CZMInitialization`CZMLogFile`",
	"CZMInitialization`CZMConstants`",
	"CZMInitialization`CZMFunctions`",
	"CZMImportData`CZMImportUserSelections`",
	"CZMImportData`CZMImportDemography`",
	"CZMImportData`CZMImportRiskFactors`",
	"CZMImportData`CZMImportRelativeRisks`",
	"CZMImportData`CZMImportDiseaseData`",
	"CZMImportData`CZMImportDALYs`",
	"CZMImportData`CZMImportCosts`"}]


morttot1::usage		= "morttot1[[g,a]]: smoothed all cause mortality rates specified by age year (a)" 
mortoth1::usage 	= "mortoth1[[g,a]]: smoothed mortality rates other causes specified by age year (a)"

prisk1pre::usage	= "prisk1pre[[r,g,ri,a]]: smoothed risk factor prevalence rates specified by age year (a)"
priskinc1	::usage	= "priskinc1[[r,g,ri,a]]: smoothed risk factor prevalence rates (new disease cases)"

transrisk1pre::usage	= "transrisk1pre[[r,g,rj,ri,a]]: smoothed risk factor class transition rates specified by age year (a)"

trstracking1::usage	= "trstracking1[[r,g,ri,rj,a]]: smoothed risk factor class transition rates related to tracking"

priskDM1::usage		= "user provided discrete risk factor class prevalence rates for diseased populations"

dist1::usage		= "dist1[r,g,2,a]]: continuous risk factor distribution parameters"

rem1::usage 		= "rem1[[d,g,a]]: smoothed disease remission rates specified by age year (a)"
pdis1pre::usage 	= "pdis1[[d,g,a]]: smoothed initial disease prevalence rates before imputation of missing data"
excessmort1::usage 	= "excessmort1[d,g,a]]: smoothed disease-related excess mortality rates specified by age year (a)"
causemort1::usage 	= "causemort1[[d,g,a]]: smoothed cause-specific mortality rates specified by age year (a)"
inc1::usage 		= "inc1[[d,g,a]]: smoothed disease incidence rates specified by age year (a)"
casefat1::usage		= "casefat1[[d,g,a]]: case fatality rates"

RRrisk1::usage		= "RRrisk1[[r,d,g,ri,a]]: smoothed relative risks for discretely distributed risk factors"
RRcont1::usage		= "RRcont1[[r,d,g,a]]: smoothed relative risks for continuously distributed risk factors"
RRdis1::usage		= "RRdis1[[d,g,a]]: smoothed relative risks of one disease on another disease incidence specified by age year (a)"
RRcasefat1::usage	= "RRcasefat1[[d,g,a]]: smoothed relative risks of one disease on another disease case fatality specified by age"

DALYwgt1::usage		= "DALYwgt1[[d,g,a]]: smoothed DALY weights specified by age year (a)"

costsperson1::usage	= "costsperson1[[d,g,a]]: smoothed average health care use costs per person year"
costspatient1::usage	= "costspatient1[[d,g,a]]: smoothed health care costs per patient year"


Begin["`Private`"]


Print["CZMDataSmoothing package is evaluated"];
printtijd;

printbug[c_] := If[(bugind == 1), Print[{"CZMDataSmoothing", c}]];
	
(* DISCRETELY DISTRIBUTED RISK FACTOR CLASS PREVALENCE RATES *)

printbug["1."];

prisk1pre	= Table[If[(Length[prisk0[[r, g, ri]]] == nac[[1]]),
				Min1[fsmooth[prisk0[[r, g, ri]]]],
				prisk0[[r, g, ri]]
				],
			{r, nrd0}, {g, ng}, {ri, ncr0[[r]]}]; 

(* ADJUSTMENT STEPS:
	1	normalization of prevalence rates
	2	smoking: until age 10 only never smokers *)

printbug["2."];

prisk1pre 	= N[Table[prisk1pre[[r, g, ri]] / Plus@@prisk1pre[[r, g]], {r, nrd0}, {g, ng}, {ri, ncr0[[r]]}]]; 

(* DISCRETELY DISTRIBUTED RISK FACTOR CLASS PREVALENCE RATES (NEW DISEASE CASES) *)

printbug["2."];

priskinc1	= Table[0, {nrd0}];

Do[If[MemberQ[Transpose[riskdispair][[1]], r],

	priskinc1[[r]]	= Table[Min1[fsmooth[priskinc0[[r, g, ri]]]], {g, ng}, {ri, ncr0[[r]]}];
	priskinc1[[r]]	= N[Table[priskinc1[[r, g, ri]] / Plus@@priskinc1[[r, g]], {g, ng}, {ri, ncr0[[r]]}]]],

	{r, nrd0}]; 

(* DISCRETELY DISTRIBUTED RISK FACTOR CLASS TRANSITION RATES *)

printbug["3."];

transrisk1pre 	= Table[If[(Length[transrisk0[[r, g, ri]]] == nac[[1]]),
				fsmooth[transrisk0[[r, g, ri]]],
				transrisk0[[r, g, ri]]
				],
			{r, nrd0}, {g, ng}, {ri, Length[transrisk0[[r, g]]]}];
			
(* RISK FACTOR CLASS TRANSITION RATES RELATED TO TRACKING *)

printbug["4."];

trstracking1	= Table[0, {r, nrd0}, {ng}, {ncr0[[r]]}, {2}, {na1}];

If[(trackingind == 1),

	Do[If[(trstrackingind[[r]] == 1), 

		Do[trstracking1[[r, g, ri, rj]] = fsmooth[trstracking0[[r, g, ri, rj]]], {g, ng}, {ri, ncr0[[r]]}, {rj, 2}]],

		{r, nrd0}]

	];

(* USER PROVIDED DISCRETE RISK FACTOR CLASS PREVALENCE RATES, NOT-USED *)

printbug["5."];

If[(userriskdata >= 1),	priskDM1 = Table[fsmooth[priskDM0[[r, g, ri]]], {r, Length[riskDMpair]}, {g, ng}, {ri, Length[priskDM0[[r, g]]]}]];

(* DISEASE PREVALENCE, INCIDENCE, REMISSION, CASE FATALITY AND EXCESS MORTALITY RATES *)

printbug["6."];

inc1 		= Table[fsmooth[inc0[[d, g]]], {d, nd0}, {g, ng}]; 

rem1 		= Table[fsmooth[rem0[[d, g]]], {d, Length[rem0]}, {g, ng}]; 

pdis1pre	= Table[fsmooth[pdis0[[d, g]]], {d, nd0}, {g, ng}]; 

casefat1 	= Table[fsmooth[casefat0[[d, g]]], {d, Length[casefat0]}, {g, ng}];

excessmort1 	= Table[fsmooth[excessmort0[[d, g]]], {d, nd0}, {g, ng}];

causemort1 	= Table[fsmooth[causemort0[[d, g]]], {d, nd0}, {g, ng}]; 

morttot1 	= Table[fsmooth[morttot0[[g]]], {g, ng}]; 

(* COSTS AND DALY WEIGHTS *)

printbug["9."];

DALYwgt1 	= Table[fsmooth[DALYwgt0[[d, g]]], {d, nd0}, {g, ng}];

costsperson1 	= Table[fsmooth[costsperson0[[d,g]] ], {d, nd0 + 1}, {g, ng}];

costspatient1 	= Table[fsmooth[costspatient0[[d, g]] ], {d, nd0}, {g, ng}];


(* RELATIVE RISKS *)

printbug["10."];

RRrisk1 	= Table[fsmooth[RRrisk0[[r, d, g, ri]]],
			{r, nrd0}, {d, Length[RRrisk0[[r]]]}, {g, ng}, {ri, ncr0[[r]]}]; 

Do[If[(r != 6), RRrisk1[[r]] = Max1[RRrisk1[[r]]]], {r, nrd0}];

RRdis1		= Table[fsmooth[RRdis0[[d, g]]], {d, Length[RRdis0]}, {g, ng}];

RRcasefat1	= Table[fsmooth[RRcasefat0[[d, g]]], {d, Length[RRcasefat0]}, {g, ng}];


(* CONTINUOUS RISK FACTOR DATA *)

printbug["11."];
(*
dist1		= Table[Sign[Plus@@dist0[[r, g, ri]]] fsmooth[Sign[Plus@@dist0[[r, g, ri]]] dist0[[r, g, ri]]],
			{r, Length[dist0]}, {g, ng}, {ri, 2}];

RRcont1		= Table[fsmooth[RRcont0[[r, d, g]]], {r, Length[RRcont0]}, {d, Length[RRcont0[[r]]]}, {g, ng}];
*)
(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];

End[]


Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMAdjustBeforeSelection *)

(* :Context: CZMAdjustData` *)

(* :Author: Rudolf T. Hoogenveen, Roel G.M. Breuls *)

(* :Summary:
   CZM adjust data routine adjusts the all cause mortality relative risks such that they are consistent with
   disease-specific RR's, and imputes missing disease prevalence rates *)

(* :Copyright: © 2004 by Rudolf Hoogenveen/Roel Breuls *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM July 2004
		2.0 first release CZM 2005, version March, other causes mortality RR's, initial distribution time since smoking cessation
		3.0 version november 2005
		3.1 version march 2007; globalized duursmok, ncsmok *)

(* :Keywords: data adjustment before selection, relative risks, disease prevalence *)


BeginPackage["CZMAdjustData`CZMAdjustBeforeSelection`",
	{"CZMInitialization`CZMLogFile`",
	"CZMInitialization`CZMConstants`",
	"CZMInitialization`CZMFunctions`",
	"CZMImportData`CZMImportUserSelections`",
	"CZMImportData`CZMImportDemography`",
	"CZMImportData`CZMImportRiskFactors`",
	"CZMImportData`CZMImportRelativeRisks`",
	"CZMImportData`CZMImportDiseaseData`",
	"CZMAdjustData`CZMDataSmoothing`"}]

prisk1::usage		= "prisk1[[r,g,ri,a]]: initial disease prevalence rates after imputing equilibrium values"
pdis1::usage 		= "pdis1[[d,g,a]]: initial disease prevalence rates after imputation of missing data"

transrisk1::usage	= "transrisk1[[r,g,rj,ri,a]]: smoothed risk factor class transition rates specified by age year (a) after adjustment"
transriskind1::usage	= "transriskind1[[r,ri,rj]]: risk factor class transition indicator values after adjustment"

riskdisprev1::usage	= "user provided discrete risk factor class after adjustment for lower ages for BMI within diabetics" 

RRriskpresel::usage	= "RRriskpresel[[r,d,g,ri,a]]: adjusted relative risk values (discrete) before selection"
RRcontpresel::usage	= "RRcontpresel[[r,d,g,ri,a]]: adjusted relative risk values (continuous) before selection"
RRdispresel::usage	= "RRdispresel[[d,g,a]]: incidence risks for one disease on another unadjusted for joint risk factors"

a0cont1::usage		= "a0cont1[[r,g,a]]: intercept of deterministic risk factor level change"
a1cont1::usage		= "a1cont1[[r,g,a]]: regression parameter of deterministic risk factor level change"

nstopduur::usage	= "# years since smoking cessation"
stopduur::usage		= "stopduur[[g,ri]]: distribution of former smokers over time since smoking cessation classes"
duurval::usage		= "duurval[[ri]]: class mean values of cessation-time"		
ncsmok::usage		= "# smoking classes in case of cessation-time dependent"	


Begin["`Private`"]	


Print["CZMAdjustBeforeSelection package is evaluated"];
printtijd;

printbug[c_] := If[(bugind == 1), Print[{"CZMAdjustBeforeSelection", c}]];


(* --------------------------------------------------
  OVERWRITING SMOKING PREVALENCE AND HBA1C PREVALENCE DATA (WITH EQUILIBRIUM VALUES CALCULATED FROM TRANSITION RATES)
----------------------------------------------------*)

printbug["1."];

transriskind1	= transriskind0;
transrisk1	= transrisk1pre;

prisk1		= prisk1pre;

printbug["1.1"];

(* OVERWRITING SMOKING PREVALENCE DAT FOR LOWEST AGES *)

prisk1[[1, Range[ng], 1, Range[10]]] 		= 1; 
prisk1[[1, Range[ng], 1 + Range[2], Range[10]]] = 0; 

printbug["1.2"];

(* OVERWRITING HBA1C PREVALENCE DATA WITH EQUILIBRIUM VALUES CALCULATED FROM TRANSITION RATES *)

htrans		= Table[0, {ng}, {ncr0[[12]]}, {ncr0[[12]]}];

Do[	htrans[[g, ri, rj]] = -Log[1 - transrisk1[[12, g, transriskind0[[12, ri, rj]]]]], {g, ng}, {ri, ncr0[[12]]}, {rj, ncr0[[12]]}];

Do[	htrans[[g, ri, ri]] = - Plus@@htrans[[g, ri]], {g, ng}, {ri, ncr0[[12]]}];

htrans 		= Transpose[htrans, {1, 4, 3, 2}];

htrans		= Max0[Min1[Table[MatrixExp[htrans[[g, a]]], {g, ng}, {a, na1}]]];

printbug["1.3"];

(* EQUILIBRIUM VALUES = EIGENVECTORS OF TRANSITION MATRIX *)

hprisk 		= Table[prisk1[[12, g, ri]] / RRrisk1[[12, RRriskind0[[12, 7 + 1]], g, ri]], {g, ng}, {ri, ncr0[[12]]}];

hprisk 		= Table[hprisk[[g, ri]] / Plus@@hprisk[[g]], {g, ng}, {ri, ncr0[[12]]}];

printbug["1.4"];

prisknondis 	= Table[(hprisk[[g, ri]] - pdis1pre[[7, g]] prisk1[[12, g, ri]]) / (1 - pdis1pre[[7, g]]), {g, ng}, {ri, ncr0[[12]]}];

RMrisk 		= RRrisk1[[12, RRriskind0[[12, 7 + 1]]]];

RMrisk 		= Table[RMrisk[[g, ri]] / Plus@@(RMrisk[[g]] prisknondis[[g]]), {g, ng}, {ri, ncr0[[12]]}];

printbug["1.5"];

hprisk 		= Abs[Table[Eigenvectors[
			pdis1pre[[7, g, a]] htrans[[g, a]] (1 - excessmort1[[7, g, a]]) +
			inc1[[7, g, a]] DiagonalMatrix[RMrisk[[g, Range[ncr0[[12]]], a]] prisknondis[[g, Range[ncr0[[12]]], a]]]][[1]],
			{g, ng}, {a, na1}]];

(* SMOOTHING *)

hprisk		= Table[fsmooth[meanaggreg[hprisk[[g, Range[na1], ri]]]], {g, ng}, {ri, ncr0[[12]]}];

prisk1[[12]] 	= Table[hprisk[[g, ri]] / Plus@@hprisk[[g]], {g, ng}, {ri, ncr0[[12]]}];


(* --------------------------------------------------
	IMPUTATION OF MISSING DISEASE PREVALENCE RATES
----------------------------------------------------*)

printbug["3."];

hpdis 	= Table[0, {na2 + 1}]; 
a1 	= Flatten[{Range[na1], Table[na1, {na2 - na1}]}]; 
wgt 	= Table[(1 - morttot1[[g, na1]])^Range[na2 + 1 - na], {g, ng}]; 

pdis1 	= pdis1pre;

Do[If[(Max[pdis1[[d, g]]] < eps) && (Max[inc1[[d, g]]] > eps), 

	Do[hpdis[[a + 1]] = hpdis[[a]] + inc1[[d, g, a1[[a]]]] (1 - casefat1[[casefatind0[[d]], g, a1[[a]]]]) *
		( 1 - .5 (excessmort1[[d, g, a1[[a]]]] + rem1[[remind0[[d]], g, a1[[a]]]]) ) 
		- rem1[[remind0[[d]], g, a1[[a]]]] hpdis[[a]] 
		- excessmort1[[d, g, a1[[a]]]] hpdis[[a]] (1 - hpdis[[a]]),
		{a, na2}]; 

	pdis1[[d, g]] = Flatten[{hpdis[[Range[na]]], Plus@@(Drop[hpdis, na] wgt[[g]]) / Plus@@wgt[[g]]}]],

	{d, nd0}, {g, ng}];


(* --------------------------------------------------
	DISEASE-SPECIFIC MORTALITY RATES
----------------------------------------------------*)

printbug["4."];

excessmortadj = Min1[Max0[Table[Minc[
			excessmort1[[d, g]],
			(causemort1[[d, g]] -
				inc1[[d, g]] casefat1[[casefatind0[[d]], g]]) / (pdis1[[d, g]] + eps)],
			{d, nd0}, {g, ng}]]];

dismort		= Table[pdis1[[d, g]] excessmortadj[[d, g]] +
			inc1[[d, g]] (casefat1[[casefatind0[[d]], g]] + (1 - casefat1[[casefatind0[[d]], g]]) .5 excessmortadj[[d, g]]),
			{d, nd0}, {g, ng}];


(* --------------------------------------------------
	TERMS OF QUADRATIC RISK FUNCTION VALUES USED FOR CONTINUOUSLY DISTRIBUTED RISK FACTORS
----------------------------------------------------*)


(* --------------------------------------------------
	ALL CAUSE MORTALITY RELATIVE RISK ADJUSTMENT(1)
1	class 1 = reference class
2	smoking: >=1
3	all risk factors: <= large value (=35)
4	all risk factors: all cause mortality risks are maximum (if>1) or minimum (if<1)
	of empirical and calculated (through disease-specific RR's) values
----------------------------------------------------*)

printbug["6."];

RRriskpresel 	= RRrisk1;

(* ADJUSTMENT STEPS 1, 2 & 3 *)

printbug["6.1"];

RRriskpresel	= Table[RRriskpresel[[r, d, g, ri]] / RRriskpresel[[r, d, g, 1]],
			{r, nrd0}, {d, Length[RRriskpresel[[r]]]}, {g, ng}, {ri, ncr0[[r]]}];

RRriskpresel[[1]] = Max1[RRriskpresel[[1]]];

RRriskpresel 	= Table[Minc[RRriskpresel[[r, d, g, ri, a]] / RRriskpresel[[r, d, g, 1, a]], 35],
			{r, nrd0}, {d, Length[RRriskpresel[[r]]]}, {g, ng}, {ri, ncr0[[r]]}, {a, na1}]; 

(* CALCULATION OF MEAN RISK VALUES AND RISK MULTIPLIERS FOR DISCRETELY AND CONTINUOUSLY DISTRIBUTED RISK FACTORS *)

printbug["6.2"];

ERRriskpresel 	= Table[Plus@@(RRriskpresel[[r, d, g]] prisk1[[r, g]]),
			{r, nrd0}, {d, Length[RRriskpresel[[r]]]}, {g, ng}]; 

RMriskpresel 	= Table[RRriskpresel[[r, d, g, ri]] / (ERRriskpresel[[r, d, g]] + eps),
			{r, nrd0}, {d, Length[RRriskpresel[[r]]]}, {g, ng}, {ri, ncr0[[r]]}]; 

(* ADJUSTMENT STEP 4 *)

printbug["6.3"];

Do[	(* DISCRETELY DISTRIBUTED RISK FACTORS *)

	riskdisind = MemberQ[Transpose[riskdispair][[1]], r];

	If[riskdisind,

printbug["6.4"];

		(* DISCRETELY DISTRIBUTED RISK FACTORS RESTRICTED TO DISEASES, E.G. HBA1C *)

		d1	= riskdispairinv[[r]];

		(* RISK FACTOR CLASS PREVALENCE RATES *)

		hprisk 	= Table[prisk1[[r, g, ri]] / RRrisk1[[r, RRriskind0[[r, d1 + 1]], g, ri]], {g, ng}, {ri, ncr0[[r]]}];
	 
        	hprisk 	= Table[hprisk[[g, ri]] / Plus@@hprisk[[g]], {g, ng}, {ri, ncr0[[r]]}];

		prisknondis = Table[(hprisk[[g, ri]] - pdis1[[d1, g]] prisk1[[r, g, ri]]) / (1 - pdis1[[d1, g]]),
					{g, ng}, {ri, ncr0[[r]]}];

		(* ALL CAUSE MORTALITY RATE RATIOS *)

		hRRrisk	= Table[morttot1[[g]] +
				pdis1[[d1, g]] *
					(Plus@@Table[(RMriskpresel[[r, RRriskind0[[r, d + 1]], g, ri]] - 1) dismort[[d, g]], {d, nd0}] -
					(RMriskpresel[[r, RRriskind0[[r, d1 + 1]], g, ri]] - 1) dismort[[d1, g]]),
				{g, ng}, {ri, ncr0[[r]]}],

		(* ALL CAUSE MORTALITY RATE RATIOS FOR DISCRETELY DISTRIBUTED POPULATION RISK FACTORS *)

printbug["6.5"];

		hRRrisk	= Table[morttot1[[g]] +
				Plus@@Table[(RMriskpresel[[r, RRriskind0[[r, d + 1]], g, ri]] - 1) dismort[[d, g]], {d, nd0}],
				{g, ng}, {ri, ncr0[[r]]}]

		];

	(* ALL CAUSE MORTALITY RATE RATIOS *)

	hRRrisk	= Table[hRRrisk[[g, ri]] / hRRrisk[[g, 1]], {g, ng}, {ri, ncr0[[r]]}]; 

	(* MEAN ALL CAUSE MORTALITY RATE RATIO VALUES *)

	EhRRrisk = If[riskdisind,

			Table[1 + (Plus@@(hRRrisk[[g]] prisk1[[r, g]]) - 1) pdis1[[d1, g]], {g, ng}],

			Table[Plus@@(hRRrisk[[g]] prisk1[[r, g]]), {g, ng}]]; 

	(* RISK FACTORS WITH DECREASING RR VALUES, I.E. CONSUMPTION OF FRUIT, VEGETABLES, FRUIT, FISH *)

	If[(r > 8) && (r < 12),

printbug["6.6"];

		(* DISCRETELY DISTRIBUTED RISK FACTORS *)

		If[(mortothind == 0),

			Do[RRriskpresel[[r, 2, g, ri]] = hRRrisk[[g, ri]],
				{g, ng}, {ri, ncr0[[r]]}],

			Do[RRriskpresel[[r, 2, g, ri]] = Minc[RRriskpresel[[r, 2, g, ri]], hRRrisk[[g, ri]]],
				{g, ng}, {ri, ncr0[[r]]}]]

		]; 

	(* RISK FACTORS WITH INCREASING RR VALUES, I.E. SMOKING, SBP, CHOLESTEROL, BMI, PHYSICAL ACTIVITY,
	   CONSUMPTION OF (TRANS) FATTY ACIDS, HBA1C *)

	If[MemberQ[{1, 2, 3, 4, 5, 7, 8, 12}, r],

printbug["6.7"];

		If[(mortothind == 0),

			Do[RRriskpresel[[r, 2, g, ri]] = hRRrisk[[g, ri]],
				{g, ng}, {ri, ncr0[[r]]}],

			Do[RRriskpresel[[r, 2, g, ri]] = Maxc[RRriskpresel[[r, 2, g, ri]], hRRrisk[[g, ri]]],
				{g, ng}, {ri, ncr0[[r]]}]]

		]; 

	(* OTHER RISK FACTORS, I.E. CONSUMPTION OF ALCOHOL *)

	If[(r == 6),

printbug["6.8"];

		RRriskpresel[[r, 2]] = 
			Table[	If[(ri == 2),

					If[(mortothind == 0),
						RRriskpresel[[r, 2, g, ri]] = hRRrisk[[g, ri]],
						RRriskpresel[[r, 2, g, ri]] = Minc[RRriskpresel[[r, 2, g, ri]], hRRrisk[[g, ri]]]],

					If[(mortothind == 0),
						RRriskpresel[[r, 2, g, ri]] = hRRrisk[[g, ri]],
						RRriskpresel[[r, 2, g, ri]] = Maxc[RRriskpresel[[r, 2, g, ri]], hRRrisk[[g, ri]]]]

					],

				{g, ng}, {ri, ncr0[[r]]}]]; 

	(* NEW ALL CAUSE MORTALITY RISKS *)

printbug["6.9"];

	RMriskpresel[[r, 2]] = Table[RRriskpresel[[r, 2, g, ri]] / Plus@@(RRriskpresel[[r, 2, g]] prisk1[[r, g]]), {g, ng}, {ri, ncr0[[r]]}],

{r, nrd0}];


(* --------------------------------------------------
CALCULATION OF RISK FACTOR 1-YEAR CLASS TRANSITION RATES FROM CLASS PREVALENCE RATES ADJUSTED FOR MORTALITY AND TIME TREND
----------------------------------------------------*)

printbug["7."];

If[(0 == 1),

	(* MULTIPLE SMOOTHING PROCEDURE *)

	fsmoothn[x_, n_] := Block[{},
				x1 = x;
				Do[x1 = fsmooth[meanaggreg[x1]], {n}];
				x1
				];

	(* NEW TRANSITION RISK POINTER VALUES *)

	transriskind1	= Table[1, {r, nrd0}, {ncr0[[r]]}, {ncr0[[r]]}];

	(* NEW TRANSITION RATE VALUES *)

	transrisk1	= Table[0, {r, nrd0}, {ng}, {1 + 2 (ncr0[[r]] - 1)}, {na1}];

	(* BASELINE ALL CAUSE MORTALITY RISKS *)

	mort0		= Table[morttot1[[g]] / Plus@@(prisk1[[r, g]] RRriskpresel[[r, 2, g]]), {r, nrd0}, {g, ng}];

	(* CALCULATION OF TRANSITION RISKS *)

	Do[	(* 1-YEAR DIFFERENCE OF PREVALENCE RATE VALUES *)

		htrs = 	(* OLD PREVALENC RISK VALUE *)

			(prisk1[[r, g, ri]] +

			(* INFLOW FROM PREVIOUS STATE *)

			If[(ri == 1),
				0,
				prisk1[[r, g, ri - 1]] transrisk1[[r, g, transriskind1[[r, ri - 1, ri]]]]
				] -

			(* OUTFLOW FROM MORTALITY AND TRANSITION TO PREVIOUS CLASS *)

			(RRriskpresel[[r, 2, g, ri]] mort0[[r, g]] +

				If[(ri == 1),
					0,
					transrisk1[[r, g, transriskind1[[r, ri, ri - 1]]]]
					]
				) prisk1[[r, g, ri]])[[Range[na1 - 1]]] -

			(* MINUS NEW PREVALENCE RISK VALUE *)
 
			( 1 - morttot1[[g, Range[na1 - 1]]]) prisk1[[r, g, ri, Range[2, na1]]];

		(* TRANSITION RATE TO NEXT CLASS *)

		transriskind1[[r, ri, ri + 1]] = 2 + 2 (ri-1);

		htrs1	= Max0[htrs] / (prisk1[[r, g, ri, Range[na1 - 1]]] + eps);

		(* SPECIFIC ADJUSTMENTS FOR RISK FACTORS *)

		If[( r == 1),			htrs1[[Range[1, 15]]] = 0];		(* SMOKING *)
		If[( r == 1) && (ri == 1),	htrs1[[Range[1, 15]]] = 0;		(* SMOKING *)
						htrs1[[Range[40, na]]]= 0];
		If[MemberQ[{2, 3, 4}, r],	htrs1[[Range[20]]] *= 0];		(* SBP, CHOL & BMI *)

		htrs1	= Min1[fsmoothn[Flatten[{htrs1, Take[htrs1, -1]}], 6]];

		transrisk1[[r, g, 2 + 2 (ri - 1)]] = htrs1;

		(* TRANSITION RATE FROM NEXT CLASS *)

		transriskind1[[r, ri + 1, ri]] = 3 + 2 (ri - 1);

		htrs1	= Max0[-htrs] / (prisk1[[r, g, ri + 1, Range[na1 - 1]]] + eps);

		(* SPECIFIC ADJUSTMENTS FOR RISK FACTORS *)

		If[( r == 1 ),			htrs1[[Range[1, 15]]] = 0];		(* SMOKING *)
		If[( r == 1 ) && ( ri == 1),	htrs1 *= 0];				(* SMOKING *)
		If[( r == 2 ),			htrs1 *= 0];
		If[MemberQ[{2, 3, 4}, r],	htrs1[[Range[20]]] *=0];		(* SBP, CHOL & BMI *)

		htrs1 = Min1[fsmoothn[Flatten[{htrs1, Take[htrs1, -1]}], 6]];

		htransrisk0[[r, g, 3 + 2 (ri - 1)]] = htrs1,

		{r, nrd0}, {g, ng}, {ri, ncr0[[r]] - 1}];

	];


(* --------------------------------------------------
	ALL CAUSE MORTALITY RELATIVE RISK ADJUSTMENT(2)
1	selection of other causes mortality RR's
	smoking: all cause mortality effect only through modeled diseases until age 30
	         no RR values for current and former smokers smaller than 1
	risk factors other than smoking: other cause mortality RR's until age 30 equal to age=30 value
	alcohol moderate drinkers: other causes RR <=1
	other causes and risk factors: >=1
	all risk factors: other causes mortality risks for women equal to values for men
2	re-calculation of all cause mortality RR's
----------------------------------------------------*)


If[(mortothind == 1),

printbug["8."];

	Do[	

(*----------------------------------------------------
	DISCRETELY DISTRIBUTED RISK FACTORS
----------------------------------------------------*)

		riskdisind = MemberQ[Transpose[riskdispair][[1]], r];

		If[riskdisind,

printbug["8.1"];

			(* OTHER CAUSES MORTALITY RATE RATIOS FOR DISCRETELY DISTRIBUTED RISK FACTORS RESTRICTED TO DISEASES *)

			RMothrisk = Table[1, {ng}, {ncr0[[r]]}, {na1}],

			(* OTHER CAUSES MORTALITY RATE RATIOS FOR DISCRETELY DISTRIBUTED RISK FACTORS APPLIED TO TOTAL POPULATION *)

			RMothrisk = Max0[Table[RMriskpresel[[r, 2, g, ri]] morttot1[[g]] -
							Plus@@Table[RMriskpresel[[r, RRriskind0[[r, d + 1]], g, ri]] dismort[[d, g]],
							{d, nd0}],
					{g, ng}, {ri, ncr0[[r]]}]]

			];

		(* SCALING FROM RISK MULTIPLIERS TO RELATIVE RISKS *)

		RMothrisk = Table[RMothrisk[[g, ri]] / RMothrisk[[g, 1]], {g, ng}, {ri, ncr0[[r]]}];

		(* SMOKING *)
printbug["8.2"];
		If[(r == 1), RMothrisk[[Range[ng], Range[ncr0[[r]]], Range[30]]] = 1]; 

		(* CONSUMPTION OF ALCOHOL *)
printbug["8.3"];
		If[(r == 6),

			Do[RMothrisk[[g, ri]] =
				If[(ri == 2),
					Min1[RMothrisk[[g, ri]]],
					Max1[RMothrisk[[g, ri]]]],
				{g, ng}, {ri, ncr0[[r]]}]

			];

		(* CONSISTENCY CHECKS *)

		(* SMOKING *)
printbug["8.4"];
		If[(r== 1), Do[RMothrisk[[g, 2]] = Maxc[RMothrisk[[g, 2]], RMothrisk[[g, 3]]], {g, ng}]];

		(* RISK FACTORS WITH DECREASING RR VALUES, I.E. CONSUMPTION OF FRUIT, VEGETABLES, FRUIT, FISH *)
printbug["8.5"];
		If[(r > 8) && (r < 12),

			Do[RMothrisk[[g, ri + 1]] = Minc[RMothrisk[[g, ri + 1]], RMothrisk[[g, ri]]], {g, ng}, {ri, ncr0[[r]] - 1}]];

		(* RISK FACTORS WITH INCREASING RR VALUES, I.E. SBP, CHOLESTEROL, BMI, PHYSICAL ACTIVITY,
		  	 CONSUMPTION OF (TRANS) FATTY ACIDS, HBA1C *)
printbug["8.6"];
		If[MemberQ[{2, 3, 4, 5, 7, 8, 12}, r],

			 Do[RMothrisk[[g, ri + 1]] = Maxc[RMothrisk[[g, ri + 1]], RMothrisk[[g, ri]]], {g, ng}, {ri, ncr0[[r]] - 1}]];


		(* OTHER THAN SMOKING *)
printbug["8.7"];
		If[(r > 1), Do[RMothrisk[[g, ri, Range[30]]] = RMothrisk[[g, ri, 30]], {g, ng}, {ri, ncr0[[r]]}]];

		(* MORE STABLE RESULTS *)
printbug["8.8"];
		(*RMothrisk[[2]] 	= RMothrisk[[1]];*)

		Do[RMothrisk[[g, ri]] = fsmooth[meanaggreg[RMothrisk[[g, ri]]]], {g, ng}, {ri, ncr0[[r]]}];
		
		(* SCALING OF OTHER CAUSES MORTALITY RELATIVE RISKS TO RISK MULTIPLIERS *)
printbug["8.9"];
		RMothrisk	= Table[RMothrisk[[g, ri]] / (Plus@@(RMothrisk[[g]] prisk1[[r, g]]) + eps), {g, ng}, {ri, ncr0[[r]]}];

		(* NEW ALL CAUSE MORTALITY RISKS *)

		hRR 	= If[riskdisind,

				(* RISK FACTORS RESTRICTED TO DISEASES *)
printbug["8.10"];
				d1	= riskdispairinv[[r]];

				Table[	RMothrisk[[g, ri]] (morttot1[[g]] -  Plus@@Table[dismort[[d, g]], {d, nd0}]) +
					pdis1[[d1, g]] *
						(Plus@@Table[RMriskpresel[[r, RRriskind0[[r, d + 1]], g, ri]] dismort[[d, g]], {d, nd0}] -
						RMriskpresel[[r, RRriskind0[[r, d1 + 1]], g, ri]] dismort[[d1, g]]),
					{g, ng}, {ri, ncr0[[r]]}],

				(* RISK FACTORS APPLIED TO TOTAL POPULATION *)
printbug["8.11"];
				Table[	RMothrisk[[g, ri]] (morttot1[[g]] -  Plus@@Table[dismort[[d, g]], {d, nd0}]) +
					Plus@@Table[RMriskpresel[[r, RRriskind0[[r, d + 1]], g, ri]] dismort[[d, g]], {d, nd0}],
					{g, ng}, {ri, ncr0[[r]]}]

				]; 

		RRriskpresel[[r, 2]] = Table[hRR[[g, ri]] / hRR[[g, 1]], {g, ng}, {ri, ncr0[[r]]}];

		(* SMOKING *)
printbug["8.12"];
		If[(r == 1), RRriskpresel[[r]] = Max1[RRriskpresel[[r]]]],
	

(*----------------------------------------------------
	CONTINUOUSLY DISTRIBUTED RISK FACTORS
----------------------------------------------------*)

		{r, nrd0}] (* DISCRETELY (INCL. CONTINUOUSLY) DISTRIBUTED RISK FACTORS *)

	]; (* If[(mortothind == 1) *)


(* --------------------------------------------------
	UNADJUSTMENT OF INCIDENCE RISKS FROM ONE DISEASE ON ANOTHER
	FROM EFFECTS THROUGH SMOKING, BLOOD PRESSURE AND CHOLESTEROL
----------------------------------------------------*)

printbug["9."];

RRdispresel	= RRdis1;

(* PAIRS OF CAUSALLY RELATED DISEASES WITH RR VALUES TO BE UNADJUSTED *)

Do[	RRdispresel[[d + 1, g]] *=
		
		Times@@Table[
			Plus@@(	RMriskpresel[[r, RRriskind0[[r, RRdisinddata[[RRdisinddatasel[[d]], 1]] + 1]], g]] *
				RMriskpresel[[r, RRriskind0[[r, RRdisinddata[[RRdisinddatasel[[d]], 2]] + 1]], g]] *
				prisk1[[r, g]]),
			{r, 3}],
 		{d, Length[RRdisinddatasel]}, {g, ng}];


(* --------------------------------------------------
	DETERMINISTIC CHANGES OF CONTINUOUSLY DISTRIBUTED RISK FACTORS 
----------------------------------------------------*)


(* --------------------------------------------------
   CALCULATION OF INITIAL DISTRIBUTION OF FORMER SMOKERS OVER TIME SINCE SMOKING CESSATION CLASSES
----------------------------------------------------*)

printbug["11."];

If[(RRsmokduurind == 1),

	nstopduur	= 20;				(* # 1-YEAR CLASSES OF TIME SINCE SMOKING CESSATION *)

	ncsmok		= ncr0[[1]] + nstopduur - 1;	(* # SMOKING CLASSES *)

	duurval		= Range[nstopduur] - .5;	(* MEAN TIME SINCE SMOKING CESSATION FOR EACH CLASS *)

	(* SMOKING CLASS PREVALENCE NUMBERS *)
printbug["11.1"];
	Nsmok		= Table[0., {na2}, {ncsmok}];		(* SMOKING PREVALENCE NUMBERS OF COHORT *)
	Nsmok[[1, 1]] 	= 1.;					(* INITIALLLY ONLY NEVER SMOKERS *)

	(* DISTRIBUTION OF FORMER SMOKRES OVER TIME SINCE SMOKING CESSATION CLASSES *)
printbug["11.1"];
	stopduur	= Table[0, {ng}, {nstopduur}, {na1}];
	
	Do[	(* RELAPSE RATE OF FORMER SMOKERS *)
printbug["11.2"];
		relapserate 	= 1 - Exp[ -relapsecoeff[[g, 1]] Exp[ -relapsecoeff[[g, 2]] 12 duurval ]
						( 1 - Exp[ -relapsecoeff[[g, 2]] 12 ] ) ];

		(* BASELINE MORTALITY RATES, RR'S OF CURRENT AND FORMER SMOKERS *)

		mortbase 	= morttot1[[g]] / Plus@@(RRriskpresel[[1, 2, g]] prisk1[[1, g]]);
	
		RRcurr	 	= RRriskpresel[[1, 2, g, 2]];	

		RRform		= Table[1 + (RRcurr - 1) Exp[-logRRsmokduur0[[2, g, 1]] *
						Exp[-logRRsmokduur0[[2, g, 2]] Max0[Range[na1] - 51]] duurval[[ri]] ],
					{ri, nstopduur}];

		(* SMOKING CLASS TRANSITION RATES *)

		transsmok = Table[0, {ncsmok}, {ncsmok}, {na1}];

		Do[transsmok[[ri, ri]] 		= 1, {ri, 2}];
		transsmok[[ncsmok, ncsmok]] 	= 1;
		Do[transsmok[[ri, ri + 1]] 	= 1, {ri, 3, ncsmok - 1}];

		(* TRANSITIONS = INFLOW AND OUTFLOW *)

		transsmok[[1, {1, 2}]] 		+= {-transrisk1[[1, g, transriskind0[[1, 1, 2]]]],
							transrisk1[[1, g, transriskind0[[1, 1, 2]]]]};
		transsmok[[2, {2, 3}]] 		+= {-transrisk1[[1, g, transriskind0[[1, 2, 3]]]],
							transrisk1[[1, g, transriskind0[[1, 2, 3]]]]};
		transsmok[[ncsmok, {2, ncsmok}]] += {relapserate[[nstopduur]], -relapserate[[nstopduur]]};

		Do[transsmok[[2 + ri, {2, 3 + ri}]] += {relapserate[[ri]], -relapserate[[ri]]}, {ri, nstopduur - 1}];

		(* MORTALITY = OUTFLOW *)

		transsmok[[1, 1]] 		-= mortbase;
		transsmok[[2, 2]] 		-= RRcurr mortbase;
		transsmok[[ncsmok, ncsmok]] 	-= RRform[[nstopduur]] mortbase;
		Do[transsmok[[2 + ri, 3 + ri]] -= RRform[[ri]] mortbase, {ri, nstopduur - 1}];

		transsmok			= Transpose[transsmok, {2, 3, 1}];

		(* LIFE COURSE OF SMOKING PREVALENCE NUMBERS *)
		
		Do[Nsmok[[a + 1]] = Nsmok[[a]].transsmok[[Min[a, na1]]], {a, na2 - 1}];

		(* DISTRIBUTION OF FORMER SMOKERS OVER TIME SINCE CESSATION CLASSES *)

		Do[stopduur[[g, ri, a]] = Nsmok[[a, 2 + ri]] / (Plus@@Nsmok[[a, 2 + Range[nstopduur]]] + eps),
						{ri, nstopduur}, {a, na}];

		Do[stopduur[[g, ri, na1]] = Plus@@Nsmok[[Range[na1, na2], 2 + ri]] / 
						Plus@@Flatten[Nsmok[[Range[na1, na2], 2 + Range[nstopduur]]]],
						{ri, nstopduur}],
		{g, ng}]		
		
	];
		

(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];
End[]


Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMMakeSelections *)

(* :Context: CZMAdjustData` *)

(* :Author: Rudolf T. Hoogenveen, Roel G.M. Breuls *)

(* :Summary:
   CZM adjust data routine constructs the variables for the risk factors and diseases selected *)

(* :Copyright: © 2004 by Rudolf Hoogenveen/Roel Breuls *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM July 2004
		1.1 September 2004, Pieter moved 'relcostsothsel'to package: CZMCeaCalculations  
		2.0 first release CZM 2005, version March 
		3.1 version March 2007 ; drawing of patients *)

(* :Keywords: risk factors, diseases, relative risks, selection *)


BeginPackage["CZMAdjustData`CZMMakeSelections`",
	{"CZMInitialization`CZMLogFile`",
	"CZMInitialization`CZMConstants`",
	"CZMImportData`CZMImportUserSelections`",
	"CZMImportData`CZMImportDemography`",
	"CZMImportData`CZMImportRiskFactors`", 
	"CZMImportData`CZMImportRelativeRisks`",
	"CZMImportData`CZMImportDiseaseData`",
	"CZMImportData`CZMImportDALYs`",
	"CZMImportData`CZMImportCosts`",
	"CZMAdjustData`CZMDataSmoothing`",
	"CZMAdjustData`CZMAdjustBeforeSelection`"}] 


riskindd::usage 	= "riksindd[[r]]: selected discretely distributed risk factors"
riskindc::usage 	= "riksindc[[r]]: selected continuously distributed risk factors"
riskinddinv::usage	= "riskinddinv[[r]]: indicator values of selected discrete risk factors"
riskinddpop::usage	= "riskinddpop[[r]]: risk factors applied to total population"
riskindddis::usage	= "riskindddis[[r]]: risk factors applied to diseases populations only"
disriskindddis::usage	= "disriskindddis[[r]]: diseases related to riskindddis"
riskdisdsel	::usage	= "riskdisdsel[[d]]: discretely distributed risk factors restricted for each selected disease"

riskDMpairsel		::usage	= "riskDMpairsel[[r,d]]: disease(-indexe)s with empirical risk factor prevalence data for patients"
DMriskpairsel		::usage	= "DMriskpairsel[[d,r]]: disease(-indexe)s with empirical risk factor prevalence data for patients"
DMriskindsel		::usage	= "DMriskindsel[[d,r]]: pointers to empirical prevalence data for patients, see DMrisk[airsel"

nrd::usage 		= "# selected discrete risk factors"
nrdpop::usage 		= "# selected discrete risk factors on population level"
nrddis::usage 		= "# selected discrete risk factors restricted to diseases, e.g. HbA1c"
nrc::usage 		= "# selected continuous risk factors"

prisksel::usage 	= "prisksel[[r,g,ri,a]]: class prevalence rates for selected risk factors"
priskincsel	::usage = "priskincsel[[r,g,ri,a]]: class prevalence rates for selected risk factors (new disease cases)"

ncrsel::usage		= "ncrsel[[r]]: number of classes for selected risk factors"
transrisksel::usage 	= "transrisksel[[r,g,ri,a]]: class transition rates for selected risk factors"
transriskindsel::usage	= "transriskindsel[[r,ri,rj]]: class transition indicator values for selected risk factors"
trstrackingsel::usage	= "trstracking1[[r,g,ri,rj,a]]: smoothed risk factor class transition rates related to tracking"
distsel::usage		= "distsel[[r,g,2,a]]: parameters of continuously distributed risk factors selected"
varnoisesel::usage	= "sdnoisesel[[r]]: standard error of random change of continuous risk factors"
a0contsel::usage	= "a0contsel[[r,g,a]]: intercept of deterministic (selected) risk factor level change"
a1contsel::usage	= "a1contsel[[r,g,a]]: regression parameter of deterministic (selected) risk factor level change"

disind::usage		= "disind[[d]]: selected diseases, order is given in the user input file"
disindinv::usage	= "disindinv[[d]]: indicator values of selected diseases"
nd::usage 		= "number of diseases (non-cancer and cancer) selected"
nondisind::usage	= "nondisind[[d]]: non-selected diseases"
pdissel::usage 		= "pdissel[[d,g,a]]: initial prevalence rates for selected diseases"
incsel::usage 		= "incsel[[d,g,a]]: incidence rates for selected diseases"
excessmortsel::usage	= "excessmortsel[[d,g,a]]: excess mortality rates for selected diseases"
causemortsel::usage 	= "causemortsel[[d,g,a]]: cause mortality rates for selected diseases"
remindsel::usage 	= "remindsel[[d]]: remission rates indicator values for selected diseases"
casefatindsel::usage 	= "casefatindsel[[d]]: case fatality indicator values for selected diseases"

RRrisksel::usage	= "RRrisksel[[r,d,g,ri,a]]: relative risks for selected discretely distributed risk factors" 
RRcontsel::usage	= "RRcontsel[[r,d,g,a]]: risk  parameters for selected continuously distributed risk factors" 
RRriskindsel::usage 	= "RRriskindsel[[r,d]]: (discrete) RR list indicator values for selected risk factors and diseases"
RRcontindsel::usage 	= "RRcontindsel[[r,d]]: (continuous) RR list indicator values for selected risk factors and diseases"
RRdisindsel::usage	= "RRdisindsel[[d,d]]: relative risk list indicator values for one disease on another disease incidence"
RRcasefatindsel::usage	= "RRcasefatindsel[[d,d]]: relative risk list indicator values for one disease on another disease case fatality"

costspatientsel::usage 	= "costspatientsel[[d,g,a]]: health care costs per patient per year for selected diseases"
costspersonothsel::usage= "costspersonothsel[[g,a]]: costs of non-modeled diseases per person"
DALYwgtsel::usage 	= "DALYwgtsel[[d,g,a]]: DALY weight coefficients for selected diseases"

ndrawinput::usage	= "# (non)random input parameter samples"
nscen::usage 		= "# user-defined scenarios including parameter draws ( = nscen0 * ndawinput )"


Begin["`Private`"]	


Print["CZMMakeSelections package is evaluated"];
printtijd;

printbug[c_] := If[(bugind == 1), Print[{"CZMMakeSelections", c}]];


(* --------------------------------------------------
		RISK FACTOR SELECTIONS
----------------------------------------------------*)

printbug["1."];

riskindc	= If[(riskcontind == 1),
			Intersection[riskindc0, riskind],
			{}];
riskindd	= Complement[riskind, riskindc];

nrd		= Length[riskindd];
nrc		= Length[riskindc];

(* DISTINGUISHING DISCRETELY DISTRIBUTED RISK FACTORS RESTRICTED TO DISEASES, E.G. HBA1C, AND POPULATION RISKS *)

printbug["2."];

riskindddis	= {};
Do[If[MemberQ[Transpose[riskdispair][[1]], riskindd[[r]]], riskindddis = {riskindddis, r}], {r, nrd}];
riskindddis	= Flatten[riskindddis];
disriskindddis	= Flatten[Table[riskdispair[[Range[Length[riskdispair]] *
					(1 - Abs[Sign[Transpose[riskdispair][[1]] - riskindd[[riskindddis]][[r]]]]), 2]],
			{r, Length[riskindddis]}]];
riskinddpop	= Complement[Range[nrd], riskindddis];

riskindd	= riskindd[[Flatten[{riskinddpop, riskindddis}]]];
riskinddinv 	= Table[0, {nrd0}];
Do[riskinddinv[[riskindd[[d]]]] = d, {d, Length[riskindd]}];

nrdpop		= Length[riskinddpop];
nrddis		= Length[riskindddis];




(* CONTINUOUSLY DISTRIBUTED RISK FACTOR DISTRIBUTION CHARACTERISTICS *)

(* CONTINUOUSLY DISTRIBUTED RISK FACTOR TRANSITION RATES *)


(* --------------------------------------------------
		DISEASE SELECTIONS
----------------------------------------------------*)

printbug["3."];

disind = Switch[disindrisk,
			1,	Union[Flatten[Table[Select[Range[nd0] Sign[Drop[RRriskind0[[riskindd[[r]]]], 1] - 1], Positive], {r, nrd}]]],
			_,	disind0];

printbug["3.1"];

disind		= Union[disind, disriskindddis];
nd		= Length[disind];

(* --------------------------------------------------
		RISK FACTOR SELECTIONS, CONTINUED
----------------------------------------------------*)
riskdisdsel	= Table[If[(riskdispairinv[[riskind[[riskindddis[[ri]]]]]] == disind[[d]]), ri, 0], {d, nd}, {ri, nrddis}];
riskdisdsel	= Table[Select[riskdisdsel[[d]], Positive], {d, nd}];

(* DISCRETELY DISTRIBUTED RISK FACTOR CLASS PREVALENCE RATES *)

printbug["2.1"];

prisksel 	= prisk1[[riskindd]];
ncrsel 		= ncr0[[riskindd]];
priskincsel	= priskinc1[[riskindd[[riskindddis]]]];


(* DISCRETELY DISTRIBUTED RISK FACTOR CLASS TRANSITION RATES *)

printbug["2.2"];

transrisksel 	= transrisk1[[riskindd]];
transriskindsel	= transriskind1[[riskindd]];

If[(trackingind == 1), trstrackingsel = trstracking1[[riskindd]]];

printbug["3.2"];

(* --------------------------------------------------
		DISEASE SELECTIONS, CONTINUED
----------------------------------------------------*)

disindinv 	= Table[0, {nd0}];
Do[disindinv[[disind[[d]]]] = d, {d, nd}];
nondisind	= Complement[Range[nd0], disind];

printbug["3.3"];

pdissel 	= pdis1[[disind]]; 
incsel 		= inc1[[disind]];
remindsel 	= remind0[[disind]];
excessmortsel 	= excessmort1[[disind]]; 
casefatindsel 	= casefatind0[[disind]]; 
causemortsel 	= causemort1[[disind]]; 


(* --------------------------------------------------
		RISK FACTOR SELECTIONS, CONTINUED
----------------------------------------------------*)

(* EMPIRICAL RISK FACTOR DISTRIBUTIONS WITHIN PATIENTS *)

If[(userriskdata >= 1),

	riskDMpairsel	= Table[Select[disindinv[[riskDMpairinv[[riskind[[r]]]]]], Positive], {r, nrd}];
	DMriskpairsel	= Table[{}, {nd}];
	Do[If[(riskDMpairsel[[r, d1]] == d), DMriskpairsel[[d]] = Flatten[{DMriskpairsel[[d]], r}]],
		{r, nrd}, {d, nd}, {d1, Length[riskDMpairsel[[r]]]}];

	DMriskindsel	= DMriskpairsel;
	Do[If[(riskDMpair[[r1, 1]] == riskind[[r]]) && (riskDMpair[[r1, 2]] == disind[[d]]) && (DMriskpairsel[[d, r2]] == r),
		DMriskindsel[[d, r2]] = r1],
		{d, nd}, {r, nrd}, {r1, Length[riskDMpair]}, {r2, Length[DMriskpairsel[[d]]]}]];


(* --------------------------------------------------
		RELATIVE RISK SELECTIONS
----------------------------------------------------*)

printbug["4."];


RRriskindsel 	= RRriskind0[[riskindd]];
RRriskindsel 	= Table[RRriskindsel[[r, Flatten[{1, disind + 1}]]], {r, nrd}];

RRrisksel 	= RRriskpresel[[riskindd]];

RRdisindsel	= RRdisind[[disind, disind]];
RRcasefatindsel	= RRcasefatind[[disind, disind]];


(* --------------------------------------------------
		DALY AND COSTS SELECTIONS
----------------------------------------------------*)

printbug["5."];

DALYwgtsel 	= DALYwgt1[[disind]]; 
costspatientsel	= costspatient1[[disind]];
costspersonothsel = costsperson1[[29]] - Plus@@costsperson1[[disind]];


(* --------------------------------------------------
  RESULTING NUMBER OF SCENARIOS APPLIED FOR SENSITIVITY ANALYSES 
----------------------------------------------------*)

printbug["6."];

ndrawinput = Switch[analyse,

	(* SENSITIVITY ANALYSES *)

	1,

	1 +						(* REFERENCE SCENARIO *)
	sensparameters[[1]] Plus@@ncrsel +		(* INITIAL (DISCRETE) RISK FACTOR PREVALENCE RATES *)
	sensparameters[[2]] *				(* (DISCRETE) RISK FACTOR TRANSITION RATES *)
		Plus@@Table[Length[transrisksel[[r, 1]]] - 1, {r, nrd}] +
	sensparameters[[3]] 2 nrc +			(* INITIAL (CONTINUOUS) RISK FACTOR PREVALENCE RATES *)
	sensparameters[[4]] 2 nrc +			(* (CONTINUOUS) RISK FACTOR TRANSITION RATES *)
	sensparameters[[5]] nd +			(* DISEASE INCIDENCE RATES UNIFORM OVER AGE*)
	sensparameters[[6]] nd +			(* DISEASE-RELATED EXCESS MORTALITY RATES UNIFORM OVER AGE *)
	sensparameters[[7]] nd +			(* CASE FATALITY RATES UNIFORM OVER AGE *)
	sensparameters[[8]] nrd +			(* DISCRETE RELATIVE RISKS UNIFORM OVER DISEASES AND AGE *)
	sensparameters[[9]] nrc +			(* CONTINUOUS RELATIVE RISKS UNIFORM OVER DISEASES AND AGE *)
	sensparameters[[10]] +				(* TRACKING OF RISK FACTORS *)
	sensparameters[[11]] +				(* RR'S OF ONE DISEASE ON ANOTHER DISEASE INCIDENCE AND PREVALENCE *)
	sensparameters[[12]] +				(* RR's OF ONE DISEASE ON ANOTHER DISEASE CASE FATALITY *)
	sensparameters[[13]] 2 RRsmokduurind +		(* SMOKING RELAPSE REGRESSION COEFFICIENTS *)
	sensparameters[[14]] 2 RRsmokduurind,		(* FORMER SMOKER DISEASE INCIDENCE REGRESSION COEFFICIENTS *)

	(* RISK FACTOR STABILITY ANALYSES *)

	2,

	Max[ncrsel],

	(* OTHER ANALYSES *)

	_,

	1

	];

nscen = nscen0 ndrawinput;


(* --------------------------------------------------
  RISK FACTOR CLASS TRANSITIONS DISTINGUISHED 
----------------------------------------------------*)

printbug["7."];

riskclasstrans 	= Table[Plus@@Flatten[

				Table[If[(transriskindsel[[r, ri, rj]] == trs),
						{ri, rj},
						{0, 0}],
					{ri, ncrsel[[r]]}, {rj, ncrsel[[r]]}],
				1],
			{r, nrd}, {trs, 2, Max[transriskindsel[[r]]]}];


(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];

WriteString[logfile,
		"Selected Diseases\n\n", ToString[disnames[[disind]]] <> "\n\n"];	 

WriteString[logfile,
		"Risk factor class transitions distinguished" <> "\n"];
	
	Do[	WriteString[logfile, "\t" <> risknames[[riskindd[[r]]]] <> "\n"];
		Do[	WriteString[logfile, "\t\t" <> ToString[ri + 1] <> ": " <> ToString[riskclasstrans[[r, ri, 1]]] <>
						" to " <> ToString[riskclasstrans[[r, ri, 2]]] <> "\n"],
			{ri, Length[riskclasstrans[[r]]]}],
		{r, nrd}];

End[]


Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMAdjustAfterSelection *)

(* :Context: CZMAdjustData` *)

(* :Author: Rudolf T. Hoogenveen *)

(* :Summary:
   CZM adjust data routine adjusts the relative risks for intermediate diseases,
   and calculates other causes mortality risks *)

(* :Copyright: \[Copyright] 2004 by Rudolf Hoogenveen *)

(* :Package Version: 3.2 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM July 2004
		2.0 first release CZM 2005, version March, extra adjustments on excess mortality & RR's
		3.0 version november 2005
		3.1 version march 2007; double counting, causality BMI, relative risks, risk facto transition rates *)

(* :Keywords: data adjustment, Relative Risks, intermediate diseases, other causes mortality *)


BeginPackage["CZMAdjustData`CZMAdjustAfterSelection`",
	{"CZMInitialization`CZMLogFile`",
	"CZMInitialization`CZMConstants`",
	"CZMInitialization`CZMFunctions`",
	"CZMImportData`CZMImportUserSelections`",
	"CZMImportData`CZMImportDemography`",
	"CZMImportData`CZMImportRiskFactors`",
	"CZMImportData`CZMImportRelativeRisks`",
	"CZMImportData`CZMImportDiseaseData`",
	"CZMAdjustData`CZMDataSmoothing`",
	"CZMAdjustData`CZMAdjustBeforeSelection`",
	"CZMAdjustData`CZMMakeSelections`",
	"CZMPostProcessing`CZMExportUserSelections`"}]


makenbirth::usage	= "makenbirth[n]: calculates birth numbers for simulation year n"
makemigpop::usage	= "makemigpop[n]: calculates net migrantion numbers for simulation year n"

RRriskseladj::usage	= "RRriskseladj[[r,d,g,ri,a]]: adjusted (discrete) RR values after selection of risk factors and diseases"
RRcontseladj::usage	= "RRcontseladj[[r,d,g,ri,a]]: adjusted (continuous) RR values after selection of risk factors and diseases"
RMothrisksel::usage 	= "RMothrisksel[[r,g,ri,a]]: adjusted other causes (discrete) RR values after selection of risk factors and diseases"
RMothcontsel::usage 	= "RMothcontsel[[r,g,ri,a]]: adjusted other causes (continuous) RR values after selection of risk factors and diseases"

excessmortseladj::usage	= "excessmortseladj[[d,g,a]]: disease-related excess mortality rates adjusted for co-morbidity after selections made"
mortothsel::usage	= "mortothsel[[g,a]]: other causes mortality rates given adjusted disease excess mortality rates"

le::usage		= "le[[g,a]]: (rest) life expectancy"
de::usage		= "de[[d,g,a]]: disease duration of new case"
costse::usage		= "costse[[d,g,a]]: costs during disease duration of new case"
dewgtdis::usage		= "dewgtdis[[d,g,a]]: DALY weights lost during disease duration of new case"
dewgtmort::usage	= "dewgtmort[[d,g,a]]: DALY weigthts ( = life years) lost after disease duration of new case"
RRdisadj::usage		= "RRdisadj[[d,g,a]]: disease incidence risks for one disease on another adjusted for intermediate diseases"
ERRdisadj::usage	= "ERRdisadj[[d,g,a]]: mean disease incidence risk for one disease on another adjusted for intermediate	diseases"
RRdisprev::usage	= "RRdisprev[[d1,d2,g,a]]: disease prevalence risks for one disease on another adjusted for intermediate diseases"
dispair::usage		= "dispair[[d]]: given pairs of causally related co-morbid diseases, see also dispath"
dispath::usage		= "dispath[[d]]: calculated ordering of causally related diseases, see dispair"

disduur::usage		= "disduur[[d,g,a]]: past disease duration of prevalent disease cases"

logRRsmokduur::usage	= "logRRsmokduur[[d,g]]: parameters of log-linear decrease of former smoker RR's with stopping time"
logRRsmokduuroth::usage	= "logRRsmokduuroth[[g]]: parameters of decrease of other causes mortality RR's with smoking cessation time"
RMothsmok::usage	= "RMothsmok[[g,ri,a]]: cessation-time dependent other causes mortality rate multipliers"

RMriskDMinc	::usage = "RMriskDMinc[[d,r,g,ri]]: relative incidence risks corresponding to emprical prevalence rates for patients"
makedrisk	::usage = "routine calculates state transition matrix that corresponds with change of risk factor prevalence rates"
transriskDM	::usage	= "transriskDM[[d,r,g,a,ri,rj]]: transition rates between classes corresponding to differences between \n
				prevalence rates among non-diabetics and diabetics"

Begin["`Private`"]	


Print["CZMAdjustAfterSelection package is evaluated"];
printtijd;

printbug[c_] := If[(bugind == 1), Print[{"CZMAdjustAfterSelection", c}]];


(* --------------------------------------------------
		DEMOGRAPHIC PROCEDURES
----------------------------------------------------*)

(* CALCULATION OF BIRTH NUMBERS FOR SIMULATION YEAR n GIVEN VALUES TO YEAR ndat, AFTERWARDS ASSUMED CONSTANT *)

printbug["1."];

makenbirth[n_]	:= birthind nbirth0[[Min[{n, Length[nbirth0]}]]];

(* CALCULATION OF NET MIGRATION NUMBERS FOR SIMULATION YEAR n *)
(* GIVEN VALUES TO YEAR Length[migpopyear]-1, THEN LINEAR INTERPOLATION TO YEAR Length[migpopyear], AFTERWARDS ASSUMED CONSTANT *)

makemigpop[n_]	:= migpopind If[( n >= migpopyear[[Length[migpopyear]]]),

			migpop0[[Length[migpopyear]]],

  			If[( n > migpopyear[[Length[migpopyear] - 1]]),

				((n - migpopyear[[Length[migpopyear] - 1]]) migpop0[[Length[migpopyear]]] +
					(migpopyear[[Length[migpopyear]]] - n) migpop0[[Length[migpopyear] - 1]]) /
					(migpopyear[[Length[migpopyear]]] - migpopyear[[Length[migpopyear] - 1]]),

				migpop0[[n]]

				]

			];


(* --------------------------------------------------
		INITIALIZATION
----------------------------------------------------*)

(* DISCRETELY DISTRIBUTED RISK FCTORS *)

printbug["2."];

RRriskseladj 	= RRrisksel;

ERRriskseladj 	= Table[Plus@@(RRriskseladj[[r, d, g]] prisksel[[r, g]]),
			{r, nrd}, {d, Length[RRriskseladj[[r]]]}, {g, ng}]; 

RMriskseladj 	= Table[RRriskseladj[[r, d, g, ri]] / (ERRriskseladj[[r, d, g]] + eps),
			{r, nrd}, {d, Length[RRriskseladj[[r]]]}, {g, ng}, {ri, ncrsel[[r]]}];

(* CONTINUOUSLY DISTRIBUTED RISK FACTORS *)


(* --------------------------------------------------
	CONSTRUCTION OF CAUSALITY PATH BETWEEN DISEASES
----------------------------------------------------*)

printbug["3."];

If[(nd > 0),

	(* ADJACENCY MATRIX BETWEEN DISEASES *)

	adjmatrix 	= Sign[RRdisind[[disind, disind]] - 1];

	(* PAIRS OF CAUSALLY RELATED DISEASES *)

	dispair0 = {};
	
	Do[If[(adjmatrix[[d, d1]] == 1), dispair0 = Join[dispair0, {{d, d1}}]], {d, nd}, {d1, nd}];

	(* ORDERING OF DISEASE PAIRS BY METHOD OF LABELING *)

	dislabel = Table[0, {nd}];
	
	Do[dislabel[[dispair0[[d, 2]]]] = Max[{dislabel[[dispair0[[d, 2]]]], dislabel[[dispair0[[d, 1]]]] + 1}],
		{Length[dispair0]}, {d, Length[dispair0]}];
	dispair = {};
	
	Do[If[(dislabel[[dispair0[[d, 1]]]] == lab1) && (dislabel[[dispair0[[d, 2]]]] == lab2), 
			dispair = Join[dispair, {dispair0[[d]]}]],
		{lab2, Max[dislabel]}, {lab1, lab2 - 1, 0, -1}, {d, Length[dispair0]}];

	(* DISEASES ORDERED BY LABEL *)

	dispath	= Transpose[Sort[Transpose[{dislabel, Range[nd]}]]][[2]],

	dispair = {};
	dispath = {}

	];


(* --------------------------------------------------
 ADJUSTMENT OF INCIDENCE RR'S BETWEEN CO-MORBID DISEASES FOR JOINT RISK FACTORS
i.e. using the risk multipliers specified by disease and selected risk factors
----------------------------------------------------*)

printbug["4."];

RRdisadj	= RRdispresel;

Do[If[(RRdisindsel[[d, d1]] > 1),

	(* CAUSAL (INDEPENDENT) DISEASE d CAUSES (DEPENDENT) DISEASE d1 *)

	Do[RRdisadj[[RRdisindsel[[d, d1]], g]] /=

		Times@@Table[
			Plus@@(	RMriskseladj[[r, RRriskindsel[[r, d + 1]], g]] *
				RMriskseladj[[r, RRriskindsel[[r, d1 + 1]], g]] *
				prisksel[[r, g]]),
			{r, nrdpop}],

		{g, ng}]],

	{d, nd}, {d1, nd}];


(* --------------------------------------------------
 ADJUSTMENT OF INCIDENCE RR's BETWEEN CO-MORBID DISEASES FOR INTERMEDIATE DISEASES
i.e. adjustment based on the causal relations between the diseases described by dispair
----------------------------------------------------*)

printbug["5."];

Do[If[MemberQ[Drop[dispair, d1], {dispair[[d1, 1]], dispair[[d2, 2]]}] &&
		(dispair[[d1, 2]] == dispair[[d2, 1]]),

	dA	= dispair[[d1,1]];				(* CAUSAL (INDEPENDENT) DISEASE *)
	dB	= dispair[[d1,2]];				(* INTERMEDIATE DISEASE *)
	dC	= dispair[[d2,2]];				(* DEPENDENT DISEASE *)

	RRdisadj[[RRdisindsel[[dA, dC]]]] *=

		(1 + (RRdisadj[[RRdisindsel[[dA, dB]]]] - 1) pdissel[[dA]] + 
			(RRdisadj[[RRdisindsel[[dB, dC]]]] - 1) pdissel[[dB]]) /
		(1 + (RRdisadj[[RRdisindsel[[dA, dB]]]] - 1) pdissel[[dA]] + 
			(RRdisadj[[RRdisindsel[[dB, dC]]]] - 1) RRdisadj[[RRdisindsel[[dA, dB]]]] pdissel[[dB]])
	],

	{d1, Length[dispair] - 1}, {d2, d1 + 1, Length[dispair]}];

(* INCIDENCE RATE MULTIPLIERS BETWEEN CO-MORBID DISEAES CALCULATED FROM RELATIVE RISKS*)

ERRdisadj	= 0 RRdisadj;

Do[ERRdisadj[[RRdisindsel[[dispair[[d, 1]], dispair[[d, 2]]]]]] =
	1 + (RRdisadj[[RRdisindsel[[dispair[[d, 1]], dispair[[d, 2]]]]]] - 1) pdissel[[dispair[[d, 1]]]],
	{d, Length[dispair]}];


(* --------------------------------------------------
 ADJUSTMENT OF RELATIVE RISKS OF RISK FACTORS FOR INTERMEDIATE DISEASES
----------------------------------------------------*)

printbug["6."];

Do[	d1 	= dispair[[d, 1]];				(* INTERMEDIATE DISEASE *)
	d2 	= dispair[[d, 2]];				(* DEPENDENT DISEASE *)

	(* DISCRETELY DISTRIBUTED RISK FACTORS *)

	Do[	r1 	= RRriskindsel[[r, d1 + 1]];		(* POINTER TO RR VALUES WITH RESPECT TO DISEASE D1 *)
		r2 	= RRriskindsel[[r, d2 + 1]];		(* POINTER TO RR VALUES WITH RESPECT TO DISEASE D2 *)

		If[(r1 > 1) && (r2 > 1),

			(* BOTH DISEASES d1 AND d2 HAVE JOINT RISK FACTOR r *)
			
			RRriskseladj[[r, r2]] /=
				Table[(1 + (RRdisadj[[RRdisindsel[[d1, d2]], g]] - 1) *
					pdissel[[d1, g]] (RRriskseladj[[r, r1, g, ri]] - 1) /
					(ERRriskseladj[[r, r1, g]] + (RRdisadj[[RRdisindsel[[d1, d2]], g]] - 1) pdissel[[d1, g]])),
					{g, ng}, {ri, ncrsel[[r]]}]; 

	    		Do[RRriskseladj[[r, r2, g, ri]] /= RRriskseladj[[r, r2, g, 1]], {g, ng}, {ri, ncrsel[[r]]}];

			Do[ERRriskseladj[[r, r2, g]] = Plus@@(RRriskseladj[[r, r2, g]] prisksel[[r, g]]), {g, ng}];

			Do[RMriskseladj[[r, r2, g, ri]] = RRriskseladj[[r, r2, g, ri]] / ERRriskseladj[[r, r2, g]],
					{g, ng}, {ri, ncrsel[[r]]}]

			],

		{r, nrdpop}],

	(* CONTINUOUSLY DISTRIBUTED RISK FACTORS *)

	{d, Length[dispair]}];


(* --------------------------------------------------
 CALCULATION OF CO-MORBIDITY RATES, DEFAULT METHOD 1, MULTIPLYING DISEASE INCIDENCE RATE RATIOS
----------------------------------------------------*)

printbug["7."];

(* CO-MORBIDITY PREVALENCE RATES ADJUSTED FOR JOINT RISK FACTORS *)

RRdisprev	= Table[1, {nd}, {nd}, {ng}, {na1}];

(* INITIALIZATION: EQUAL TO INCIDENCE RISKS, OR TRANSFORMED ONE FOR REVERSED RELATION *)
 
Do[If[(RRdisindsel[[d, d1]] > 1), RRdisprev[[d, d1]] = RRdisadj[[RRdisindsel[[d, d1]]]]], {d, nd}, {d1, nd}];

printbug["7.1"];

(* ADJUSTMENT STEP 1: FOR INTERMEDIATE DISEASE d1 BETWEEN d AND d2, E.G. CHD BETWEEN DM AND CHF *)

Do[If[(RRdisindsel[[d, d1]] > 1) && (RRdisindsel[[d1, d2]] > 1),

		RRdisprev[[d, d2]] *= 

			(1 + (RRdisadj[[RRdisindsel[[d, d1]]]] - 1) pdissel[[d]] +
				(RRdisadj[[RRdisindsel[[d1, d2]]]] - 1) RRdisadj[[RRdisindsel[[d, d1]]]] pdissel[[d1]]) /
			(1 + (RRdisadj[[RRdisindsel[[d, d1]]]] - 1) pdissel[[d]] +
				(RRdisadj[[RRdisindsel[[d1, d2]]]] - 1) pdissel[[d1]])
		],

	{d, nd}, {d2, nd}, {d1, nd}];

printbug["7.2"];

(* ADJUSTMENT STEP 2: FOR DISEASES d1 AND d2 WITH JOINT CAUSAL DISEASE d, E.G. CHD AND CVA WITH CAUSAL DISEASE DM *)

Do[If[(RRdisindsel[[d, d1]] > 1) && (RRdisindsel[[d, d2]] > 1) && (d1 != d2),

		RRdisprev[[d1, d2]] *= 

			(1 - pdissel[[d1]]) *
			(1 + (RRdisadj[[RRdisindsel[[d, d1]]]] RRdisadj[[RRdisindsel[[d, d2]]]] - 1) pdissel[[d]]) /
			( (1 + (RRdisadj[[RRdisindsel[[d, d1]]]] - 1) pdissel[[d]]) *
				(1 + (RRdisadj[[RRdisindsel[[d, d2]]]] - 1) pdissel[[d]]) -
			(1 - (RRdisadj[[RRdisindsel[[d, d1]]]] RRdisadj[[RRdisindsel[[d, d2]]]] - 1) pdissel[[d]]) *
				pdissel[[d1]])
		],

	{d1, nd}, {d2, nd}, {d, nd}];

printbug["7.3"];

(* --------------------------------------------------
 CALCULATION OF CO-MORBIDITY RATES, METHOD 2, 2x2 DISEASE STATE-TRANSITION MODEL, OPTIONAL
----------------------------------------------------*)

If[(0 == 1),

(* CO-MORBIDTY PREVALENCE RATES UNADJUSTED FOR JOINT RISK FACTORS *)

(* ADJUSTMENT STEP 3: CO-MORBIDITY THROUGH JOINT RISK FATORS *)

RRdisprevmarg	= RRdisprev;

Do[RRdisprevmarg[[d, d1, g]] *=

		Times@@Table[
			Plus@@(	RMriskseladj[[r, RRriskindsel[[r, d + 1]], g]] *
				RMriskseladj[[r, RRriskindsel[[r, d1 + 1]], g]] *
				prisksel[[r, g]]),
			{r, nrdpop}],

		{d, nd}, {d1, nd}, {g, ng}];

(* ADJUSTMENT STEP 4: SYMMETRIC COMORBIDITY RATIOS *)

comorbratio 	= Table[RRdisprevmarg[[d1, d2]] / ( 1 + (RRdisprevmarg[[d1, d2]] - 1) pdissel[[d1]] ), {d1, nd}, {d2, nd}];

Do[comorbratio[[d, d]] = 1 + 0 comorbratio[[d, d]], {d, nd}];

comorbratio	= Maxc[comorbratio, Transpose[comorbratio]];

(* DISEASE INCIDENCE RATE RATIOS *)

RRdisinc	= RRdisprevmarg;

comorbratio	= Table[1, {nd}, {nd}, {ng}, {na1}];

Do[	(* CURRENT DISEASE PAIR *)

	dis2		= {d1, d2};

	RRdis2		= {RRdisinc[[d1, d2]], RRdisinc[[d2, d1]]};

	ERRdis2		= Table[1 + (RRdis2[[d]] - 1) pdissel[[dis2[[d]]]], {d, 2}];

	(* REMISSION, ALL AND 1-YEAR POPULATION DISEASE INCIDENCE RATE *)

	hrem		= Table[rem1[[remindsel[[dis2[[d]]]]]], {d, 2}];

	hinc		= incsel[[dis2]] / (1 - pdissel[[dis2]]);

	hincsurv	= hinc (1 - casefat1[[casefatindsel[[dis2]]]]) (1 - .5 excessmortsel[[dis2]]);

	hexcessmort	= excessmortsel[[dis2]];

	(* STATE-TRANSITION PROBABILITY MATRIX *)

	trans		= Table[{	{- hinc[[2, g]] / ERRdis2[[1, g]] - hinc[[1, g]] / ERRdis2[[2, g]],
						hincsurv[[2, g]] / ERRdis2[[1, g]],
						hincsurv[[1, g]] / ERRdis2[[2, g]],
						vect00},
					{hrem[[2, g]],
						- hexcessmort[[2, g]] - hinc[[1, g]] RRdis2[[2, g]] / ERRdis2[[2, g]] - hrem[[2, g]],
						vect00,
						hincsurv[[1, g]] RRdis2[[2, g]] / ERRdis2[[2, g]]},
					{hrem[[1, g]],
						vect00,
						- hexcessmort[[1, g]] - hinc[[2, g]] RRdis2[[1, g]] / ERRdis2[[1, g]] - hrem[[1, g]],
						hincsurv[[2,g]] RRdis2[[1, g]] / ERRdis2[[1, g]]},
					{vect00,
						hrem[[1, g]],
						hrem[[2, g]],
						- hexcessmort[[1, g]] - hexcessmort[[2, g]] - hrem[[1, g]] - hrem[[2, g]]}},
				{g, ng}];

	trans		= Transpose[trans, {1, 3, 4, 2}];

	mortoth		= morttot1 - Plus@@(pdissel[[dis2]] hexcessmort + incsel[[dis2]] casefat1[[casefatindsel[[dis2]]]]);

	trans		= Table[DiagonalMatrix[Table[1 - mortoth[[g, a]], {4}]] + trans[[g, a]], {g, ng}, {a, na1}];

	(* DISEASE STATE PREVALENCE RATES CALCULATED BY LIFE-TABLE METHOD *)

	prevcomorb	= Table[0, {ng}, {na1}, {4}];

	prevcomorb[[Range[ng], 1, 1]] = 1;

	Do[prevcomorb[[g, a + 1, d3]] = Plus@@Table[prevcomorb[[g, a, d4]] trans[[g, a, d4, d3]], {d4, 4}],
				{g, ng}, {a, na1 - 1}, {d3, 4}];

	prevcomorb	= Table[prevcomorb[[g, a]] / Plus@@prevcomorb[[g, a]], {g, ng}, {a, na1}];

	(* COMORBIDITY RATIO *)

	comorbratio[[d1, d2]] = Table[prevcomorb[[g, Range[na1], 4]] /
					((prevcomorb[[g, Range[na1], 2]] + prevcomorb[[g, Range[na1], 4]]) *
						(prevcomorb[[g, Range[na1], 3]] + prevcomorb[[g, Range[na1], 4]]) + eps),
				{g, ng}];

	comorbratio[[d2, d1]] = comorbratio[[d1, d2]],

	{d1, nd - 1}, {d2, d1 + 1, nd}];

(*Print[MatrixForm[.001 Round[1000 Table[meanaggreg[comorbratio[[1, 2, g]]], {g, ng}]]]];*)

RRdisprev	= Table[comorbratio[[d1, d2]] (1 - pdissel[[d1]]) / ( 1 - comorbratio[[d1, d2]] pdissel[[d1]]), {d1, nd}, {d2, nd}];

]; (* END CALCULATION OF CO-MORBIDITY RATES, OPTIONAL METHOD 2 *)


(* --------------------------------------------------
 ADJUSTMENT OF EXCESS MORTALITY RATES FOR DOUBLE COUNTING MORTALITY CASES
----------------------------------------------------*)

printbug["8."];

excessmortseladj = excessmortsel;

(* CO-MORBIDITY EFFECTS THROUGH JOINT RISK FACTORS, THUS EXCLUDING INDEPENDENT EFFECTS THROUGH CAUSALLY RELATED DISEASES *)

RMcomorb = Table[1., {nd}, {nd}, {ng}, {na1}];

Do[	RMcomorb[[d, d1, g]] *=

		Times@@Table[Plus@@(	RMriskseladj[[r, RRriskindsel[[r, d + 1]], g]] *
					RMriskseladj[[r, RRriskindsel[[r, d1 + 1]], g]] *
					prisksel[[r, g]]),
				{r, nrdpop}],

		{d, nd}, {d1, nd}, {g, ng}];

printbug["8.02"];

(* CO-MORBIDITY RATE MULTIPLIERS, NB, ARE SYMMETRIC *)

RMdisprev = Table[RRdisprev[[d, d1]] RMcomorb[[d, d1]] / (1 + (RRdisprev[[d, d1]] - 1) RMcomorb[[d, d1]] pdissel[[d]]), {d, nd}, {d1, nd}];

If[(nd > 0), RMdisprev = Maxc[RMdisprev, Transpose[RMdisprev]]];


(* ADJUSTMENT THROUGH CO-MORBID DISEASES AND BASED ON CALCULATED CO-MORBIDITY RATES *)

If[MemberQ[{1}, excessmortcond] && (nd > 0),

printbug["8.1"];

	Do[	a	= agerange[[ha]];

		(* WDE: CO-VARIANCE MATRIX OF DISEASE PREVALENCE RATES, WDD: DIAGONAL OF CO-VARIANCE MATRIX *)

		wdd 	= DiagonalMatrix[Table[pdissel[[d, g, a]] (1 - pdissel[[d, g, a]]), {d, nd}] + .000001];
		wde 	= wdd;

		(* ADJUSTMENT FOR JOINT RISK FACTORS AND JOINT DISEASES *)

		Do[If[(d != d1), wde[[d, d1]] = pdissel[[d, g, a]] pdissel[[d1, g, a]]] (RMdisprev[[d, d1, g, a]] - 1), {d, nd}, {d1, nd}];

		wde	= Maxc[wde, Transpose[wde]];

		excessmortseladj[[All, g, a]] =
			Inverse[wde] . wdd .
				(excessmortsel[[All, g, a]] -
					casefat1[[casefatindsel, g, a]] incsel[[All, g, a]] / (1 - pdissel[[All, g, a]])) +
				casefat1[[casefatindsel, g, a]] incsel[[All, g, a]] / (1 - pdissel[[All, g, a]]),

		{g, ng}, {ha, Length[agerange]}];

	excessmortseladj = Min1[Max0[excessmortseladj]]

	]; (* EXCESSMORTCOND==1 *)

(* ADJUSTMENT BASED ON CBS-REGISTERED CAUSE-SPECIFIC MORTALITY RATES *)

If[MemberQ[{2}, excessmortcond] && (nd > 0),

printbug["8.2"];	

	excessmortseladj = Min1[Max0[Table[Minc[
				excessmortsel[[d]],
				(causemortsel[[d]] - incsel[[d]] casefat1[[casefatindsel[[d]]]] / ( 1 - pdissel[[d]])) /
					(pdissel[[d]] + eps)],
				{d, nd}]]]

	]; (* EXCESSMORTCOND==2 *)

(* ADJUSTMENT BASED ON CO-MORBIDITY CALCULATED USING ALL CAUSE MORTALITY RATES, SEE WORD-DOC ATTRIBUTING EXCESS MORTALITY RATES *)

If[MemberQ[{3}, excessmortcond] && (nd > 0),

printbug["8.3"];

	If[(nrd == 0),

		RMdis2 = RMdistot = Table[1., {nd}, {ng}, {na1}],

		(* RISK MULTIPLIERS INCLUDING EFFECT THROUGH CAUSALLY RELATED DISEASES *)

		RMdisagg = Table[RMriskseladj[[r, RRriskindsel[[r, d + 1]]]], {r, nrdpop}, {d, nd}];

		Do[If[(Max[RRdisprev[[d, d1, g]]] > 1),

			Do[RMdisagg[[r, d1, g, ri]] *=

				1 + (RRdisprev[[d, d1, g]] - 1) RMriskseladj[[r, RRriskindsel[[r, d + 1]], g, ri]] pdissel[[d, g]],

				{r, nrdpop}, {ri, ncrsel[[r]]}]],

			{d, nd}, {d1, nd}, {g, ng}];

		Do[	ERMdisagg = Plus@@(RMdisagg[[r, d, g]] prisksel[[r, g]]);

			Do[RMdisagg[[r, d, g, ri]] /= ERMdisagg, {ri, ncrsel[[r]]}],

			{r, nrdpop}, {d, nd}, {g, ng}];

		(* MEAN QUADRATIC DISEASE RATE MULTIPLIER VALUES *)

		RMdis2 = Table[Times@@Table[Plus@@(RMdisagg[[r, d, g]]^2 prisksel[[r, g]]), {r, nrdpop}], {d, nd}, {g, ng}];

		(* MEAN PRODUCT OF DISEASE RATE AND ALL CAUSE MORTALITY RATE MULTIPLER VALUES *)

		RMdistot = Table[Times@@Table[Plus@@(RMdisagg[[r, d, g]] RMriskseladj[[r, 2, g]] prisksel[[r, g]]), {r, nrdpop}],
				{d, nd}, {g, ng}]];

	Do[	a	= agerange[[ha]];

		(* WDE: CO-VARIANCE MATRIX OF DISEASE PREVALENCE RATES, WDD: DIAGONAL OF CO-VARIANCE MATRIX *)

		wde 	= DiagonalMatrix[Table[1 - RMdis2[[d, g, a]] pdissel[[d, g, a]], {d, nd}]];
		wdd 	= DiagonalMatrix[Table[1 - pdissel[[d, g, a]], {d, nd}]];
		
		Do[If[(d != d1),

			(* ADJUSTMENT FOR JOINT RISK FACTORS AND JOINT DISEASES *)

			RMcomorbrisk = Times@@Table[Plus@@(RMdisagg[[r, d, g, All, a]] RMdisagg[[r, d1, g, All, a]] prisksel[[r, g, All, a]]),
							{r, nrdpop}];
						
			wde[[d, d1]] = pdissel[[d1, g, a]]] (RMdisprev[[d, d1, g, a]] - RMcomorbrisk),

			{d, nd}, {d1, nd}];

		excessmortseladj[[All, g, a]] =	Inverse[wde] .
			(wdd .
				(excessmortsel[[All, g, a]] -
					casefat1[[casefatindsel, g, a]] incsel[[All, g, a]] / (1 - pdissel[[All, g, a]])) -
				Table[(RMdistot[[d, g, a]] - 1) morttot1[[g, a]], {d, nd}]) +
				casefat1[[casefatindsel, g, a]] incsel[[All, g, a]] / (1 - pdissel[[All, g, a]]),

		{g, ng}, {ha, Length[agerange]}];

	excessmortseladj = Min1[Max0[excessmortseladj]]

	]; (* EXCESSMORTCOND==3 *)


(* --------------------------------------------------
	OTHER CAUSES MORTALITY RATES
----------------------------------------------------*)

printbug["8.5"];

mortcasefat 	= incsel (casefat1[[casefatindsel]] + (1 - casefat1[[casefatindsel]]) .5 excessmortseladj);
dismort		= pdissel excessmortseladj + mortcasefat;
mortothsel 	= Max0[morttot1 - Plus@@dismort];


(* --------------------------------------------------
	OTHER CAUSES MORTALITY RATE MULTIPLIERS
----------------------------------------------------*)

printbug["10."];

If[(1 == 1),

	(* RESULTING OTHER CAUSES MORTALITY RATES AND RATE MULTIPLIERS *)
	(* INITIAL ESTIMATION BASED ON ALL CAUSE MORTALITY RATE RATIOS *)

printbug["10.1"];

	RMothrisksel 		= Table[RMriskseladj[[r, 2, g, ri]] morttot1[[g]], {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}];

	(* ADJUSTMENT FOR POPULATION RISK FACTORS *)

printbug["10.2"];

	Do[	RMothrisksel[[r, g, ri]] -= Plus@@Table[RMriskseladj[[r, RRriskindsel[[r, d + 1]], g, ri]] dismort[[d, g]], {d, nd}],

		{r, nrdpop}, {g, ng}, {ri, ncrsel[[r]]}];

	(* ADJUSTMENT FOR RISK FCTORS RESTRICTED TO DISEASES, E.G. HBA1C *)

printbug["10.3"];

	Do[	d1 = disindinv[[disriskindddis[[r]]]];

		RMothrisksel[[nrdpop + r, g, ri]] -=

			pdis1[[d1, g]] *
			(Plus@@Table[RMriskseladj[[nrdpop + r, RRriskindsel[[nrdpop + r, d + 1]], g, ri]] dismort[[d, g]], {d, nd}] -
			RMriskseladj[[nrdpop + r, RRriskindsel[[nrdpop + r, d1 + 1]], g, ri]] dismort[[d1, g]]),

		{r, nrddis}, {g, ng}, {ri, ncrsel[[nrdpop + r]]}];			
	
	RMothrisksel	= Max0[RMothrisksel];
	
	(* OTHER CAUSES MORTALITY RISK MULTIPLIERS *)

printbug["10.4"];

	Do[	If[(Min[RMothrisksel[[r, g, Range[ncrsel[[r]]], a]]] < eps),

			RMothrisksel[[r, g, Range[ncrsel[[r]]], a]] = 1,

			RMothrisksel[[r, g, Range[ncrsel[[r]]], a]] = 
				RMothrisksel[[r, g, Range[ncrsel[[r]]], a]] / (RMothrisksel[[r, g, 1, a]] + eps)],

		{r, nrd}, {g, ng}, {a, na1}];

printbug["10.5"];

	(* CONSISTENCY CHECKS ON CALCULATED OTHER CAUSES MORTALITY RISK MULTIPLIERS *)

	Do[	If[(riskindd[[r]] == 1),

	(* NON-MONOTONIC RR'S, I.E. SMOKING, RR NEVER SMOKERS <= RR FORMER SMOKERS <=RR CURRENT SMOKERS *)

printbug["10.6"];
			Do[	RMothrisksel[[r, g, 1]] = Minc[RMothrisksel[[r, g, 1]], RMothrisksel[[r, g, 3]]];
				RMothrisksel[[r, g, 2]] = Maxc[RMothrisksel[[r, g, 2]], RMothrisksel[[r, g, 3]]],
				{g, ng}]];

		If[MemberQ[{2, 3, 4, 5, 7, 8, 12}, riskindd[[r]]],

	(* MONOTONOUS INCREASING RR'S, I.E. SBP, CHOLESTEROL, PHYSICAL ACTIVITY, FAT, TRANS FATTY ACIDS, HBA1C,
   	RR CLASS RI <= RR CLASS RI+1 *)

printbug["10.7"];

			Do[	RMothrisksel[[r, g, ri + 1]] = Maxc[RMothrisksel[[r, g, ri]], RMothrisksel[[r, g, ri + 1]]],
				{g, ng}, {ri, ncrsel[[r]] - 1}]];
	
		If[(riskindd[[r]] == 6),

	(* NON-MONOTONIC RR'S, i.e. ALCOHOL, RR CLASS 3 <= RR CLASS 4 *)

printbug["10.8"];

			Do[	RMothrisksel[[r, g, ri + 1]] = Maxc[RMothrisksel[[r, g, ri]], RMothrisksel[[r, g, ri + 1]]],
				{g, ng}, {ri, 3, 3}]];

		If[(riskindd[[r]] > 8),

	(* MONOTONOUS DECREASING RR'S, I.E. FRUIT, VEGETABLES, RR CLASS RI >= RR CLASS RI+1 *)

printbug["10.9"];

			Do[	RMothrisksel[[r, g, ri + 1]] = Minc[RMothrisksel[[r, g, ri]], RMothrisksel[[r, g, ri + 1]]],
				{g, ng}, {ri, ncrsel[[r]] - 1}]],

	{r, nrd}];

printbug["10.10"];

	sgn		= Sign[Table[Plus@@RMothrisksel[[r, g]], {r, nrd}, {g, ng}]];	

printbug["10.11"];

	RMothrisksel	= Table[(1 - sgn[[r, g]]) Table[1, {na1}] +
					sgn[[r, g]] RMothrisksel[[r, g, ri]] / (Plus@@(RMothrisksel[[r, g]] prisksel[[r, g]]) + eps),
				{r, nrd}, {g, ng}, {ri, ncrsel[[r]]}],

	(* CONTINUOUSLY DISTRIBUTED RISK FACTORS *)

	RMothrisksel	= Table[1, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}, {na1}]

	];


(* --------------------------------------------------
   CALCULATION OF OTHER CAUSES MORTALITY RISKS DEPENDENT ON TIME DURATION SINCE SMOKING CESSATION
----------------------------------------------------*)

printbug["9."];

If[(RRsmokduurind == 1),

	age1		= 5 Range[nac[[1]]] - 2.5;

printbug["9.1"];

	logRRsmokduur	= logRRsmokduur0;

printbug["9.2"];

	meanstopduur	= Table[meanaggreg[stopduur[[g, ri]]], {g, ng}, {ri, nstopduur}];

printbug["9.3"];

	meanstopduur	= Table[Plus@@(Table[Plus@@(duurval meanstopduur[[g, Range[nstopduur], a]]), {a, nac[[1]]}] *
						prisk0[[1, g, 3]] npop1[[g]]) /
					Plus@@(prisk0[[1, g, 3]] npop1[[g]]),
				{g, ng}];

printbug["9.4"];

	indduur		= Table[Sign[Max[logRRsmokduur0[[d]]]], {d, Length[logRRsmokduur0]}];

printbug["9.5"];

	meanRRsmok	= Table[Plus@@(RRrisk0[[1, d, g, ri]] prisk0[[1, g, ri]] npop1[[g]]) / Plus@@(prisk0[[1, g, ri]] npop1[[g]]),
				{d, Length[RRrisk0[[1]]]}, {g, ng}, {ri, 3}];

printbug["9.5"];

	Do[If[(indduur[[d]] == 0),

			Table[logRRsmokduur[[d, g, 1]] =
					(1 - (meanRRsmok[[d, g, 3]] - 1) / (meanRRsmok[[d, g, 2]] - 1 + eps)) / meanstopduur[[g]],
				{g, ng}]],
		{d, 2, Length[indduur]}];

printbug["9.6"];

	RRform		= Max1[Table[Plus@@((1 + (RRrisk0[[1, d, g, 2, a]] - 1) Exp[-logRRsmokduur[[d, g, 1]] *
							Exp[-logRRsmokduur[[d, g, 2]] Max0[age1[[a]] - 51]] duurval]) *
							stopduur[[g, Range[nstopduur], a]]) /
						(Plus@@stopduur[[g, Range[nstopduur], a]] + eps),
				{d, Length[logRRsmokduur]}, {g, ng}, {a, nac[[1]]}]];

printbug["9.7"];

	ERRsmok		= Table[Plus@@(RRrisk0[[1, d, g, Range[2]]] prisk0[[1, g, Range[2]]]) + RRform[[d, g]] prisk0[[1, g, 3]],
				{d, Length[RRrisk0[[1]]]}, {g, ng}];


	RRothsmok	= Table[RMothrisksel[[1, g, ri]] / RMothrisksel[[1, g, 1]], {g, ng}, {ri, ncr0[[1]]}];

	(* SMOKING RELATED DISEASES *)

printbug["9.8"];

	dissmok		= Select[Range[nd0] Sign[Drop[RRriskind0[[1]], 1] - 1], Positive];

	(* UNSELECTED SMOKING RELATED DISEASES *)

printbug["9.9"];

	dissmoknonsel0	= Select[Range[Length[dissmok]], Not[MemberQ[disind, dissmok[[#]]]] &];

printbug["9.10"];

	If[(Length[dissmoknonsel0] > 0),

printbug["9.11"];

		dissmoknonsel	= dissmok[[dissmoknonsel0]];

		ha		= 10;

printbug["9.12"];

		dismortnonsel	= (Transpose[(excessmort0[[dissmoknonsel]] pdis0[[dissmoknonsel]] +
						casefat0[[casefatind0[[dissmoknonsel]]]] inc0[[dissmoknonsel]]), {3, 2, 1}])[[ha]];

printbug["9.13"];

		RRsmoknonsel	= Transpose[RRrisk0[[1, RRriskind0[[1, dissmoknonsel + 1]], Range[ng], Range[3], ha]]];

printbug["9.14"];

		ERRsmoknonsel	= Transpose[ERRsmok[[RRriskind0[[1, dissmoknonsel + 1]], Range[ng], ha]]];

printbug["9.15"];

		logRRsmokduurnonsel = Transpose[logRRsmokduur[[dissmoknonsel0 + 2]], {3, 2, 1}];

printbug["9.16"];

		wgt		= Table[(RRsmoknonsel[[g, Range[Length[dissmoknonsel]], 2]] - 1) dismortnonsel[[g]] / ERRsmoknonsel[[g]],
					{g, ng}];

printbug["9.17"];

		parA		= Table[Plus@@(wgt[[g]] logRRsmokduurnonsel[[1, g]]) / Plus@@wgt[[g]], {g, ng}];

printbug["9.18"];	

		parB		= Table[Plus@@(wgt[[g]] logRRsmokduurnonsel[[1, g]] logRRsmokduurnonsel[[2, g]]) /
						Plus@@(wgt[[g]] logRRsmokduurnonsel[[1, g]]),
					{g, ng}];

printbug["9.19"];

		logRRsmokduuroth = Transpose[{parA, parB}],

		(* ALL SMOKING RELATED DISEASES SELECTED *)

printbug["9.20"];

		logRRsmokduuroth = Table[0, {ng}, {2}];

		];

(* CALCULATION OF OTHER CAUSES RR'S DEPENDENT ON TIME SINCE SMOKING CESSATION *)

	hRRothsmok	= Table[1 + (RRothsmok[[g, 2]] - 1) Exp[-logRRsmokduuroth[[g, 1]] *
					Exp[-logRRsmokduuroth[[g, 2]] Max0[Range[na1] - 51]] duurval[[ri]]],
				{g, ng}, {ri, nstopduur}];
	
	EhRRothsmok	= Table[Plus@@Take[RRothsmok[[g]] prisk1[[1, g]], 2] +
					Plus@@(hRRothsmok[[g]] stopduur[[g]]) prisk1[[1, g, 3]],
				{g, ng}];

	RMothsmok	= Table[Join[Take[RRothsmok[[g]], 2], hRRothsmok[[g]]], {g, ng}];
	RMothsmok	= Table[RMothsmok[[g, ri]] / EhRRothsmok[[g]], {g, ng}, {ri, ncsmok}];
		
	];


(* --------------------------------------------------
	CALCULATION OF LIFE EXPECTANCY FIGURES
----------------------------------------------------*)

printbug["11."];

a1 		= Flatten[{Range[na1], Table[na1, {na2 - na1}]}];
a2 		= Flatten[{Range[na1], Table[na1, {na2 + 1 - na1}]}];

surv0 		= Table[1, {ng}, {na2 + 1}];			(* SURVIVAL NUMBERS OF CLOSED COHORT OF TOTAL POPULATION *)
prev 		= Table[1, {nd}, {ng}, {na2 + 1}];		(* SURVIVAL NUMBERS OF CLOSED COHORT OF DISEASED PERSONS *)
prevduur	= Table[0, {nd}, {ng}, {na2 + 1}];		(* PREVALENCE NUMBERS OF DYNAMIC COHORT *)
nonprevduur 	= Table[0, {nd}, {ng}, {na2 + 1}];		(* SUM OF AGE AT DISEASE ONSET OF PREVALENT CASES *)


(* CALCULATION OF SURVIVAL AND DISEASE PREVALENCE CURVES USING LIFE TABLE METHOD *)

printbug["11.1"];

Do[surv0[[g, a + 1]] = surv0[[g, a]] - morttot1[[g, a1[[a]]]] surv0[[g, a]], {g, ng}, {a, na2}];

Do[prev[[d, g, a + 1]] = 
		prev[[d, g, a]] - rem1[[remindsel[[d]], g, a1[[a]]]] prev[[d, g, a]]
		- (morttot1[[g, a1[[a]]]] + (1 - pdissel[[d, g, a1[[a]]]]) excessmortsel[[d, g, a1[[a]]]]) prev[[d, g, a]],
		{d, nd}, {g, ng}, {a, na2}];

printbug["11.2"];

Do[prevduur[[d, g, a + 1]] = 
		prevduur[[d, g, a]] + (1 - casefat1[[casefatindsel[[d]], g, a1[[a]]]]) inc1[[d, g, a1[[a]]]]
		- rem1[[remindsel[[d]], g, a1[[a]]]] prevduur[[d, g, a]]
		- (morttot1[[g, a1[[a]]]] + (1 - pdissel[[d, g, a1[[a]]]]) excessmortsel[[d, g, a1[[a]]]]) *
			prevduur[[d, g, a]],
		{d, nd}, {g, ng}, {a, na2}];

printbug["11.3"];

Do[nonprevduur[[d, g, a + 1]] = 
		nonprevduur[[d, g, a]] + (1 - casefat1[[casefatindsel[[d]], g, a1[[a]]]]) inc1[[d, g, a1[[a]]]] (a - .5)
		- rem1[[remindsel[[d]], g, a1[[a]]]] nonprevduur[[d, g, a]]
		- (morttot1[[g, a1[[a]]]] + (1 - pdissel[[d, g, a1[[a]]]]) excessmortsel[[d, g, a1[[a]]]]) *
			nonprevduur[[d, g, a]],
		{d, nd}, {g, ng}, {a, na2}];

printbug["11.4"];

(* DISCOUNTING *)

surv0	= Table[surv0[[g]] / (1 + discounte)^(Range[na2 + 1] - 1), {g, ng}];

preve	= Table[prev[[d, g]] / (1 + discounte)^(Range[na2 + 1] - 1), {d, nd}, {g, ng}];

prevc	= Table[prev[[d, g]] / (1 + discountc)^(Range[na2 + 1] - 1), {d, nd}, {g, ng}];
		
(* REST LIFE EXPECTANCY *)

printbug["11.5"];

le1 	= Table[.5 Plus@@(Drop[Drop[surv0[[g]], a], 1] + Drop[Drop[surv0[[g]], a], -1]) / surv0[[g, a + 1]],
		{g, ng}, {a, 0, na2}];

le 	= Table[Flatten[{le1[[g, Range[na]]], Plus@@Drop[le1[[g]] surv0[[g]], na] / Plus@@Drop[surv0[[g]], na]}], {g, ng}];

(* DISEASE DURATION OF NEW CASES *)

printbug["11.6"];

de1 	= Table[.5 Plus@@(Drop[Drop[preve[[d, g]], a], 1] + Drop[Drop[preve[[d, g]], a], -1]) / preve[[d, g, a + 1]],
		{d, nd}, {g, ng}, {a, 0, na2}];

de 	= Table[Flatten[{de1[[d, g, Range[na]]], Plus@@Drop[de1[[d, g]] preve[[d, g]], na] / Plus@@Drop[preve[[d, g]], na]}],
		{d, nd}, {g, ng}];

(* COSTS AND DALYS OVER DISEASE DURATION FOR NEW CASES *)

printbug["11.7"];

costspatient 	= Table[costspatientsel[[d, g, a2]], {d, nd}, {g, ng}];

DALYwgt		= Table[DALYwgt1[[d, g, a2]], {d, nd}, {g, ng}];	

costse1 	= Table[.5 Plus@@(Drop[Drop[prevc[[d, g]] costspatient[[d, g]], a], 1] +
				Drop[Drop[prevc[[d, g]] costspatient[[d, g]], a], -1]) / 
    			prevc[[d, g, a + 1]],
			{d, nd}, {g, ng}, {a, 0, na2}];

costse 		= Table[(1 - casefat1[[casefatindsel[[d]], g]]) *
				Flatten[{costse1[[d, g, Range[na]]], Plus@@Drop[costse1[[d, g]] prevc[[d, g]], na] /
				Plus@@Drop[prevc[[d, g]], na]}] +
			.042 casefat1[[casefatindsel[[d]], g]] costspatient[[d, g, Range[na1]]],
			{d, nd}, {g, ng}];

printbug["11.8"];

dewgt1 		= Table[.5 Plus@@(Drop[Drop[preve[[d, g]] DALYwgt[[d, g]], a], 1] + Drop[Drop[preve[[d, g]] DALYwgt[[d, g]], a], -1]) /
				preve[[d, g, a + 1]],
			{d, nd}, {g, ng}, {a, 0, na2}];

dewgtdis 	= Table[(1 - casefat1[[casefatindsel[[d]],g]]) *
				Flatten[{dewgt1[[d, g, Range[na]]], Plus@@Drop[dewgt1[[d, g]] surv0[[g]], na] /
				Plus@@Drop[surv0[[g]], na]}] +
			.042 casefat1[[casefatindsel[[d]], g]] DALYwgt1[[d, g]],
			{d, nd}, {g, ng}];

(* PROPORTION OF DISEASE-RELATED MORTALITY CODED AS CAUSE-SPECIFIC *)

printbug["11.9"];

primmortsel 	= Min1[Table[causemortsel[[d, g]] /
			(pdissel[[d, g]] excessmortsel[[d, g]] +
				incsel[[d, g]] (casefat1[[casefatindsel[[d]], g]] +
				.5 ( 1 - casefat1[[casefatindsel[[d]], g]]) excessmortsel[[d, g]]) + eps),
			{d, nd}, {g, ng}]];

printbug["11.10"];

dewgtmort 	= Table[Table[(1 - casefat1[[casefatindsel[[d]], g, a]]) (le[[g, a]] - de[[d, g, a]]) *
				primmortsel[[d, g, Round[Minc[a + de[[d, g, a]], na1]]]],
				{a, na1}] +
			primmortsel[[d, g]] casefat1[[casefatindsel[[d]], g]] (le[[g]] - .042),
			{d, nd}, {g, ng}];

dewgtmort = Join[dewgtmort, {le}];


(* --------------------------------------------------
	CALCULATION OF PAST DISEASE DURATION
----------------------------------------------------*)

printbug["11.11"];

disduur	= Table[Range[na1] - .5 - nonprevduur[[d, g, Range[na1]]] / (prevduur[[d, g, Range[na1]]] + eps), {d, nd}, {g, ng}];


(* --------------------------------------------------
	ADJUSTMENT STEPS RELATED TO USE OF EMPIRICAL RISK FACTOR PREVALENCE DATA FOR DISEASE PATIENTS
----------------------------------------------------*)

printbug["13"];

(* CALCULATION OF RISK FACTOR CLASS TRANSITION RATES CORRESPONDING WITH CHANGE OF PREVALENCE RATES *)

makedrisk[r_, priskold_, prisknew_, trt_] := Block[{},

printbug["13.1"];

	nri = hnri = Length[priskold];
	If[(trt == 1), hnri /= 2];

printbug["13.2"];

	translist2 = Flatten[Table[{ri, ri + rj}, {rj, hnri - 1}, {ri, hnri - rj}], 1];
	If[(trt == 1), translist2 += hnri];

printbug["13.3"];

	prisk = priskold;
	transrisk = Table[0, {nri}, {nri}];

	If[(trt == 1),

printbug["13.4"];

		translist1	= Transpose[Partition[Range[nri], hnri]];
		Do[	ri	= translist1[[rk, 1]];
			rj	= translist1[[rk, 2]];
			If[(prisk[[ri]] < prisknew[[ri]]),
				transrisk[[rj, ri]] = Min[{prisk[[rj]], prisknew[[ri]] - prisk[[ri]]}];
				prisk[[ri]]	+= transrisk[[rj, ri]];
				prisk[[rj]]	-= transrisk[[rj, ri]],
				transrisk[[ri, rj]] = prisk[[ri]] - prisknew[[ri]];
				prisk[[ri]]	-= transrisk[[ri, rj]];
				prisk[[rj]]	+= transrisk[[ri, rj]]],
			{rk, Length[translist1]}];

printbug["13.5"];

		Do[	If[MemberQ[translist2, {ri, rj}] || MemberQ[translist2, {rj, ri}],

				If[(prisk[[ri]] < prisknew[[ri]]),
					transrisk[[rj, ri]] = Min[{prisk[[rj]], prisknew[[ri]] - prisk[[ri]]}];
					prisk[[ri]]	+= transrisk[[rj, ri]];
					prisk[[rj]]	-= transrisk[[rj, ri]],
					transrisk[[ri, rj]] = prisk[[ri]] - prisknew[[ri]];
					prisk[[ri]]	-= transrisk[[ri, rj]];
					prisk[[rj]]	+= transrisk[[ri, rj]]]],
			{ri, 2 hnri, hnri + 1, -1}, {rj, hnri + 1, ri - 1}]];

	If[(trt == 0),

printbug["13.6"];
	
		Do[	If[MemberQ[translist2, {ri, rj}] || MemberQ[translist2, {rj, ri}],

				If[(prisk[[ri]] < prisknew[[ri]]),
					transrisk[[rj, ri]] = Min[{prisk[[rj]], prisknew[[ri]] - prisk[[ri]]}];
					prisk[[ri]]	+= transrisk[[rj, ri]];
					prisk[[rj]]	-= transrisk[[rj, ri]],
					transrisk[[ri, rj]] = prisk[[ri]] - prisknew[[ri]];
					prisk[[ri]]	-= transrisk[[ri, rj]];
					prisk[[rj]]	+= transrisk[[ri, rj]]]],
			{ri, hnri - 1}, {rj, ri + 1, hnri}]];

printbug["13.7"];

 	Do[	transrisk[[ri]] /= (priskold[[ri]] + eps), {ri, nri}];
	Do[	transrisk[[ri, ri]] = 1 - Plus@@transrisk[[ri]], {ri, nri}];

      transrisk]; (* MAKEDRISK *)

If[(userriskdata >= 1),	

	(* RISK MULTILIPLIER VALUE FOR INITIAL DISTRIBUTION *)

printbug["13.7"];

	RMriskDMinc	= Table[priskDM1[[DMriskindsel[[d, r1]]]] / (prisksel[[DMriskpairsel[[d, r1]]]] + eps),
				{d, nd}, {r1, Length[DMriskpairsel[[d]]]}];

	(* STATE TRANSITION MATRIX CORRESPONDING TO DIFFERENCE IN STATE PREVALENCE RATES *)

printbug["13.8"];

	hpriskDM	= Table[priskDM1[[DMriskindsel[[d, r1]]]], {d, nd}, {r1, Length[DMriskpairsel[[d]]]}];

	hprisknonDM 	= Table[(prisksel[[DMriskpairsel[[d, r1]], g, ri]] - priskDM1[[DMriskindsel[[d, r1]], g, ri]] pdissel[[d, g]]) /
					(1 - pdissel[[d, g]]),
				{d, nd}, {r1, Length[DMriskpairsel[[d]]]}, {g, ng}, {ri, ncrsel[[DMriskpairsel[[d, r1]]]]}];

printbug["13.9"];

	transriskDM	= Table[makedrisk[DMriskindsel[[d, r1]], hprisknonDM[[d, r1, g, All, agerange[[a]]]],
						hpriskDM[[d, r1, g, All, agerange[[a]]]], 1],
				{d, nd}, {r1, Length[DMriskpairsel[[d]]]}, {g, ng}, {a, Length[agerange]}]];




(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)


(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];
End[]


Protect[Evaluate[Context[] <> "*"]]


EndPackage[]

(* :Title: CZMDefineScenarios *)

(* :Context: CZMDefineScenarios` *)

(* :Author: Rudolf Hoogenveen *)

(* :Summary:
   CZM simulation routine defines scenarios used for sensitivity analyses *)

(* :Copyright: © 2004 by Rudolf Hoogenveen *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM July 2004
		2.0 first release CZM 2005, version March
		3.0 version november 2005
		3.1 version March 2007 *)

(* :Keywords: model equations, simulation, sensitivity analyses *)


BeginPackage["CZMDefineScenarios`CZMDefineScenarios`",
	{"CZMInitialization`CZMLogFile`", 
	"CZMImportData`CZMImportUserSelections`",
	"CZMDefineScenarios`CZMDefineScenariosexem`",
	"CZMDefineScenarios`CZMDefineScenariossens`"}] 

makescen::usage 	= "makescen: routine calculates parameter values for each scenario"
deltasens::usage	= "deltasens: relative change of input parameter values used for sensitivity analyses"


Begin["`Private`"]	


Print["CZMDefineScenarios package is evaluated"];
printtijd;

printbug[c_] := If[(bugind == 1), Print[{"CZMDefineScenarios", c}]];

deltasens = .001;

makescen := Switch[analyse,

			0,	makescenexem,
			1,	makescensens,
			3,	makescenexem
			
			];


(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];

End[]


Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMDefineScenariosexem *)

(* :Context: CZMDefineScenarios` *)

(* :Author: Rudolf Hoogenveen *)

(* :Summary:
   CZM simulation routine defines exemple scenarios *)

(* :Copyright: © 2005 by Rudolf Hoogenveen *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM July 2004
		2.0 first release CZM 2005, version March
		3.0 version November 2005 
		3.1 version March 2007; initial distribution BMI. HbA1c *)

(* :Keywords: model equations, simulation, scenarios *)


BeginPackage["CZMDefineScenarios`CZMDefineScenariosexem`",
	{"CZMInitialization`CZMLogFile`"}] 

makescenexem::usage 	= "makescenexem: routine calculates parameter values for each scenario"	


Begin["`Private`"]	


Print["CZMDefineScenariosexem package is evaluated"]

makescenexem := {"

(* PROPORTIONAL TRANSITIONS FROM HIGHER TO LOWER CLASSES *)

makereduct[r_, reduct_] := Block[{}, 

	htransrisk = DiagonalMatrix[Table[1, {ncrsel[[r]]}]];

	If[(riskindd[[r]] == 1),

		htransrisk[[3, 2]] += reduct;
        	htransrisk[[2, 2]] -= reduct

		];

	If[(riskindd[[r]] > 1),

		Do[	htransrisk[[ri, ri + 1]] += reduct;
        		htransrisk[[ri + 1, ri + 1]] -= reduct,

			{ri, ncrsel[[r]] - 1}]

		];

      	htransrisk];


(* DEFAULT PARAMETER VALUES *)

If[(n == 0),

	priskscen	= prisksel;			(* INITIAL (DISCRETE) RISK FACTOR CLASS PREVALENCE RATES FOR SCENARIO *)
	transriskscen 	= transrisksel;			(* (DISCRETE) RISK FACTOR CLASS TRANSITION RATES FOR SCENARIO *)
	distscen	= distsel;			(* INITIAL (CONTINUOUS) RISK FACTOR DISTRIBUTIONAL PARAMETERS *)
	a0contscen	= a0contsel;			(* (CONTINUOUS) RISK FACTOR TRANSITION RATES FOR SCENARIO (INTERCEPT) *)
	a1contscen	= a1contsel;			(* (CONTINUOUS) RISK FACTOR TRANSITION RATES FOR SCENARIO (REGRESSION) *)
	incscen		= incsel;			(* DISEASE INCIDENCE RATES FOR SCENARIO *)
	excessmortscen	= excessmortsel;		(* DISEASE EXCESS MORTALITY RATES FOR SCENARIO *)
	casefatscen	= casefat1;			(* DISEASE CASE FATALITY RATES FOR SCENARIO *)
	RRriskscen	= RRriskseladj;			(* (DISCRETE) RR VALUES FOR SCENARIO *)
	RRcontscen	= RRcontsel;			(* (CONTINUOUS) RR VALUES FOR SCENARIO *)
	trackingscen	= 1;				(* TRACKING OF RISK FACTORS *)
	RRdisscen	= RRdisadj;			(* RELATIVE RISKS FOR ONE DISEASE ON ANOTHER DISEASE INCIDENCE *)
	RRcasefatscen	= RRcasefat1;			(* RELATIVE RISKS FOR ONE DISEASE ON ANOTHER DISEASE CASE FATALITY *)

	If[(RRsmokduurind == 1),			
		relapsecoeffscen = relapsecoeff;	(* SMOKING RELAPSE REGRESSION COEFFICIENTS *)
		logRRsmokduurscen = logRRsmokduur];	(* FORMER SMOKER DISEASE INCIDENCE REGRESION COEFFICIENTS *)

	];

(* --------------------------------------------------
	EXAMPLE SCENARIOS

	SOME NOTES:	SCENARIO x CORREPONDS WITH Mod[scen - 1, nscen0] == x-1
			ALL RISK FACTORS AND DISEASES ARE ORDERED WITHIN SELECTIONS
			ALL PARAMETERS ARE SPECIFIED BY (AT LEAST) GENDER AND AGE-YEAR
			DEFAULT VALUES ARE BASED ON INPUT VALUES 
			IN CASE OF EXTREME SCENARIOS (PROPORTIONS OF REDUCTION) INPUT VALUES MAY BECOME ERRONEOUS, E.G.
				RATES<0 OR >1
----------------------------------------------------*)


If[(n < 0),

	(* EXAMPLE SCENARIO 2 FOR RISK FACTOR CLASS TRANSITION RATES *)

	If[(Mod[scen - 1, nscen0] == 1),

		(* REDUCTION OF RATE VALUES FOR RISK FACTOR 1 CLASS TRANSITION trs (SEE INPUT FILE) WITH PROPORTION reduct
			UNIFORM OVER GENDER AND AGE 
		   trs=1 CORRESPONDS WITH VECTOR OF ZERO VALUED RATES APPLIED TO EVERY NON-DEFINED TRANSITION
		   trs>1 CORRESPONDS WITH RATE VALUES FOR TRANSITION trs-1 (SEE INPUT FILE) *)

		Table[If[(riskindd[[r]] == 4),

			transriskscen[[r, Range[ng], 2]] += .024;
			transriskscen[[r, Range[ng], 4]] += .030],

			{r, nrd}]

		]

	];

If[(n == 0),

	(* EXAMPLE SCENARIO 3 FOR INITIAL RISK FACTOR CLASS PREVALENCE RATES *)

	If[(Mod[scen - 1, nscen0] == 1),

		(* PROPORTION reduct OF PREVALENCE NUMBERS MOVE TO NEXT LOWER CLASS UNIFORM OVER GENDER AND AGE *)
(*
		reduct	= .5;	

		Do[priskscen[[r, g]] = makereduct[r, reduct].priskscen[[r, g]], {r, nrd}, {g, ng}];

		Do[priskscen[[1, g, 1, a]] = 1, {g, ng}, {a, na1}];

		Do[priskscen[[1, g, ri, a]] = 0, {g, ng}, {ri, 2, ncrsel[[1]]}, {a, na1}];
*)

		Do[	If[(riskindd[[r]] == 4)||(riskindd[[r]] == 12), (* INDEX VALUE WAS 4 INSTEAD OF 5 *)
				priskscen[[r]] *= 0;
				priskscen[[r, Range[ng], 1]] += .4;
				priskscen[[r, Range[ng], 2]] += .45;
				priskscen[[r, Range[ng], 3]] += .15];

			If[(riskindd[[r]] == 1),
				priskscen[[r, Range[ng], 3]] += priskscen[[r, Range[ng], 2]];
				priskscen[[r, Range[ng], 2]] *= 0];

			If[(riskindd[[r]] == 2),
				htransrisk	= DiagonalMatrix[Table[1.,{ncrsel[[r]]}]];
					Do[htransrisk[[4 + ri,{ri, 4 + ri}]] = {1.,0.},{ri,4}];
					priskscen[[r]] = Table[Plus@@Table[htransrisk[[rj,ri]] priskscen[[r,g,rj]],
								{rj,ncrsel[[r]]}],
									{g,ng},{ri,ncrsel[[r]]}];
				];


			If[(riskindd[[r]] == 3) && (ncrsel[[r]] == 8),

				Do[	priskscen[[r, g, ri]] += priskscen[[r, g, ri + 4]];
					priskscen[[r, g, 4 + ri]] *= 0,
					{g, ng}, {ri, 4}]],

			{r, nrd}];

		];

	];


If[(n < 0),	
	(* EXAMPLE SCENARIO 4 FOR DISEASE INCIDENCE RATES *)

	If[(Mod[scen - 1, nscen0] == 3),

		(* REDUCTION OF DISEASES dissel INCIDENCE RATES WITH PROPORTION reduct UNIFORM OVER GENDER AND AGE *)

		reduct 	= .1;

		dissel	= {1};

		Do[incscen[[dissel[[d]], g]] = (1 - reduct) incscen[[dissel[[d]], g]], {d, Length[dissel]}, {g, ng}];

		];

	(* EXAMPLE SCENARIO 5 FOR DISEASE EXCESS MORTALITY RATES *)

	If[(Mod[scen - 1, nscen0] == 4),

		(* REDUCTION OF DISEASES dissel EXCESS MORTALITY RATES WITH PROPORTION reduct UNIFORM OVER GENDER AND AGE *)

		reduct 	= .1;

		dissel	= {1};

		Do[excessmortscen[[dissel[[d]], g]] = (1 - reduct) excessmortscen[[dissel[[d]], g]], {d, Length[dissel]}, {g, ng}];

		];
		
	(* EXAMPLE SCENARIO 6 FOR RELATIVE RISKS *)

	If[(Mod[scen - 1, nscen0] == 5),

		(* REDUCTION OF RR'S FOR ALL RISK FACTOR CLASSES (EXCEPT 1ST REFERENCE CLASS) FOR DISEASES dissel WITH PROPORTION reduct
			 UNIFORM OVER GENDER AND AGE *)

		reduct	= .1;

		dissel	= {1};

		Do[RRriskscen[[1, RRriskindsel[[1, dissel[[d]] + 1]], g, ri]] =
			(1 - reduct) RRriskscen[[1, RRriskindsel[[1, dissel[[d]] + 1]], g, ri]],
			{d, Length[dissel]}, {g, ng}, {ri, 2, ncrsel[[1]]}]

		];


];

"};

priskscenind		= 1;
transriskscenind	= 0;
distscenind		= 0;
a0scenind		= 0;
a1scenind		= 0;
incscenind		= 0;
excessmortscenind	= 0;
casefatscenind		= 0;
RRriskscenind		= 0;
RRcontscenind		= 0;
trackingmultind		= 0;
RRdisscenind		= 0;
RRcasefatscenind	= 0;

If[(RRsmokduurind == 1),

	relapsecoeffscenind	= 0;
	logRRsmokduurscenind	= 0];

WriteString[logfile,

	"Scenario Definitions\n\n",

		"\t" <> "nscen: " 		<> ToString[nscen] 		<> "\n\n",
		"\t" <> "priskscenind: " 	<> ToString[priskscenind] 	<> "\n",
		"\t" <> "transriskscenind: " 	<> ToString[transriskscenind] 	<> "\n",
		"\t" <> "distscenind: " 	<> ToString[distscenind] 	<> "\n",
		"\t" <> "a0scenind: " 		<> ToString[a0scenind] 		<> "\n",
		"\t" <> "a1scenind: " 		<> ToString[a1scenind] 		<> "\n",
		"\t" <> "incscenind: " 		<> ToString[incscenind] 	<> "\n",
		"\t" <> "excessmortscenind: " 	<> ToString[excessmortscenind] 	<> "\n",
		"\t" <> "casefatscenind: " 	<> ToString[casefatscenind] 	<> "\n",
		"\t" <> "RRriskscenind: " 	<> ToString[RRriskscenind] 	<> "\n",
		"\t" <> "RRcontscenind: " 	<> ToString[RRriskscenind] 	<> "\n",
		"\t" <> "trackingmultind: " 	<> ToString[trackingmultind] 	<> "\n",
		"\t" <> "RRdisscenind: " 	<> ToString[RRdisscenind] 	<> "\n",
		"\t" <> "RRcasefatscenind: " 	<> ToString[RRcasefatscenind] 	<> "\n",
		"\t" <> "relapsecoeffscenind: "	<> ToString[relapsecoeffscenind] <> "\n",
		"\t" <> "logRRsmokduurscenind: " <> ToString[logRRsmokduurscenind] <> "\n\n"
];


(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];

End[]


Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMDefineScenariossens *)

(* :Context: CZMDefineScenarios` *)

(* :Author: Rudolf Hoogenveen *)

(* :Summary:
   CZM simulation routine defines scenarios used for sensitivity analyses *)

(* :Copyright: © 2005 by Rudolf Hoogenveen *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM July 2004
		2.0 first release CZM 2005, version March
		3.0 version November 2005 
		3.2 version March 2007 *)

(* :Keywords: model equations, simulation, sensitivity analyses *)


BeginPackage["CZMDefineScenarios`CZMDefineScenariossens`",
	{"CZMInitialization`CZMLogFile`",
	"CZMImportData`CZMImportUserSelections`"}] 

makescensens::usage 	= "makescensens: routine calculates parameter values for each scenario"	


Begin["`Private`"]	


Print["CZMDefineScenariossens package is evaluated"]

makescensens := {"

(* DEFAULT PARAMETER VALUES *)

If[(n == 0),

	priskscen	= prisksel;			(* INITIAL (DISCRETE) RISK FACTOR CLASS PREVALENCE RATES FOR SCENARIO *)
	transriskscen 	= transrisksel;			(* (DISCRETE) RISK FACTOR CLASS TRANSITION RATES FOR SCENARIO *)
	distscen	= distsel;			(* INITIAL (CONTINUOUS) RISK FACTOR DISTRIBUTIONAL PARAMETERS *)
(*	a0contscen	= a0contsel;			(* (CONTINUOUS) RISK FACTOR TRANSITION RATES FOR SCENARIO (INTERCEPT) *)
	a1contscen	= a1contsel;			(* (CONTINUOUS) RISK FACTOR TRANSITION RATES FOR SCENARIO (REGRESSION) *)
*)	incscen		= incsel;			(* DISEASE INCIDENCE RATES FOR SCENARIO *)
	excessmortscen	= excessmortsel;		(* DISEASE EXCESS MORTALITY RATES FOR SCENARIO *)
	casefatscen	= casefat1;			(* DISEASE CASE FATALITY RATES FOR SCENARIO *)
	RRriskscen	= RRriskseladj;			(* (DISCRETE) RR VALUES FOR SCENARIO *)
(*	RRcontscen	= RRcontsel;			(* (CONTINUOUS) RR VALUES FOR SCENARIO *)
	trackingscen	= 1;				(* TRACKING OF RISK FACTORS *)
*)	RRdisscen	= RRdisadj;			(* RELATIVE RISKS FOR ONE DISEASE ON ANOTHER DISEASE INCIDENCE *)
	RRcasefatscen	= RRcasefat1;			(* RELATIVE RISKS FOR ONE DISEASE ON ANOTHER DISEASE CASE FATALITY *)

	If[(RRsmokduurind == 1),			
		relapsecoeffscen = relapsecoeff;	(* SMOKING RELAPSE REGRESSION COEFFICIENTS *)
		logRRsmokduurscen = logRRsmokduur];	(* FORMER SMOKER DISEASE INCIDENCE REGRESION COEFFICIENTS *)

nparameters = {	sensparameters[[1]] Plus@@ncrsel,
		sensparameters[[2]] Plus@@Table[Length[transriskscen[[r1, 1]]] - 1, {r1, nrd}],
		sensparameters[[3]] 2 nrc,
		sensparameters[[4]] 2 nrc,
		sensparameters[[5]] nd,
		sensparameters[[6]] nd,
		sensparameters[[7]] nd,
		sensparameters[[8]] nrd,
		sensparameters[[9]] nrc,
		sensparameters[[10]] 1,
		sensparameters[[11]] 1,
		sensparameters[[12]] 1,
		sensparameters[[13]] 2,
		sensparameters[[14]] 2};

nparameters = FoldList[Plus, 0, nparameters];

(* NEW INITIAL (DISCRETE) RISK FACTOR CLASS PREVALENCE RATE VALUES *)

If[(sensparameters[[1]] == 1),

	Do[If[(Mod[scen - 1, ndrawinput] == nparameters[[1]] + Plus@@ncrsel[[Range[r - 1]]] + ri),

		dp1	= Max0[deltasens / (1 - (1 + deltasens) priskscen[[r, Range[ng], ri]])];

		dp2	= dp1 priskscen[[r, Range[ng], ri]] / (1 - priskscen[[r, Range[ng], ri]] + eps);

		priskscen[[r, Range[ng], ri]] *= (1 + dp1);

		Do[If[(rj != ri), priskscen[[r, Range[ng], rj]] *= (1 - dp2)], {rj, ncrsel[[r]]}]],

		{r, nrd}, {ri, ncrsel[[r]]}]];

(* DELTA (DISCRETE) RISK FACTOR CLASS TRANSITION RATE VALUES *)

If[(sensparameters[[2]] == 1),

	Do[If[(Mod[scen - 1, ndrawinput] == nparameters[[2]] + Plus@@Table[Length[transrisksel[[r1, 1]]] - 1, {r1, r - 1}] + ri),

		transriskscen[[r, Range[ng], 1 + ri]] *= (1 + deltasens)],

		{r, nrd}, {ri, Length[transriskscen[[r, 1]]] - 1}]];

(* DELTA INITIAL (CONTINUOUS) RISK FACTOR CLASS PREVALENCE RATES (MU & SIGMA) VALUES *)

If[(sensparameters[[3]] == 1),

	Do[If[(Mod[scen - 1, ndrawinput] == nparameters[[3]] + r),

		distscen[[r, Range[ng], 1]] *= (1 + deltasens)],

		{r, nrc}];

	Do[If[(Mod[scen - 1, ndrawinput] == nparameters[[3]] + nrc + r),

		distscen[[r, Range[ng], 2]] *= (1 + deltasens)],

		{r, nrc}]];

(* DELTA INITIAL (CONTINUOUS) RISK FACTOR CLASS TRANSITION RATES (INTERCEPT A0 & REGRESSION A1) VALUES *)

If[(sensparameters[[4]] == 1),

	Do[If[(Mod[scen - 1, ndrawinput] == nparameters[[4]] + r),

		a0contscen[[r]] *= (1 + deltasens)],

		{r, nrc}];

	Do[If[(Mod[scen - 1, ndrawinput] == nparameters[[4]] + nrc + r),

		a1contscen[[r]] *= (1 + deltasens)],

		{r, nrc}]];

(* DELTA DISEASE INCIDENCE RATE VALUES *)

If[(sensparameters[[5]] == 1),

	Do[If[(Mod[scen - 1, ndrawinput] == nparameters[[5]] + d),

		incscen[[d]] *= (1 + deltasens)],

		{d, nd}]];

(* DELTA DISEASE-RELATED EXCESS MORTALITY RATE VALUES *)

If[(sensparameters[[6]] == 1),

	Do[If[(Mod[scen - 1, ndrawinput] == nparameters[[6]] + d),

		excessmortscen[[d]] *= (1+ deltasens)],

		{d, nd}]];

(* DELTA DISEASE-RELATED CASE FATALITY RATES *)

If[(sensparameters[[7]] == 1),

	Do[If[(Mod[scen - 1, ndrawinput] == nparameters[[7]] + d),

		If[(casefatindsel[[d]] > 1), casefatscen[[casefatindsel[[d]]]] *= (1+ deltasens)]],

		{d, nd}]];

(* DELTA RELATIVE RISK VALUES (DISCRETE) VALUES *)

If[(sensparameters[[8]] == 1),

	Do[If[(Mod[scen - 1, ndrawinput] == nparameters[[8]] + r),

		Do[	RRriskscen[[r, d, g, ri, a]] = RRriskscen[[r, d, g, ri, a]]^(1 + deltasens),
					
			{d, 2, Length[RRriskscen[[r]]]}, {g, ng}, {ri, ncrsel[[r]]}, {a, na1}]],

		{r, nrd}]];

(* DELTA RELATIVE RISK VALUES (CONTINUOUS) *)

If[(sensparameters[[9]] == 1),

	Do[If[(Mod[scen - 1, ndrawinput] == nparameters[[9]] + r),

		RRcontscen[[r]] = RRcontscen[[r]]^(1 + deltasens)],

		{r, nrc}]];

(* DELTA RISK FACTOR TRACKING VALUES *)

If[(sensparameters[[10]] == 1) && (Mod[scen - 1, ndrawinput] == nparameters[[10]] + 1),

		trackingscen *= (1 + deltasens)];

(* DELTA RELATIVE RISK VALUES VALUES ONE DISEASE ON ANOTHER DISEASE INCIDENCE *)

If[(sensparameters[[11]] == 1) && (Mod[scen - 1, ndrawinput] == nparameters[[11]] + 1),

		Do[	RRdisscen[[d, g]] = RRdisadj[[d, g]]^(1 + deltasens), {d, 2, Length[RRdisscen]}, {g, ng}]];

(* DELTA RELATIVE RISK VALUES VALUES ONE DISEASE ON ANOTHER DISEASE CASE FATALITY *)

If[(sensparameters[[12]] == 1) && (Mod[scen - 1, ndrawinput] == nparameters[[12]] + 1),

		Do[	RRcasefatscen[[d, g]] = RRcasefat1[[d, g]]^(1 + deltasens), {d, 2, Length[RRcasefat1]}, {g, ng}]];

(* DELTA RELAPSE REGRESSION COEFFICIENTS FOR FORMER SMOKERS *)

If[(sensparameters[[13]] == 1),

	If[(Mod[scen - 1, ndrawinput] == nparameters[[13]] + 1),

			relapsecoeffscen[[Range[ng], 1]] *= (1 + deltasens)];

	If[(Mod[scen - 1, ndrawinput] == nparameters[[13]] + 2),

			relapsecoeffscen[[Range[ng], 2]] *= (1 + deltasens)]];

(* DELTA DISEASE INCIDENCE REGRESSION COEFFICIENTS FOR FORMER SMOKERS *)

If[(sensparameters[[14]] == 1),

	If[(Mod[scen - 1, ndrawinput] == nparameters[[14]]+ 1),

			Do[logRRsmokduurscen[[d, g, 1]] -= deltasens, {d, 2, Length[logRRsmokduurscen]}, {g, ng}]];

	If[(Mod[scen - 1, ndrawinput] == nparameters[[14]] + 2),

			Do[logRRsmokduurscen[[d, g, 2]] *= (1 + deltasens), {d, 2, Length[logRRsmokduurscen]}, {g, ng}]]];


(* NEW SCENARIO VALUES *)

hscen	= Floor[(scen - 1) / ndrawinput];

If[(hscen == 1),
		Do[	priskscen[[1, g, ncrsel[[1]] - 1]] += priskscen[[1, g, ncrsel[[1]]]];
			priskscen[[1, g, ncrsel[[1]]]] *= 0,
			{g, ng}]];

];

"};

priskscenind		= sensparameters[[1]];
transriskscenind	= sensparameters[[2]];
distscenind		= sensparameters[[3]];
a0scenind		= sensparameters[[4]];
a1scenind		= sensparameters[[4]];
incscenind		= sensparameters[[5]];
excessmortscenind	= sensparameters[[6]];
casefatscenind		= sensparameters[[7]];
RRriskscenind		= sensparameters[[8]];
RRcontscenind		= sensparameters[[9]];
trackingmultind		= sensparameters[[10]];
RRdisscenind		= sensparameters[[11]];
RRcasefatscenind	= sensparameters[[12]];

If[(RRsmokduurind == 1),

	relapsecoeffscenind	= sensparameters[[13]];
	logRRsmokduurscenind	= sensparameters[[14]]];

WriteString[logfile,

	"Scenario Definitions\n\n",

		"\t" <> "nscen: " 		<> ToString[nscen] 		<> "\n\n",
		"\t" <> "priskscenind: " 	<> ToString[priskscenind] 	<> "\n",
		"\t" <> "transriskscenind: " 	<> ToString[transriskscenind] 	<> "\n",
		"\t" <> "distscenind: " 	<> ToString[distscenind] 	<> "\n",
		"\t" <> "a0scenind: " 		<> ToString[a0scenind] 		<> "\n",
		"\t" <> "a1scenind: " 		<> ToString[a1scenind] 		<> "\n",
		"\t" <> "incscenind: " 		<> ToString[incscenind] 	<> "\n",
		"\t" <> "excessmortscenind: " 	<> ToString[excessmortscenind] 	<> "\n",
		"\t" <> "casefatscenind: " 	<> ToString[casefatscenind] 	<> "\n",
		"\t" <> "RRriskscenind: " 	<> ToString[RRriskscenind] 	<> "\n",
		"\t" <> "RRcontscenind: " 	<> ToString[RRriskscenind] 	<> "\n",
		"\t" <> "trackingmultind: " 	<> ToString[trackingmultind] 	<> "\n",
		"\t" <> "RRdisscenind: " 	<> ToString[RRdisscenind] 	<> "\n",
		"\t" <> "RRcasefatscenind: " 	<> ToString[RRcasefatscenind] 	<> "\n",
		"\t" <> "relapsecoeffscenind: "	<> ToString[relapsecoeffscenind] <> "\n",
		"\t" <> "logRRsmokduurscenind: " <> ToString[logRRsmokduurscenind] <> "\n\n"
];


(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];

End[]


Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMDefineRuns *)

(* :Context: CZMDefineScenarios` *)

(* :Author: Rudolf Hoogenveen *)

(* :Summary:
   CZM simulation routine defines selections made for different CZM runs *)

(* :Copyright: © 2005 by Rudolf Hoogenveen *)

(* :Package Version:	2.0
			3.0 version November 2005
			3.1 version March 2007  *)

(* :Mathematica Version: 5.1 *)

(* :History: 	version August 2005 *)

(* :Keywords: simulation, selections, runs *)


BeginPackage["CZMDefineScenarios`CZMDefineRuns`",
	{"CZMInitialization`CZMLogFile`", 
	"CZMDefineScenarios`CZMDefineRunstest`"}] 


makerun::usage 		= "makerun: routine makes selections for new CZM runs"	


Begin["`Private`"]	


Print["CZMDefineRuns package is evaluated"];

appltype = StringTake[ToString[Global`application], {8, 11}];

makerun := Switch[appltype,

			"test",	makeruntest,
			_,	""
			
			];


(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];

End[]


Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMDefineRunstest *)

(* :Context: CZMDefineScenarios` *)

(* :Author: Rudolf Hoogenveen *)

(* :Summary:
   CZM simulation routine defines selections made for different CZM test runs *)

(* :Copyright: © 2005 by Rudolf Hoogenveen *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	2.1 version August 2005
		3.0 version November 2005 
		3.1 version March 2007 *)

(* :Keywords: simulation, selections, runs *)


BeginPackage["CZMDefineScenarios`CZMDefineRunstest`",
	{"CZMInitialization`CZMLogFile`"}] 


makeruntest::usage 	= "makeruntest: routine makes selections for new CZM runs"	


Begin["`Private`"]	


Print["CZMDefineRunstest package is evaluated"]

makeruntest := {"

	test = ToExpression[StringDrop[ToString[Global`application], 11]];

	analyse	= 3;
	nscen0	= nscen = 1;
	birthind = migpopind = 0;
	riskval	= Global`riskfactor;
	disval	= Global`disease;	
	ageclssel = 16;

	(* TOTAL POPULATION, BASELINE VALUES *)

	If[MemberQ[{1, 4, 7, 14, 29}, test],

		agemin		= 1;
		agemax		= na1;
		nstap		= 1];

	(* COHORT VALUES OVER TIME (AGE) *)

	If[MemberQ[{2, 5, 8, 11, 12, 13, 15, 30}, test],

		agemin		= 61;
		agemax		= 61;
		nstap		= 2]; (* was 20 *)

	(* FIXED AGE VALUES OVER TIME *)

	If[MemberQ[{3, 6, 9, 10, 31}, test],

		agemin		= 1;
		agemax		= na1;
		nstap		= 40];

	(* COMPARING SELECTIONS FOR GIVEN RISK FACTOR ( = GLOBAL VARIABLE riskfactor ) *)

	If[MemberQ[{1, 2, 3, 7, 8, 9, 11, 13, 14, 15}, test],

		excessmortcond 	= 1;
		mortothind 	= 0;
		riskindd	= riskind = {riskval}];

	(* COMPARING SELECTIONS FOR GIVEN DISEASE ( = GLOBAL VARIABLE disease ) *)
						
	If[MemberQ[{4, 5, 6, 12}, test],

		disindrisk	= 0;
		excessmortcond 	= 1;
		mortothind 	= 0];
		
(* TESTING EPIDEMIOLOGICAL SELECTIONS
   - ADJUSTMENT OF EXCESS MORTALITY RATES (EXCESSMORTCOND)
   - EFFECT OF RISK FACTORS THROUGH NON-MODELD DISEASES (MORTOTHIND)
   - SELECTION OF NO DISEASES OR ALL RISK FACTOR RELATED DISEASES (DISINDRISK)
*)

	If[MemberQ[{1, 2, 3}, test],

		disindrisk = 1;
		If[MemberQ[{2, 4, 6, 8}, run], excessmortcond = 2];
		If[MemberQ[{3, 4, 7, 8}, run], disindrisk = 0];
		If[MemberQ[{5, 6, 7, 8}, run], mortothind = 1]];

(* TESTING DISEASE SELECTIONS
   - ADJUSTMENT OF EXCESS MORTALITY RATES USING CALCULATED CO-MORBIDITY RATES (EXCESSMORTCOND = 1)
   - NO EFFECT OF RISK FACTORS THROUGH NON-MODELD DISEASES (MORTOTHIND = 0)
   - SELECTION OF GIVEN DISEASE ONLY OR ALSO CO-MORBID DISEASES
   - SELECTION OF NO/SELECTED RISK FACTORS
*)

	If[MemberQ[{4, 5, 6}, test],

		If[MemberQ[{1, 3}, run], disind0 = {disval}];
		If[MemberQ[{2, 4}, run], disind0 = Union[disind0, {disval}]];
		If[MemberQ[{1, 2}, run], riskind = riskindd = {}]];

(* TESTING RISK FACTOR SELECTIONS
   - ADJUSTMENT OF EXCESS MORTALITY RATES USING CALCULATED CO-MORBIDITY RATES (EXCESSMORTCOND = 1)
   - NO EFFECT OF RISK FACTORS THROUGH NON-MODELD DISEASES (MORTOTHIND = 0)
   - SELECTION OF GIVEN RISK FCTOR ONLY OR ALSO SELECTED RISK FACTORS
   - SELECTION OF NO/SELECTED DISEASES
*)

	If[MemberQ[{7, 8, 9}, test],

		If[MemberQ[{1, 3}, run], disind0 = {}];
		If[MemberQ[{1, 2}, run], riskind = riskindd = {riskval}];
		If[MemberQ[{3, 4}, run], riskind = riskindd = Union[riskind, riskindd, {riskval}]]];

(* TESTING DEMOGRAPHIC PROJECTIONS
   - NEWBORNS OR MIGRATION NUMBERS INCLUDED
   - WITHOUR RISK FACTORS AND DISEASES OR WITH RISK FACTOR SMOKING AND SOME DISEASES INCLUDED
   RESULTS ARE AGE-AGGREGATED NUMBERS OVER TIME
   COMPARING RESULTS OVER TIME
*)

	If[(test == 10),

		disind0		= {};
		birthind	= migpopind = 1;
		If[MemberQ[{2, 4}, run], birthind = 0];
		If[MemberQ[{3, 4}, run], migpopind = 0];
		If[MemberQ[{1, 2, 3, 4}, run], riskind = riskindd = {}; disind0 = {}]];

(* TESTING CZM MODEL VERSIONS ON RISK FACTORS
   - SELECTION OF NO/SELECTED DISEASES
   - SELECTION OF DIFFERENT MODEL VERSIONS (THROUGH USERINPUT)
   RESULTS ARE AGE-AGGREGATED NUMBERS OVER TIME
   COMPARING RESULTS OVER TIME
*)

	If[(test == 11),

		If[(run == 2),	disindrisk = 0; disind0 = {}]]; 

(* TESTING CZM MODEL VERSIONS ON DISEASES
   - SELECTION OF NO/SELECTED RISK FACTORS
   - SELECTION OF DIFFERENT MODEL VERSIONS (THROUGH USERINPUT)
   RESULTS ARE AGE-AGGREGATED NUMBERS OVER TIME
   COMPARING RESULTS OVER TIME
*)

	If[(test == 12),

		If[(run == 2),	riskindd = riskind0 = {}]]; 

(* TESTING ONE CZM MODEL VERSION ON RISK FACTOR SMOKING AGE AND DURATION DEPENDENT
   MARGINAL DETERMINISTIC MODEL
   COMPARING RESULTS OVER TIME
*)

	If[(test == 13),

		riskindd	= riskind = {1};
		RRsmokduurind	= 0;
		disindrisk	= 0;
		disind0		= {};
		nstap		= 1;
		modelsel	= {0, 0, 0, 1, 0, 0, 0};
		If[MemberQ[{2, 4}, run], RRsmokduurind = 1];
		If[MemberQ[{3, 4}, run], (*disindrisk = 1*) disind0 = {6}]];

(* TESTING ONE CZM MODEL VERSION ON RISK FACTOR
   - SELECTION OF DISEASES (THROUGH USERINPUT)
   - SELECTION OF DIFFERENT MODEL VERSIONS (THROUGH USERINPUT)
   COMPARING RESULTS AT BASELINE
*)

	If[MemberQ[{14, 15}, test], _]; 

(* TESTING CZM ON USE OF EMPIRICAL DATA FOR DIABETICS
*)

	If[MemberQ[{29, 30, 31}, test],

		disind0	= {7};
		patientsel = 70;
		riskindd = riskind = {2};
		nscen0 = nscen = 2;
		userriskdata = 0;
		If[MemberQ[{1}, rn], userriskdata = 1];
		excessmortcond	= 3;
		mortothind	= 1];





(* COMMENT ON USER SELECTIONS OVERRULED *)

	Print[FromCharacterCode[{84, 101, 115, 116, 105, 110, 103, 58, 32, 97, 103, 101, 
				109, 105, 110, 44, 32, 97, 103, 101, 109, 97, 120, 44, 32, 101, 120, 99, 
				101, 115, 115, 109, 111, 114, 116, 99, 111, 110, 100, 44, 32, 109,
				111, 114, 116, 111, 116, 104, 105, 110, 100, 44, 32, 110, 115, 99, 101, 
				110, 40, 48, 41, 44, 32, 97, 110, 97, 108, 121, 115, 101, 44, 32, 
				110, 115, 116, 97, 112, 44, 32, 114, 105, 115, 107, 105, 110, 100, 
				40, 100, 41, 44, 32, 100, 105, 115, 105, 110, 100, 40, 48, 41, 44, 32,
				100, 105, 115, 105, 110, 100, 114, 105, 115, 107, 32, 115, 101, 108, 101,
				99, 116, 105, 111, 110, 115, 32, 111, 118, 101, 114, 114, 117, 108, 101, 100}]];

"};


(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];

End[]


Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMSimulationFunctions *)

(* :Context: CZMSimulation` *)

(* :Author: Rudolf T. Hoogenveen *)

(* :Summary:
   CZM simulation routine describes functions to be used in simulation packages *)

(* :Copyright: © 2004 by Rudolf Hoogenveen *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM November 2004
		2.0 first release CZM 2005, version March
		3.0 version November 2005 
		3.1 version March 2007; inital distriubtions; storage of results *)

(* :Keywords: joint model, functions *)


BeginPackage["CZMSimulation`CZMSimulationFunctions`",
	{"CZMInitialization`CZMLogFile`", 
	"CZMInitialization`CZMConstants`",
	"CZMInitialization`CZMFunctions`",
	"CZMImportData`CZMImportUserSelections`",
	"CZMImportData`CZMImportDemography`",
	"CZMImportData`CZMImportRiskFactors`",
	"CZMImportData`CZMImportRelativeRisks`",
	"CZMAdjustData`CZMDataSmoothing`",
	"CZMAdjustData`CZMAdjustBeforeSelection`",
	"CZMAdjustData`CZMMakeSelections`",
	"CZMAdjustData`CZMAdjustAfterSelection`",
	"CZMDefineScenarios`CZMDefineScenarios`"}] 


ncz::usage		= "# classes in joint model = product of # classes over risk factors selected * # classes over diseases selected"
nz::usage		= "# state variables of joint model = # risk factors + # diseases selected = nrdsel + nd"
nz1::usage		= "# states of joint model = # classes of all state variables multiplied, see also ncz"
zind::usage		= "zind[[zi,z]]: related risk factor class and disease state values (columns) for joint model states (rows)"
zindrisk::usage		= "zindrisk[[r,ri]]: joint model states for any classri of risk factor r, see also zind"
zinddis::usage		= "zinddis[[d,di]]: joint model states for any state di of disease d, see also zind"
zdist::usage		= "zdist[[z]]: distances between joint model states that differ in only in variable (risk factor or disease) z"
disindsmall::usage	= "disindsmall[[d]]: diseases with prevalence rates smaller than .01"
disindlarge::usage	= "disindlarge[[d]]: complement of disindsmall"
riskclass::usage	= "riskclass[[ri]]: list of all combinations of different joint risk factor classes"
riskset::usage		= "riskset[[ri]]: joint model states for each set of joint risk factor classes, see riskclass"

makezval	::usage	= "makezval[prev]: transforms multi-dimensional state vector to index value"
makezvalinv	::usage	= "inverse function of makezval"

makeprevcurr::usage	=

"routine calculates initial class prevalence rates of joint model, with:\n
 arguments:\n 
  1: prisk: risk factor class prevalence rates\n
  2: pdis: disease prevalence rates\n
  3: RMrisk: disease incidence rate multipliers specified by risk factor class\n
  4: RRdis: disease incidence risks specified by (independent) disease\n
  5: RRcasefat: case fatality relative risks specified by (independent) disease\n
 calculation steps:\n
  1: prevalence rates = product of class prevalence rates over risk factors * disease prevalence rates\n
  2: adjustment for causal relations using disease incidence rate ratios\n
  3: (if selected) overwriting with user-provided data"

makepriskold	::usage =

"routine calculates risk factor class prevalence rates in current population"

changeprevcurrg	::usage	=

"routine calculates change of initial class prevalence rates of joint model according to scenario, with"

changeprevcurr	::usage	=

"routine calculates change of initial class prevalence rates of joint model according to scenario,\n
  (see) changeprevcurrg applied to each gender"

makeincjoint::usage	=

"routine calculates incidence rates for joint model states, with:\n
 arguments:\n
  1: incbase: baseline disease incidence rates\n
  2: RRrisk: disease incidence relative risks specified by risk factor class\n
  3: RRdis: disease incidence risks specified by (independent) disease\n
 calculated by multiplying baseline incidence rates with:\n
  1: relative risk values according to risk factor class\n
  2: relative risk values according to co-morbid disease state"

maketransmarginal::usage =

"routine calculates risk factor class transition rates, with:\n
 arguments:\n
  1: transrisk: (vector of) 1-year risk factor class transition risks\n
  2: transriskind: (matrix of) pointers to transrisk for each pair of risk factor classes\n
  3: r: risk factor class index\n
  4: ncr: # classes of r\n
  5: trackingmult: multiplicator of 1-year transition risk values related to tracking\n
 calculation steps:\n
  1: starts with selected risk factor class transition risks values\n
  2: (if selected) adding up 1-year transition risk values related to tracking\n
  3: for each transition transformation risk to rate values\n
  4: matrix back-transformation from rate to risk values resulting in 1-year state transition probability matrix"

maketransmarginalext::usage = 

"routine calculates risk factor class transition rates (extended version),\n
 i.e. maketransmarginal only applied to selected age range"

maketransjointga::usage	= 

"routine calculates transition probability matrix of joint model specified by gender and age, with:\n
 arguments:\n 
  1: g: gender\n
  2: a: age\n
  3: transrisk: 1-year risk factor class transition risks\n
  4: incbase: baseline incidence rates\n
  5: excessmort: adjusted disease-related excess mortality rates\n
  6: casefat: case fatality rates\n
  7: RRrisk: disease incidence relative risks specified by risk factor class\n
  8: trackingmult: multiplicator of 1-year transition risk values related to tracking\n
  9: RRdis: disease incidence risks specified by (independent) disease\n
  10:RRcasefat: case fatality relative risks specified by (independent) disease\n
 calculation steps:\n
  1: disease incidence rates (see makeincjoint) for each disease-free state, taking account of case fatality\n
  2: disease remission rates for each with-disease state\n
  3: risk factor class transition rates (see maketransmarginal)\n
  4: disease-related excess mortality rates for each with-disease state\n
  5: other causes mortality rates for all states\n
  6: back-transformation to 1-year incidence, state transition, and other causes mortality risks"


maketransjoint::usage	=

"routine calculates transition probability matrix of joint model, i.e\n
 (see) maketransjointga applied to each gender and age range selected"

transformres::usage	=

"routine transforms output specified by age at baseline to current age, with:\n
 arguments: see marginalmodelresults\n 
 calculation steps applied on each argument:\n
  1: numbers specified by year n and baseline age a to year and current age n+a-1\n
  2: for each year age-year specific numbers aggregated to 5-year age class values\n"

marginalmodelresults::usage =

"model results in terms of marginal numbers, with arrays as elements:\n
  1: total population numbers, indexes scen,n,g,ai\n
  2: risk factor class prevalence numbers, indexes scen,n,r,g,ri,ai\n
  3: continuous risk factor distribution characteristics, PM\n
  4: disease prevalence numbers, indexes scen,n,d,g,ai\n
  5: disease incidence numbers, indexes scen,n,d,g,ai\n
  6: cause-specific mortality numbers, indexes scen,n,d,g,ai\n
  7: aggregated age of disease onset, indexes scen,n,d,g,ai\n
  8: aggregated years since smoking cessation of former smokers, indexes scen,n,g,ai\n
  9: all cause mortality numbers per risk factor class, indexes scen,n,r,g,ri,ai\n
  length of indexes: scen: nscen, n: nstap, g: ng, r: nrdsel, ri: ncrsel[[r]], d: nd or nd+2, ai: nac[[1]]"

jointmodelresults::usage = "joint model results with indexes scen (length nscen),n (nstap),g (ng),zi (nz1),ai (nac[[1]]"

maketransrisksmok	::usage	= "routine calculates current state transition risk matrix in case of smoking being duration-dependent"
makemortsmok		::usage	= "routine calculates current mortalit risks in case of smoking being duration-dependent"


Begin["`Private`"]


Print["CZMSimulationFunctions package is evaluated"];
printtijd;

printbug[c_] := If[(bugind == 1), Print[{"CZMSimulationFunctions", c}]];


(*-------------------------------------------------
 CONSTANTS AND SYSTEM PARAMETERS OF JOINT MODEL
---------------------------------------------------*)

printbug["1."];

ncdsel	= Table[2, {nd}];
ncz 	= Flatten[{ncrsel, ncdsel}];
nz 	= Length[ncz];
nz1 	= Times@@ncz;
zdist 	= Table[Times@@ncz[[Range[z]]], {z, 0, nz - 1}];

printbug["1.1"];

If[(Max[Take[modelsel,{2,4}]] > 0),

	If[(nz > 0),
		zind = Transpose[Table[Flatten[Table[Table[zi, {zi, ncz[[z]]}, {zdist[[z]]}], {nz1 / ncz[[z]] / zdist[[z]]}]], {z, nz}]],
		zind = {1}];

printbug["1.2"];

	zindrisk 	= Table[Select[Range[nz1], (zind[[#, r]] == ri) &], {r, nrd}, {ri, ncrsel[[r]]}];
	zinddis		= Table[Select[Range[nz1], (zind[[#, nrd + d]] == di) &], {d, nd}, {di, ncdsel[[d]]}];

(* LIST OF JOINT RISK FACTOR CLASSES AND RELATED JOINT MODEL STATES *)

printbug["1.3"];

	riskclass = If[(nrd > 0),

		Transpose[Partition[Flatten[Table[ri, {r, nrd}, {Times@@Drop[ncrsel, r]}, {ri, ncrsel[[r]]},
							{Times@@ncrsel[[Range[r - 1]]]}]],
				Times@@ncrsel]],
		{}];

printbug["1.4"];

	riskset	= Table[0, {Times@@ncrsel}];

	Do[	set = Range[nz1];

		Do[set = Intersection[set, zindrisk[[r, riskclass[[ri, r]]]]], {r, nrd}];

		riskset[[ri]] = set,

		{ri, Times@@ncrsel}]

	];

(* SELECTION CRITERIA FOR ADJUSTMENT *)

printbug["1.5"];

disindlarge	= Select[Table[If[(Max[pdissel[[d]]] > .01), d, 0], {d, nd}], Positive];
disindsmall 	= Complement[Range[nd], disindlarge];


(*-------------------------------------------------
 TRANSFORMS AND RE-TRANSFORMS MULTI-DIMENSIONAL STATE VECTOR TO INDEX VALUE
---------------------------------------------------*)

makezval[prev_] := 1 + Plus@@Table[(prev[[zi]] - 1) Times@@ncz[[Range[zi - 1]]], {zi, nz}];

makezvalinv[prev_] := Block[{},

	hprev	= prev;
	zval	= 0 Table[prev, {nz}];

	Do[	zval[[nz + 1 - z]] = 1 + Quotient[hprev - 1, Times@@Drop[ncz, z]];
		hprev -= Times@@Drop[ncz, -z] (zval[[nz + 1 - z]] - 1),
		{z, nz}];

	Do[	zval[[z]] *= Sign[prev], {z, nz}];

	Transpose[zval, {3, 1, 2}]];


(*-------------------------------------------------
 CALCULATION OF INITIAL PREVALENCE RATES FOR JOINT MODEL
---------------------------------------------------*)

printbug["2."];

(* REFERENCE VALUES *)

makeprevcurr[prisk_, pdis_, RMrisk_, RRdis_, RRcasefat_] := Block[{},

printbug["2.1"];

	(* INITIAL RISK FACTOR CLASS PREVALENCE RATES *)

	hprevcurr = Table[1, {ng}, {nz1}, {na1}];

printbug["2.1.2"];

	(* CLASS PREVALENCE RATES TIMES CLASS PREVALENCE RATES FOR RISK FACTOR APPLIED TO TOTAL POPULATION *)

	Do[	hprevcurr[[g, zindrisk[[r, ri, z]]]] *= prisk[[r, g, ri]], 
		{g, ng}, {r, nrdpop}, {ri, ncrsel[[r]]}, {z, Length[zindrisk[[r, ri]]]}];

	(* CLASS PREVALENCE RATES TIMES CLASS PREVALENCE RATES FOR DISEASE-RESTRICTED RISK FACTORS (NEW DISEASE CASES) *)

	Do[	disset = Intersection[zindrisk[[nrdpop + r, ri]], zinddis[[disindinv[[disriskindddis[[r]]]], 1]]];
		Do[	hprevcurr[[g, disset[[z]]]] *= priskincsel[[r, g, ri]], {z, Length[disset]}],
		{g, ng}, {r, nrddis}, {ri, ncrsel[[nrdpop + r]]}];
	
	(* CLASS PREVALENCE RATES TIMES CLASS PREVALENCE RATES FOR DISEASE-RESTRICTED RISK FACTORS (PREVALENT DISEASE CASES) *)

	Do[	disset = Intersection[zindrisk[[nrdpop + r, ri]], zinddis[[disindinv[[disriskindddis[[r]]]], 2]]];
		Do[	hprevcurr[[g, disset[[z]]]] *= prisk[[nrdpop + r, g, ri]], {z, Length[disset]}],
		{g, ng}, {r, nrddis}, {ri, ncrsel[[nrdpop + r]]}];

	(* CO-MORBIDITY RATE MULTIPLIERS *)

	RMcomorb = If[(nrd == 0),

			Table[1., {nd}, {nd}, {na1}],

			Table[Times@@Table[Plus@@(	RMrisk[[r, RRriskindsel[[r, d + 1]], g]] *
							RMrisk[[r, RRriskindsel[[r, d1 + 1]], g]] *
							prisksel[[r, g]]),
						{r, nrdpop}],
				{d, nd}, {d1, nd}, {g, ng}]];

printbug["2.1.4"];

	(* INITIAL DISEASE PREVALENCE RATE RATIO VALUE *)

	hRMrisk	= Table[1, {ng}, {nz1}, {nd}, {na1}];

printbug["2.1.5"];

	(* ADJUSTMENT OF DISEASE PREVALENCE RATE RATIO FOR RISK FACTORS APPLIED TO TOTAL POPULATION *)

	Do[	disset	= zindrisk[[r, ri]];
		Do[hRMrisk[[g, disset[[z]], d]] *= RMrisk[[r, RRriskindsel[[r, d + 1]], g, ri]], {z, Length[disset]}, {g, ng}],

		{r, nrdpop}, {ri, ncrsel[[r]]}, {d, nd}];

printbug["2.1.6"];

	(* ADJUSTMENT OF PREVALENCE RATE RATIO FOR RISK FACTORS RESTRICTED TO DISEASES *)

	Do[	d1	= disindinv[[disriskindddis[[r]]]];

		Do[	currdis	= Intersection[zindrisk[[nrdpop + r, ri]], zinddis[[d1, 2]]];
			Do[hRMrisk[[g, currdis[[z]], d]] *= RMrisk[[nrdpop + r, RRriskindsel[[nrdpop + r, d + 1]], g, ri]],
				{z, Length[currdis]}],

			{d, nd}, {g, ng}],

		{r, nrddis}, {ri, ncrsel[[nrdpop + r]]}];

printbug["2.1.6.1"];

		(* ADJUSTMENT OF PREVALENCE RATE RATIO FOR RISK FACTORS WITH EMPIRICAL DATA *)

		If[(userriskdata >= 1), Do[

			r	= DMriskpairsel[[d, r1]];

			Do[	hRMrisk[[Intersection[zindrisk[[r, ri]], zinddis[[d, 2]]], d]] *= RMriskDMinc[[d, r1, g, ri, agerange[[a]]]],
				{ri, ncrsel[[r]]}],

			{d, nd}, {r1, Length[DMriskpairsel[[d]]]}]];

printbug["2.1.7"];

	(* CLASS PREVALENCE RATES TIMES ADJUSTMENT USING CALCULATED PREVALENCE RATE RATIO VALUES *)

	Do[	disset	= zinddis[[d, 1]];
		Do[	hprevcurr[[g, disset[[z]]]] *= 1 - hRMrisk[[g, disset[[z]], d]] pdis[[d, g]], {z, Length[disset]}, {g, ng}];

		disset	= zinddis[[d, 2]];
		Do[	hprevcurr[[g, disset[[z]]]] *= hRMrisk[[g, disset[[z]], d]] pdis[[d, g]], {z, Length[disset]}, {g, ng}],

		{d, nd}];

printbug["2.1.8"];

	(* CLASS PREVALENCE RATES TIMES ADJUSTMENT FOR CAUSALLY RELATED DISEASES *)

	Do[	d1	= dispair[[d, 1]];				(* INDEPENDENT DISEASE *)
		d2	= dispair[[d, 2]];				(* DEPENDENT DISEASE *)

		If[MemberQ[disindlarge, d1] && MemberQ[disindlarge, d2],

			(* RELATIVE RISKS AND MEAN RISKS FOR PAIR OF CAUSALLY RELATED DISEASES d1 & d2 *)

			currRRcasefat	= RRcasefat[[RRcasefatindsel[[d1, d2]], g]];

			currRRdis 	= RRdis[[RRdisindsel[[d1, d2]], g]] *
						( 1 - (currRRcasefat - 1) casefat1[[casefatindsel[[d2]], g]] /
							( 1 + (currRRcasefat - 1) pdissel[[d1, g]] - casefat1[[casefatindsel[[d2]], g]] ) );

			currERRdis	= 1 + (currRRdis - 1) RMcomorb[[d1, d2, g]] pdissel[[d1, g]];

			(* ADJUSTMENT OF PREVALENCE RATES: WITHOUT DISEASES d1 AND d2 *)

			disset	= Intersection[zinddis[[d2, 2]], zinddis[[d1, 1]]];

			Do[	hprev	= hprevcurr[[g, disset, a]] + hprevcurr[[g, disset - zdist[[nrd + d2]], a]];
				hprevcurr[[g, disset, a]] *= 1 / currERRdis[[a]];
				hprevcurr[[g, disset - zdist[[nrd + d2]], a]] = hprev - hprevcurr[[g, disset, a]],

				{a, na1}];

			disset	= Intersection[zinddis[[d2, 2]], zinddis[[d1, 2]]];

			Do[	hprev	= hprevcurr[[g, disset, a]] + hprevcurr[[g, disset - zdist[[nrd + d2]], a]];
				hprevcurr[[g, disset, a]] *= currRRdis[[a]] / currERRdis[[a]];
				hprevcurr[[g, disset - zdist[[nrd + d2]], a]] = hprev - hprevcurr[[g, disset, a]],

				{a, na1}]],

		{d, Length[dispair]}, {g, ng}];

printbug["2.1.10"];

	(* SCALING OF PREVALENCE RATES *)

	somhprevcurr	= Table[Plus@@hprevcurr[[g]], {g, ng}];
	
	Do[hprevcurr[[g, All, agerange[[a]]]] /= somhprevcurr[[g, agerange[[a]]]], {g, ng}, {a, Length[agerange]}];

	hprevcurr

	]; (* END MAKEPREVCURR *)


(* CALCULATION OF RISK FACTOR CLASS PREVALENCE RATES WITHIN CURRENT POPULATION *)

makepriskold[r_, g_] := Block[{},

	priskold	= prisksel[[r, g]];

	If[(patientsel > 0), priskold = RRrisksel[[r, RRriskindsel[[r, disindinv[[Quotient[patientsel, 10]]] + 1]], g]] prisksel[[r, g]]];

	If[(userriskdata >= 1), Do[

		If[(DMriskpairsel[[d, hr]] == r), priskold = RMriskDMinc[[d, hr, g]] prisksel[[r, g]]],

		{d, nd}, {hr, Length[DMriskpairsel[[d]]]}]];

	priskold	= Table[priskold[[ri]] / Plus@@priskold, {ri, ncrsel[[r]]}];

	priskold];


(* CHANGE OF REFERENCE VALUES ACCORDING TO SCENARIO *)

changeprevcurrg[g_, prevcurr_, prisknew_] := Block[{priskold, hprevcurr, disset, currdis}, 

printbug["2.3"];

    hprevcurr = prevcurr;

printbug["2.3.1"];

    disset = Range[nz1];

    If[patientsel > 0, disset = Intersection[disset, zinddis[[disindinv[[Quotient[patientsel,10]]], 2]]]];

    scenpriskind = Table[0, {nrd}];
    Do[If[Max[Abs[prisknew[[r]] - prisksel[[r,g]]]] > 0, scenpriskind[[r]] = 1], {r, nrd}];

printbug["2.3.2"];

    Do[If[(scenpriskind[[r]] > 0),

	(*PERSONS IN RISK FACTOR CLASS*)

printbug["2.3.3"];

        currdis = If[(r > nrdpop), Intersection[disset,zinddis[[disindinv[[disriskindddis[[r - nrdpop]]]], 2]]], disset];
        currdis = Table[Intersection[currdis, zindrisk[[r, ri]]], {ri, ncrsel[[r]]}];

printbug["2.3.4"];

        priskold = makepriskold[r, g];

        Do[transrisk = 
		If[(ncrsel[[r]] == 8),
			makedrisk[r, priskold[[All, agerange[[a]]]],prisknew[[r, All, agerange[[a]]]],1],
			makedrisk[r, priskold[[All, agerange[[a]]]],prisknew[[r, All, agerange[[a]]]], 0]];

printbug["2.3.5"];

          		Do[	If[(rj != ri),
				Do[					
					hprevcurr[[currdis[[ri,zi]] + (rj - ri) zdist[[r]], agerange[[a]]]] +=
						transrisk[[ri, rj]] prevcurr[[currdis[[ri, zi]], agerange[[a]]]];
		                	hprevcurr[[currdis[[ri, zi]], agerange[[a]]]] -= 
						transrisk[[ri, rj]] prevcurr[[currdis[[ri, zi]],agerange[[a]]]],
						{zi, Length[currdis[[ri]]]}]],

					{ri, ncrsel[[r]]}, {rj, ncrsel[[r]]}],
			{a, Length[agerange]}]],
		{r, nrd}];


    hprevcurr];(*END CHANGEPREVCURRG*)

changeprevcurr[prevcurr_, prisk_] :=
                   Table[changeprevcurrg[g, prevcurr[[g]], prisk[[All, g]]],{g, ng}];


(*-------------------------------------------------
 CALCULATION OF INCIDENCE RATES FOR JOINT MODEL
---------------------------------------------------*)

printbug["3."];

makeincjoint[incbase_, RRrisk_, RRdis_] := Block[{},

printbug["3.1"];

	incrate	= Table[0, {ng}, {nd}, {nz1}, {na1}];
	
	Do[	incrate[[g, d, zinddis[[d, 1]]]] = Table[incbase[[d, g]], {Length[zinddis[[d, 1]]]}], {g, ng}, {d, nd}];

	(* ADJUSTMENT FOR POPULATION RISK FACTOR LEVELS *)
	
	Do[	disset	= Intersection[zindrisk[[r, ri]], zinddis[[d, 1]]];

		Do[incrate[[g, d, disset]] *= Table[RRrisk[[r, RRriskindsel[[r, d + 1]], g, ri]], {Length[disset]}],
			{g, ng}],
		{r, nrdpop}, {ri, ncrsel[[r]]}, {d, nd}];

	(* ADJUSTMENT FOR RISK FACTORS ONLY RELEVANT FOR SPECIFIC DISEASES, E.G. HBA1C AND DIABETES *)
	
	Do[	d1 = disindinv[[disriskindddis[[r]]]];

		disset	= Intersection[zindrisk[[r, ri]], zinddis[[d1, 1]]];

		Do[incrate[[g, d1, disset]] *= Table[RRrisk[[nrdpop + r, RRriskindsel[[nrdpop + r, d1 + 1]], g, ri]], {Length[disset]}],
			{g, ng}],

		{r, nrddis}, {ri, ncrsel[[nrdpop + r]]}];

	(* ADJUSTMENT FOR RISK FACTORS ONLY RELEVANT FOR SPECIFIC DISEASES, E.G. HBA1C AND DIABETES *)
	
	Do[	disset	= Intersection[zinddis[[disindinv[[disriskindddis[[r]]]], 2]], zinddis[[d, 1]]];

		Do[	currdis	= Intersection[disset, zindrisk[[nrdpop + r, ri]]];

			Do[incrate[[g, d, currdis]] *=
				Table[RRrisk[[nrdpop + r, RRriskindsel[[nrdpop + r, d + 1]], g, ri]], {Length[currdis]}],
				{g, ng}],

			{ri, ncrsel[[nrdpop + r]]}],

		{r, nrddis}, {d, nd}];

	(* ADJUSTMENT FOR CO-MORBIDITY *)

	Do[	d1		= dispair[[d, 1]];				(* INDEPENDENT DISEASE *)
		d2		= dispair[[d, 2]];				(* DEPENDENT DISEASE *)

		currdis		= Intersection[zinddis[[d1, 2]], zinddis[[d2, 1]]];

		Do[incrate[[g, d2, currdis]] *= Table[RRdis[[RRdisindsel[[d1, d2]], g]], {Length[currdis]}], {g, ng}],

		{d, Length[dispair]}];

	Max0[Min1[incrate]]
	
	]; (* END MAKEINCJOINT *)


(*-------------------------------------------------
 CALCULATION OF RISK FACTOR CLASS TRANSITION RATES FOR MARGINAL MODEL
---------------------------------------------------*)

printbug["4."];

(* ONLY FOR AGERANGE *)

maketransmarginal[transrisk_, transriskind_, r_, ncr_, trackingmult_] := Block[{},

printbug["4.1"];

	transrate = Table[0, {ng}, {na1}, {ncr}, {ncr} ];

	Do[	(* DATA VALUES *)

		htrans	= Table[transrisk[[g, transriskind[[ri, rj]], agerange[[a]]]], {ri, ncr}, {rj, ncr}];

		(* ADJUSTMENT FOR TRACKING *)

		If[(trackingind == 1) && (trstrackingind[[riskindd[[r]]]] == 1),

			Do[htrans[[ri, ri + 1]] += trackingmult trstrackingsel[[r, g, ri, 1, agerange[[a]]]], {ri, ncr - 1}];
			Do[htrans[[ri, ri - 1]] += trackingmult trstrackingsel[[r, g, ri, 2, agerange[[a]]]], {ri, 2, ncr}]];

		(* RISK -> RATE TRANSFORMATION *)

		htrans 	= -Log[1 - htrans];
		
		Do[	htrans[[ri, ri]] = - Plus@@htrans[[ri]], {ri, ncr}];

		(* MATRIX RATE -> RISK TRANSFORMATION *)

		transrate[[g, agerange[[a]]]] = Max0[Min1[DiagonalMatrix[Table[1, {ncr}]] + htrans + .5 htrans.htrans]],

		{g, ng}, {a, Length[agerange]}];

	transrate = Table[transrate[[g, Range[na1], ri, rj]], {g, ng}, {ri, ncr}, {rj, ncr}]
	
	];

(* FROM MINIMUM OF AGERANGE ONWARDS *)

maketransmarginalext[transrisk_, transriskind_, r_, ncr_, trackingmult_] := Block[{},

printbug["4.2"];

	transrate = Table[0, {ng}, {na1}, {ncr}, {ncr} ];

	hagerange = Range[Min[agerange], na1];

	Do[	(* DATA VALUES *)

		htrans	= Table[transrisk[[g, transriskind[[ri, rj]], hagerange[[a]]]], {ri, ncr}, {rj, ncr}];

		(* ADJUSTMENT FOR TRACKING *)

		If[(trackingind == 1) && (trstrackingind[[riskindd[[r]]]] == 1),

			Do[htrans[[ri, ri + 1]] += trackingmult trstrackingsel[[r, g, ri, 1, hagerange[[a]]]], {ri, ncr - 1}];

			Do[htrans[[ri, ri - 1]] += trackingmult trstrackingsel[[r, g, ri, 2, hagerange[[a]]]], {ri, 2, ncr}]	];

		(* RISK -> RATE TRANSFORMATION *)

		htrans 	= -Log[1 - htrans];
		
		Do[	htrans[[ri, ri]] = - Plus@@htrans[[ri]], {ri, ncr}];

		(* MATRIX RATE -> RISK TRANSFORMATION *)

		transrate[[g, hagerange[[a]]]] = Max0[Min1[DiagonalMatrix[Table[1, {ncr}]] + htrans + .5 htrans.htrans]],

		{g, ng}, {a, Length[hagerange]}];

	transrate = Table[transrate[[g, Range[na1], ri, rj]], {g, ng}, {ri, ncr}, {rj, ncr}]
	
	];


(*-------------------------------------------------
 CONSTRUCTION OF TRANSITION PROBABILITY MATRIX SPECIFIED BY GENDER AND AGE
---------------------------------------------------*)

printbug["5."];

maketransjointga[g_, a_, transrisk_, incbase_, excessmort_, casefat_, RRrisk_, trackingmult_, RRdis_, RRcasefat_] := Block[{},

printbug["5.1"];

	transjoint1	= Table[0, {nz1}, {nz1}];
	incrate1	= Table[0, {nd}, {nz1}];

(* EXCESS MORTALITY RATES FOR ONE-DISEASE AND CO-MORBID DISEASE PATIENTS *)

printbug["5.1.1"];	

	excessmortadj 	= Min1[Max0[excessmortseladj + (excessmort - excessmortsel)]];

(* chang151206RH *)
(* DISEASE INCIDENCE RATES *)

printbug["5.1.2"];

	Do[	(* DISEASE-FREE STATES *)

		disset = zinddis[[d, 1]];

		incrate2 = Table[0, {nz1}];

		(* ADJUSTMENT FOR DISCRETELY DISTRIBUTED POPULATION RISK FACTORS AND CO-MORBIDITY *)

		incrate2[[disset]] = incbase[[d, g, a]] *

				Times@@Table[RRrisk[[r, RRriskindsel[[r, d + 1]], g, zind[[disset, r]], a]], {r, nrdpop}] *

				Times@@Table[(2 - zind[[disset, nrd + d1]]) +
							(zind[[disset, nrd + d1]] - 1) RRdis[[RRdisindsel[[d1, d]], g, a]],
						{d1, nd}];

		(* ADJUSTMENT FOR DISCRETELY DISTRIBUTED DISEASE-SPECIFIC POPULATION RISK FACTORS, E.G. HBA1C *)

		Do[	currdis	= Intersection[zinddis[[disindinv[[disriskindddis[[r]]]], 2]], zindrisk[[riskindddis[[r]], ri]], disset];

			incrate2[[currdis]] *= RRrisk[[nrdpop + r, RRriskindsel[[nrdpop + r, d + 1]], g, ri, a]],

			{r, nrddis}, {ri, ncrsel[[nrdpop + r]]}];

		casefat2 = Table[casefat[[casefatindsel[[d]], g, a]] /
					Times@@Table[1 + (RRcasefat[[RRcasefatindsel[[d1, d]], g, a]] - 1) pdissel[[d1, g, a]],
							{d1, nd}],
				{nz1}];

		Do[	currdis = Intersection[disset, zinddis[[d1, 2]]];

			casefat2[[currdis]] *= RRcasefat[[RRcasefatindsel[[d1, d]], g, a]],

			{d1, nd}];

		(* ADJUSTMENT FOR RISK FACTORS ONLY RELEVANT FOR SPECIFIC DISEASES, E.G. HBA1C AND DIABETES *)
	
		Do[	d1 = disindinv[[disriskindddis[[r]]]];

			If[(d == d1),

				Do[	currdis	= Intersection[zindrisk[[r, ri]], disset];

					incrate2[[currdis]] *=
						Table[RRrisk[[nrdpop + r, RRriskindsel[[nrdpop + r, d1 + 1]], g, ri, a]], {Length[currdis]}],

					{ri, ncrsel[[nrdpop + r]]}]],

			{r, nrddis}]; 

		incrate2 = - Log[1 - incrate2];

		incrate1[[d]] = incrate2;

		Do[transjoint1[[disset[[zi]], disset[[zi]] + zdist[[nrd + d]]]] += (1 - casefat2[[zi]]) incrate2[[disset[[zi]]]],
				{zi, Length[disset]}];

		Do[transjoint1[[disset[[zi]], disset[[zi]]]] -= incrate2[[disset[[zi]]]],
				{zi, Length[disset]}],

		{d, nd}];

(* DISEASE REMISSION RATES *)

printbug["5.1.3"];

	Do[	disset	= zinddis[[d, 2]];

		remrate	= - Log[1 - rem1[[remindsel[[d]], g, a]]];

		Do[transjoint1[[disset[[zi]], disset[[zi]] - zdist[[nrd + d]]]] += remrate, {zi, Length[disset]}];

		Do[transjoint1[[disset[[zi]], disset[[zi]]]] -= remrate, {zi, Length[disset]}],

		{d, nd}];

(* RISK FACTOR CLASS TRANSITION RATES *)

printbug["5.1.4"];

	Do[	disset	= zindrisk[[r, ri]];

		htrans	= Table[0, {nz1}];

		Do[	If[(transriskindsel[[r, ri, rj]] > 1),

				htrans[[disset]]	= transrisk[[r, g, transriskindsel[[r, ri, rj]], a]];

				(* ADJUSTMENT FOR TRACKING *)
				
				If[(trackingind == 1) && (trstrackingind[[riskindd[[r]]]] == 1),

					If[(rj == (ri + 1)), htrans[[disset]] += trackingmult trstrackingsel[[r, g, ri, 1, a]]];
				
					If[(rj == (ri - 1)), htrans[[disset]] += trackingmult trstrackingsel[[r, g, ri, 2, a]]]];

				(* TIME-CONSTANT CLASS PREVALENCE RATES IN DISESE-FREE PERSONS FOR DISEASE SPECIFIC RISK FACTORS *)

				If[(r > nrdpop),

					currdis	= Intersection[disset, zinddis[[disindinv[[disriskindddis[[r - nrdpop]]]], 1]]];

					htrans[[currdis]] = 0];

				transrate	= - Log[1 - htrans];

				Do[transjoint1[[disset[[zi]], disset[[zi]] + zdist[[r]] (rj - ri)]] += transrate[[disset[[zi]]]],
						{zi, Length[disset]}];

				Do[transjoint1[[disset[[zi]], disset[[zi]]]] -= transrate[[disset[[zi]]]],
						{zi, Length[disset]}]

				],

			{rj, ncrsel[[r]]}],

		{r, nrd}, {ri, ncrsel[[r]]}];
	
(* DISEASE-RELATED EXCESS MORTALITY RATES *)

printbug["5.1.5"];

	Do[	disset = zinddis[[d, 2]];
		excessmortrate	= - Log[1 - excessmortadj[[d, g, a]]];
		
		Do[transjoint1[[disset[[zi]], disset[[zi]]]] -=  excessmortrate, {zi, Length[disset]}],

		{d, nd}];

(* OTHER CAUSES MORTALITY RATES *)

printbug["5.1.6"];

	mortothrate1 = - Log[1 - mortothsel[[g, a]]] Table[1, {nz1}];

	Do[	currdis = zindrisk[[r, ri]];
		mortothrate1[[currdis]] *= RMothrisksel[[r, g, ri, a]],
		{r, nrdpop}, {ri, ncrsel[[r]]}];

	Do[	disset	= zindrisk[[nrdpop + r, ri]];
		currdis = Intersection[disset, zinddis[[disindinv[[disriskindddis[[r]]]], 1]]];
		mortothrate1[[currdis]] *= RMothrisksel[[r, g, 1, a]];
		currdis = Intersection[disset, zinddis[[disindinv[[disriskindddis[[r]]]], 2]]];
		mortothrate1[[currdis]] *= RMothrisksel[[r, g, ri, a]],		
		{r, nrddis}, {ri, ncrsel[[r]]}];

	Do[transjoint1[[zi, zi]] -= mortothrate1[[zi]], {zi, nz1}];

(* TRANSFORMATION OF RATES TO 1-YEAR RISKS *)

printbug["5.1.7"];

	transjoint1 	= DiagonalMatrix[Table[1, {nz1}]] + transjoint1 + .5 transjoint1.transjoint1;

	incrate1	= Max0[Min1[1 - Exp[-incrate1]]];

	mortothrate1	= Max0[Min1[1 - Exp[-mortothrate1]]];

	{transjoint1, incrate1, mortothrate1}

]; (* END MAKETANSJOINTGA *)


(*-------------------------------------------------
 CONSTRUCTS TRANSITION PROBABILITY MATRIX OVER GENDER AND AGE
---------------------------------------------------*)

maketransjoint[transrisk_, incbase_, excessmort_, casefat_, RRrisk_, trackingmult_, RRdis_, RRcasefat_] := Block[{},

printbug["5.2"];

	transjoint	= Table[0, {ng}, {nz1}, {nz1}, {na1}];
	incrate		= Table[0, {ng}, {nd}, {nz1}, {na1}];
	mortothrate	= Table[0, {ng}, {nz1}, {na1}];

	Do[	rate 	=  maketransjointga[g, agerange[[a]], transrisk, incbase, excessmort, casefat,
						RRrisk, trackingmult, RRdis, RRcasefat];

		transjoint[[g, Range[nz1], Range[nz1], agerange[[a]]]] 	= rate[[1]];

		incrate[[g, Range[nd], Range[nz1], agerange[[a]]]] 	= rate[[2]];

		mortothrate[[g, Range[nz1], agerange[[a]]]] 		= rate[[3]],

		{g, ng}, {a, Length[agerange]}];

	{transjoint, incrate, mortothrate}

]; (* END MAKETRANSJOINT *)


(*-------------------------------------------------
 TRANSFORMS OUTPUT SPECIFIED BY AGE AT BASELINE TO CURRENT AGE
---------------------------------------------------*)

printbug["6."];

transformres[respop_, resrisk_, resdist_, resdis_, resinc_, resmort_, resonsetage_, resduurstop_, resmortrisk_] := Block[{},

(* POPULATION NUMBERS *)

	respop1 = Table[0, {nscen}, {nstap}, {ng}, {nac[[1]]}];

	Do[	hres	= Table[0, {nstap}, {na1 + nstap}];

		Do[hres[[n, agesel[[a]] + n - 1]] += respop[[scen, n, g, a]], {n, nstap}, {a, Length[agesel]}];

		hres	= Table[Flatten[{hres[[n, Range[na]]], Plus@@Drop[hres[[n]], na]}], {n, nstap}];

		Do[respop1[[scen, n, g]] = aggreg[hres[[n]], 1], {n, nstap}],

		{scen, nscen}, {g, ng}];

(* RISK FACTOR CLASS PREVALENCE NUMBERS *)

	resrisk1 = Table[0, {nscen}, {nstap}, {r, nrd}, {ng}, {ncrsel[[r]]}, {nac[[1]]}];

	Do[	hres	= Table[0, {nstap}, {na1 + nstap}];

		Do[hres[[n, agesel[[a]] + n - 1]] += resrisk[[scen, n, r, g, ri, a]], {n, nstap}, {a, Length[agesel]}];

		hres	= Table[Flatten[{hres[[n, Range[na]]], Plus@@Drop[hres[[n]], na]}], {n, nstap}];

		Do[resrisk1[[scen, n, r, g, ri]] = aggreg[hres[[n]], 1], {n, nstap}],

		{scen, nscen}, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}];

(* DISEASE PREVALENCE NUMBERS *)

	resdis1 = Table[0, {nscen}, {nstap}, {nd}, {ng}, {nac[[1]]}];

	Do[	hres	= Table[0, {nstap}, {na1 + nstap}];

		Do[hres[[n, agesel[[a]] + n - 1]] += resdis[[scen, n, d, g, a]], {n, nstap}, {a, Length[agesel]}];

		hres	= Table[Flatten[{hres[[n, Range[na]]], Plus@@Drop[hres[[n]], na]}], {n, nstap}];

		Do[resdis1[[scen, n, d, g]] = aggreg[hres[[n]], 1], {n, nstap}],

		{scen, nscen}, {d, nd}, {g, ng}];

(* DISEASE INCIDENCE NUMBERS *)

	resinc1 = Table[0, {nscen}, {nstap}, {nd}, {ng}, {nac[[1]]}];

	Do[	hres	= Table[0, {nstap}, {na1 + nstap}];

		Do[hres[[n, agesel[[a]] + n - 1]] += resinc[[scen, n, d, g, a]], {n, nstap}, {a, Length[agesel]}];

		hres	= Table[Flatten[{hres[[n, Range[na]]], Plus@@Drop[hres[[n]], na]}], {n, nstap}];

		Do[resinc1[[scen, n, d, g]] = aggreg[hres[[n]], 1], {n, nstap}],

		{scen, nscen}, {d, nd}, {g, ng}];

(* MORTALITY NUMBERS *)

	resmort1 = Table[0, {nscen}, {nstap}, {nd + 2}, {ng}, {nac[[1]]}];

	Do[	hres	= Table[0, {nstap}, {na1 + nstap}];

		Do[hres[[n, agesel[[a]] + n - 1]] += resmort[[scen, n, d, g, a]], {n, nstap}, {a, Length[agesel]}];

		hres	= Table[Flatten[{hres[[n, Range[na]]], Plus@@Drop[hres[[n]], na]}], {n, nstap}];

		Do[resmort1[[scen, n, d, g]] = aggreg[hres[[n]], 1], {n, nstap}],

		{scen, nscen}, {d, nd + 2}, {g, ng}];

(* SUM OF AGE AT ONSET OF DISEASED PERSONS *)

	resonsetage1 = Table[0, {nscen}, {nstap}, {nd}, {ng}, {nac[[1]]}];

	Do[	hres	= Table[0, {nstap}, {na1 + nstap}];

		Do[hres[[n, agesel[[a]] + n - 1]] += resonsetage[[scen, n, d, g, a]], {n, nstap}, {a, Length[agesel]}];

		hres	= Table[Flatten[{hres[[n, Range[na]]], Plus@@Drop[hres[[n]], na]}], {n, nstap}];

		Do[resonsetage1[[scen, n, d, g]] = aggreg[hres[[n]], 1], {n, nstap}],

		{scen, nscen}, {d, nd}, {g, ng}];

(* SUM OF TIME DURATION SINCE SMOKING CESSATION *)

	If[(RRsmokduurind == 1) && (riskindd[[1]] == 1),

		(* IF DURATION DEPENDENT *)

		resduurstop1 = Table[0, {nscen}, {nstap}, {ng}, {nac[[1]]}];

		Do[	hres	= Table[0, {nstap}, {na1 + nstap}];

			Do[hres[[n, agesel[[a]] + n - 1]] += resduurstop[[scen, n, g, a]], {n, nstap}, {a, Length[agesel]}];

			hres = Table[Flatten[{hres[[n, Range[na]]], Plus@@Drop[hres[[n]], na]}], {n, nstap}];

			Do[resduurstop1[[scen, n, g]] = aggreg[hres[[n]], 1], {n, nstap}],

			{scen, nscen}, {g, ng}],

		(* IF NOT DURATION DEPENDENT *)

		resduurstop1 = resduurstop

		];

(* CHARACTERISTICS OF CONTINUOUSLY DISTRIBUTED RISK FACTORS *)

	If[(riskcontind == 1) && (nrc > 0),

		resdist1 = Table[0, {nscen}, {nstap}, {nrc}, {ng}, {2}, {nac[[1]]}];

		Do[	hres	= Table[0, {nstap}, {na1 + nstap}];

			Do[hres[[n, agesel[[a]] + n - 1]] += resdist[[scen, n, r, g, ri, a]], {n, nstap}, {a, Length[agesel]}];
			hres	= Table[Flatten[{hres[[n, Range[na]]], Plus@@Drop[hres[[n]], na]}], {n, nstap}];
			Do[resdist1[[scen, n, r, g, ri]] = aggreg[hres[[n]], 1], {n, nstap}],
			{scen, nscen}, {r, nrc}, {g, ng}, {ri, 2}],

		resdist1 = resdist

		];	

(* RISK FACTOR CLASS MORTALITY NUMBERS *)

	resmortrisk1 = Table[0, {nscen}, {nstap}, {r, nrd}, {ng}, {ncrsel[[r]]}, {nac[[1]]}];

	Do[	hres	= Table[0, {nstap}, {na1 + nstap}];

		Do[hres[[n, agesel[[a]] + n - 1]] += resmortrisk[[scen, n, r, g, ri, a]], {n, nstap}, {a, Length[agesel]}];

		hres	= Table[Flatten[{hres[[n, Range[na]]], Plus@@Drop[hres[[n]], na]}], {n, nstap}];

		Do[resmortrisk1[[scen, n, r, g, ri]] = aggreg[hres[[n]], 1], {n, nstap}],

		{scen, nscen}, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}];	

	{respop1, resrisk1, resdist1, resdis1, resinc1, resmort1, resonsetage1, resduurstop1, resmortrisk1}

]; (* END TRANSFORMRES *)


(* --------------------------------------------------
 CALCULATION OF SMOKING CLASS TRANSITION RATES ACCORDING TO GIVEN SCENARIO scen AND FOR GIVEN TIME n
----------------------------------------------------*)

maketransrisksmok[transrisk_, relapserate_] := Block[{},
	
	htransrisksmok = Table[0, {ng}, {ncsmok}, {ncsmok}, {na1}];
	
	Do[	(* TRANSITIONS BETWEEN CLASSES *)			

		htransrisksmok[[g, 1, {2, 3}]]		+= transrisk[[1, g, 1, {2, 3}]];
		htransrisksmok[[g, 2, 3]] 		+= transrisk[[1, g, 2, 3]];
		Do[htransrisksmok[[g, 2 + ri, 2]] 	+= relapserate[[g, ri]], {ri, nstopduur}];

		Do[htransrisksmok[[g, ri, ri]] 		= 1 - Plus@@htransrisksmok[[g, ri]], {ri, ncsmok}];
		Do[htransrisksmok[[g, ri, ri + 1]]	= htransrisksmok[[g, ri, ri]], {ri, 3, ncsmok - 1}];
		Do[htransrisksmok[[g, ri, ri]]		*= 0, {ri, 3, ncsmok - 1}],

		{g, ng}];

	htransrisksmok]; (* MAKETRANSRISKSMOK *)


(* --------------------------------------------------
 CALCULATION OF SMOKING CLASS MORTALITY RATES FOR GIVEN TIME n
----------------------------------------------------*)

makemortsmok[nrisksmok_, RRsmokform_, mortspec_, RMothsmok_, mortoth_] := Block[{},

	hmortsmok = Table[0, {ng}, {ncsmok}, {na1}];	

	(* DISEASE-RELATED EXCESS MORTALITY RATES *)

	ERRsmok = Table[(Plus@@Table[nrisksmok[[g, ri]] RRrisksel[[1, RRriskindsel[[1, d + 1]], g, ri]], {ri, 2}] +
				Plus@@Table[nrisksmok[[g, 2 + ri]] RRsmokform[[RRriskindsel[[1, d + 1]], g, ri]], {ri, nstopduur}]) /
				(Plus@@nrisksmok[[g]] + eps),
				{d, nd}, {g, ng}];

	Do[hmortsmok[[g, ri]] += Plus@@Table[mortspec[[d, g]] RRrisksel[[1, RRriskindsel[[1, d + 1]], g, ri]] / (ERRsmok[[d, g]] + eps),
						{d, nd}],
				{g, ng}, {ri, 2}];

	Do[hmortsmok[[g, 2 + ri]] += Plus@@Table[mortspec[[d, g]] RRsmokform[[RRriskindsel[[1, d + 1]], g, ri]] / (ERRsmok[[d, g]] + eps),
						{d, nd}],
				{g, ng}, {ri, nstopduur}];

	(* OTHER CAUSES MORTALITY RATES *)

	ERMothsmok = Table[Plus@@(RMothsmok[[g]] nrisksmok[[g]]) / (Plus@@nrisksmok[[g]] + eps), {g, ng}];

	Do[hmortsmok[[g, ri]] += RMothsmok[[g, ri]] mortoth[[g]] / (ERMothsmok[[g]] + eps), {g, ng}, {ri, ncsmok}];

	hmortsmok]; (* MAKEMORTSMOK *)



(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];

End[]


Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMSimulationMarginalModelDetermPop *)

(* :Context: CZMsimulation` *)

(* :Author: Rudolf T. Hoogenveen *)

(* :Summary:
   CZM simulation routine describes deterministic CZM marginal model, i.e. equations of change of marginal
   risk factor class and disease prevalence numbers *)

(* :Copyright: © 2004 by Rudolf Hoogenveen *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM July 2004
		2.0 first release CZM 2005, version March, effect of time since smoking cessation
		3.0 version November 2005 
		3.1 version March 2007; storage of results *)

(* :Keywords: model equations, simulation *)


BeginPackage["CZMSimulation`CZMSimulationMarginalModelDetermPop`",
	{"CZMInitialization`CZMLogFile`", 
	 "CZMInitialization`CZMConstants`",
	"CZMInitialization`CZMFunctions`",
	"CZMImportData`CZMImportUserSelections`",
	"CZMImportData`CZMImportDemography`",
	"CZMImportData`CZMImportRiskFactors`",
	"CZMImportData`CZMImportRelativeRisks`",
	"CZMAdjustData`CZMDataSmoothing`",
	"CZMAdjustData`CZMMakeSelections`",
	"CZMAdjustData`CZMAdjustBeforeSelection`",
	"CZMAdjustData`CZMMakeSelections`",
	"CZMAdjustData`CZMAdjustAfterSelection`",
	"CZMDefineScenarios`CZMDefineScenarios`",
	"CZMSimulation`CZMSimulationFunctions`"}] 


resmarginalmodeldetermpop::usage 	= "output numbers of deterministic marginal model, see marginalmodelresults"


Begin["`Private`"]	


Print["CZMSimulationMarginalModelDetermPop package is evaluated"];
printtijd;

printbug[c_] := If[(bugind == 1), Print[{"CZMSimulationMarginalModelDetermPop", c}]];

appltype	= StringTake[ToString[Global`application], {8, 11}];

respop = resrisk = resdist = resdis = resinc = resmort = resonsetage = resduurstop = resmortrisk = Table[0., {nscen}, {nstap}];

If[(modelsel[[1]] == 1) && (appltype != "outp"),

(* INITIALIZE OUTPUT VARIABLES *)

printbug["1."];

respop 		= Table[0., {nscen}, {nstap}, {ng}, {nac[[1]]}];
resrisk 	= Table[0., {nscen}, {nstap}, {r, nrd}, {ng}, {ncrsel[[r]]}, {nac[[1]]}];
resdis 		= Table[0., {nscen}, {nstap}, {nd}, {ng}, {nac[[1]]}]; 
resinc		= Table[0., {nscen}, {nstap}, {nd}, {ng}, {nac[[1]]}]; 
resmort 	= Table[0., {nscen}, {nstap}, {nd + 2}, {ng}, {nac[[1]]}]; 
resonsetage	= Table[0., {nscen}, {nstap}, {nd}, {ng}, {nac[[1]]}];
If[(riskcontind == 1) && (nrc > 0),
	resdist		= Table[0., {nscen}, {nstap}, {nrc}, {ng}, {2}, {nac[[1]]}]];

(* INITIALIZE MODEL VARIABLES *)

printbug["2."];

If[(RRsmokduurind == 1),

	n		= 0;
	scen		= 1;
	ToExpression[makescen];
	
	(* CHARACTERISTICS OF DISTRIBUTIN OF TIME SINCE SMOKING CESSATION *)

printbug["2.1"];	

	resduurstop	= Table[0, {nscen}, {nstap}, {ng}, {nac[[1]]}];		(* OUTPUT VARIABLE *)

(* Delete testrun17 151106 Jack
printbug["2.2"];

	ncsmok		= ncrsel[[1]] + nstopduur - 1;				(* # SMOKING CLASSES *)

printbug["2.3"];

	duurval		= Range[nstopduur] - .5;				(* MEAN TIME SINCE SMOKING CESSATION *)
End of delete testrun17 151106 Jack *)

	(* OTHER CAUSES SMOKING RISKS DEPEND ON TIME SINCE SMOKING CESSATION *)

printbug["2.4"];

	hRMothsmok	= Table[RMothrisksel[[1, g, ri]] / RMothrisksel[[1, g, 1]], {g, ng}, {ri, 3}];

printbug["2.5"];

	RMsmokformoth	= Table[1 + (hRMothsmok[[g, 2]] - 1) Exp[ -logRRsmokduuroth[[g, 1]] *
					Exp[ - logRRsmokduuroth[[g, 2]] Max0[Range[na1] - 51] ] duurval[[ri]] ],
				{g, ng}, {ri, nstopduur}];

printbug["2.6"];

	ERRothsmok	= Table[Plus@@(hRMothsmok[[g, Range[2]]] prisksel[[1, g, Range[2]]]) +
				Plus@@(RMsmokformoth[[g]] stopduur[[g]]) prisksel[[1, g, 3]],
				{g, ng}];

printbug["2.7"];

	Do[hRMothsmok[[g]] = Join[	Table[hRMothsmok[[g, ri]] / ERRothsmok[[g]], {ri, 2}],
					Table[RMsmokformoth[[g, ri]] / ERRothsmok[[g]], {ri, nstopduur}]],
				{g, ng}],

	(* THEY DO NOT *)

printbug["2.9"];

	resduurstop	= Table[0., {nscen}, {nstap}]				(* OUTPUT VARIABLE *)
	];

(* CALCULATION OF SMOKING CLASS TRANSITION RATES ACCORDING TO GIVEN SCENARIO scen AND FOR GIVEN TIME n *)

printbug["3."];

hmaketransrisksmok[] := Block[{},
	
	htransrisksmok = Table[0, {ng}, {ncsmok}, {ncsmok}, {na1}];
	
	Do[	(* SMOKING CLASS TRANSITION RATES *)

		Do[htransrisksmok[[g, ri, ri]] 	= vect11, {ri, 2}];
		htransrisksmok[[g, ncsmok, ncsmok]] 	= vect11;
		Do[htransrisksmok[[g, ri, ri + 1]] 	= vect11, {ri, 3, ncsmok - 1}];

		(* TRANSITIONS BETWEEN CLASSES *)			
			
		htransrisksmok[[g, 1, {1, 2, 3}]] +=
					{-Plus@@transrisk[[1, g, 1, {2, 3}]], transrisk[[1, g, 1, 2]], transrisk[[1, g, 1, 3]]};

		htransrisksmok[[g, 2, {2, 3}]] += {-transrisk[[1, g, 2, 3]], transrisk[[1, g, 2, 3]]};

		htransrisksmok[[g, ncsmok, {2, ncsmok}]] += {relapserate[[g, nstopduur]], -relapserate[[g, nstopduur]]};
			
		Do[htransrisksmok[[g, 2 + ri, {2, 3 + ri}]] += {relapserate[[g, ri]], -relapserate[[g, ri]]}, {ri, nstopduur - 1}],

		{g, ng}];

	htransrisksmok

	];

(* CALCULATION OF SMOKING CLASS MORTALITY RATES FOR GIVEN TIME n *)

printbug["4."];

hmakemortsmok[] := Block[{},

	mortsmok = Table[0, {ng}, {ncsmok}, {na1}];	

	(* DISEASE-RELATED EXCESS MORTALITY RATES *)

	ERRsmok = Table[Plus@@Table[nrisksmok[[g, ri]] RRriskscen[[1, RRriskindsel[[1, d + 1]], g, ri]], {ri, 2}] +
				Plus@@Table[nrisksmok[[g, 2 + ri]] RRsmokform[[RRriskindsel[[1, d + 1]], g, ri]], {ri, nstopduur}],
				{d, nd}, {g, ng}];

	Do[mortsmok[[g, ri]] = Plus@@Table[mortspec[[d, g]] nrisksmok[[g, ri]] RRriskscen[[1, RRriskindsel[[1, d + 1]], g, ri]] /
						(ERRsmok[[d, g]] + eps), {d, nd}],
				{g, ng}, {ri, 2}];

	Do[mortsmok[[g, 2 + ri]] = Plus@@Table[mortspec[[d, g]] nrisksmok[[g, 2 + ri]] RRsmokform[[RRriskindsel[[1, d + 1]], g, ri]] /
						(ERRsmok[[d, g]] + eps), {d, nd}],
				{g, ng}, {ri, nstopduur}];

	(* OTHER CAUSES MORTALITY RATES *)

	Do[mortsmok[[g, ri]] += hRMothsmok[[g, ri]] mortothsel[[g]], {g, ng}, {ri, ncsmok}];

	mortsmok

	];


(*-------------------------------------------------
		LOOP OVER SCENARIOS
---------------------------------------------------*)

Do[
	(* DEFINES SCENARIO-SPECIFIC INPUT PARAMETER VALUES *)

printbug["5."];

	n		= 0;
	ToExpression[makescen];
	RMothrisk	= RMothrisksel;

	(* FORMER SMOKER EVENT RATES DEPEND ON TIME SINCE SMOKING CESSATION *)

printbug["5.2"];

	If[(RRsmokduurind == 1),

		(* FORMER SMOKER RELAPSE RATES DEPEND ON TIME SINCE SMOKING CESSATION *)

		relapserate 	= Table[1 - Exp[ -relapsecoeffscen[[g, 1]] Exp[ -relapsecoeffscen[[g, 2]] 12 duurval ] *
						( 1 - Exp[ -relapsecoeffscen[[g, 2]] 12 ] ) ],
					{g, ng}];

		nrisksmok	= Table[0, {ng}, {ncsmok}, {na1}];

		Do[	Do[nrisksmok[[g, ri]] 		= priskscen[[1, g, ri]] npop0[[g]], {ri, 2}];
			Do[nrisksmok[[g, 2 + ri]] 	= prisksel[[1, g, 3]] stopduur[[g, ri]] npop0[[g]], {ri, nstopduur}];
			nrisksmok[[g, 2 + 1]] 		+= (priskscen[[1, g, 3]] - prisksel[[1, g, 3]]) npop0[[g]],

			{g, ng}];
	
		RRsmokform	= Table[1 + (RRriskscen[[1, d, g, 2]] - 1) Exp[ -logRRsmokduurscen[[d, g, 1]] *
					Exp[ - logRRsmokduurscen[[d, g, 2]] Max0[Range[na1] - 51] ] duurval[[ri]] ],
				{d, Length[RRriskscen[[1]]]}, {g, ng}, {ri, nstopduur}];

		Do[RRriskscen[[1, d, g, 3]] = Plus@@(RRsmokform[[d, g]] Drop[nrisksmok[[g]], 2]) / (Plus@@Drop[nrisksmok[[g]], 2] + eps),
				{d, Length[RRriskscen[[1]]]}, {g, ng}]

		];

	(* CURRENT MEAN RELATIVE RISK AND RISK MULTIPLIER VALUES *)

printbug["5.3"];
		
	ERRrisk 	= Table[Plus@@(RRriskscen[[r, d, g]] prisksel[[r, g]]),
				{r, nrd}, {d, Length[RRriskscen[[r]]]}, {g, ng}];

	(* BASELINE DISEASE INCIDENCE RATES *)

printbug["5.4"];

	incbase 	= Table[incscen[[d]] / (1 - pdissel[[d]]) /
				Times@@Table[ERRrisk[[r, RRriskindsel[[r, d + 1]]]], {r, nrdpop}] / 
				Times@@Table[1 + (RRdisscen[[RRdisindsel[[d1, d]]]] - 1) pdissel[[d1]], {d1, nd}],
				{d, nd}];

	(* ADJUSTED EXCESS MORTALITY RATES *)

printbug["5.5"];

	excessmortadj 	= Min1[Max0[excessmortseladj + (excessmortscen - excessmortsel)]];

	(* DISCRETELY DISTRIBUTED RISK FACTOR CLASS TRANSITION RATES *)

printbug["5.6"];

	transrisk	= Table[maketransmarginal[transriskscen[[r]], transriskindsel[[r]], r, ncrsel[[r]], trackingscen], {r, nrd}];
	
	If[(RRsmokduurind == 1), transrisksmok0 = hmaketransrisksmok[]];

	(* INITIAL POPULATION NUMBERS *)

printbug["5.7"];

	npop 		= Table[npop0[[g]] agesel1, {g, ng}];

	(* INITIAL DISCRETE RISK FACTOR CLASS PREVALENCE NUMBERS *)

printbug["5.8"];

	nrisk		= Join[	Table[priskscen[[r, g, ri]] npop[[g]], {r, nrdpop}, {g, ng}, {ri, ncrsel[[r]]}],

				Table[priskscen[[nrdpop + r, g, ri]] pdissel[[disindinv[[disriskindddis[[r]]]], g]] npop[[g]],
					{r, nrddis}, {g, ng}, {ri, ncrsel[[nrdpop + r]]}]];

	If[(RRsmokduurind == 1),

printbug["5.9"];

		nrisksmok = Table[nrisksmok[[g, ri]] agesel1, {g, ng}, {ri, 2 + nstopduur}]];

	(* INITIAL CLASS PREVALENCE NUMBERS FOR DISCRETELY DISTRIUTED RISK FACTORS RESTRICTED TO DISEASED PERSONS *)

printbug["5.10"];

	hprisk 		= Table[priskscen[[nrdpop + r, g, ri]] /
					RRriskscen[[nrdpop + r, RRriskindsel[[nrdpop + r, disindinv[[disriskindddis[[r]]]] + 1]], g, ri]],
				{r, nrddis}, {g, ng}, {ri, ncrsel[[nrdpop + r]]}];

        hprisk 		= Table[hprisk[[r, g, ri]] / Plus@@hprisk[[r, g]], {r, nrddis}, {g, ng}, {ri, ncrsel[[nrdpop + r]]}];

	prisknondis 	= Table[(hprisk[[r, g, ri]] - pdissel[[disindinv[[disriskindddis[[r]]]], g]] priskscen[[nrdpop + r, g, ri]]) /
					(1 - pdissel[[disindinv[[disriskindddis[[r]]]], g]]),
				{r, nrddis}, {g, ng}, {ri, ncrsel[[nrdpop + r]]}];

	(* INITIAL CONTINUOUSLY DISTRIBUTED RISK FACTOR DISTRIBUTION CHARACTERISTICS *)

	(* INITIAL  DISEASE PREVALENCE RATES *)

printbug["5.12"];

	pdis 		= pdissel;

	(* INITIAL SUM OF AGE AT DISEASE ONSET *)

printbug["5.13"];

	onsetage 	= Table[pdis[[d, g]] npop[[g]] (Range[na1] - .5 - disduur[[d, g]]), {d, nd}, {g, ng}];


	(*-------------------------------------------------
			LOOP OVER 1 YEAR TIME STEPS
	---------------------------------------------------*)

	Do[
		nbirth 		= makenbirth[n] (1 - .5 morttot1[[Range[ng], 1]]);
		
		migpop 		= makemigpop[n] (1 - .5 morttot1);
	
		(* WGTSUBSET = PROPORTIONAL DISTRIBUTION OF 84+ POPULATION NUMBERS OVER AGE YEAR 84 AND AGE CLASS 85+ *)
		
		wgtsubset 	= Table[Take[npop[[g]], -2] / (Plus@@Take[npop[[g]], -2] + eps), {g, ng}];

		(* CURRENT DISCRETE & CONTINUOUS RISK FACTOR CLASS PREVALENCE RATES *)

		priskcurr	= Table[nrisk[[r, g, ri]] / (Plus@@nrisk[[r, g]] + eps), {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}];

		
		(* CURRENT MEAN RELATIVE RISK AND RISK MULTIPLIER VALUES *)
		(* FORMER SMOKER EVENT RATES DEPEND ON TIME SINCE SMOKING CESSATION *)

		If[(RRsmokduurind == 1),

			Do[RRriskscen[[1, d, g, 3]] =
				Plus@@(RRsmokform[[d, g]] Drop[nrisksmok[[g]], 2]) / (Plus@@Drop[nrisksmok[[g]], 2] + eps),
				{d, Length[RRriskscen[[1]]]}, {g, ng}]];

		(* DISCRETELY DISTRIBUTED RISK FACTORS *)

		ERRrisk		= Table[Plus@@(RRriskscen[[r, d, g]] priskcurr[[r, g]]), {r, nrd}, {d, Length[RRriskscen[[r]]]}, {g, ng}];

		RMrisk		= Table[RRriskscen[[r, d, g, ri]] / (ERRrisk[[r, d, g]] + eps),
					{r, nrd}, {d, Length[RRriskscen[[r]]]}, {g, ng}, {ri, ncrsel[[r]]}];

		(* CONTINUOUSLY DISTRIBUTED RISK FACTORS *)

		(* DISCRETELY DISTRIBUTED RISK FACTORS RESTRICTED TO DISEASES, E.G. HBA1C *)

		ERMriskdis	= Table[Plus@@(RRriskscen[[r, RRriskindsel[[r, d + 1]], g]] priskcurr[[r, g]]) /
						(Plus@@(RRriskscen[[r, RRriskindsel[[r, d + 1]], g]] prisksel[[r, g]]) + eps),
					{r, nrdpop + 1, nrdpop + nrddis}, {d, nd}, {g, ng}];

		(* CURRENT DISEASE INCIDENCE RATES *)

		inc 		= Table[incbase[[d]] (1 - pdis[[d]]) *

					(* MEAN RELATIVE RISK FROM DISCRETELY DISTRIBUTED RISK FACTORS *)

					Times@@Table[ERRrisk[[r, RRriskindsel[[r, d + 1]]]], {r, nrdpop}] *

					(* MEAN RELATIVE RISK FROM CO-MORBIDITY *)

					Times@@Table[1 + (RRdisscen[[RRdisindsel[[d1, d]]]] *

						(* ADJUSTMENT RESULTING FROM DISEASE-RESTRICTED RISK FACTORS *)

						Times@@Table[If[(disriskindddis[[r]] == disind[[d1]]),
									ERMriskdis[[r, d]],
									1],
								{r, nrddis}] - 1) pdis[[d1]],

						{d1, nd}],

					{d, nd}];

		(* CASE FATALITY RATES ADJUSTED FOR CO-MORBIDITY *)

		casefatadj	= Table[casefatscen[[casefatindsel[[d]]]] *

					Times@@Table[1 + (RRcasefatscen[[RRcasefatindsel[[d1, d]]]] - 1) pdis[[d1]], {d1, nd}] /

					Times@@Table[1 + (RRcasefatscen[[RRcasefatindsel[[d1, d]]]] - 1) pdissel[[d1]], {d1, nd}],

					{d, nd}];

		(* CURRENT DISEASE MORTALITY RATES *)

		mortspec 	= excessmortadj pdis + inc (casefatadj + (1 - casefatadj) .5 excessmortadj);

		(* CURRENT OTHER CAUSES MORTALITY RATE MULTIPLIERS *)

		mortoth	= Table[Times@@Table[Plus@@(RMothrisksel[[r, g]] priskcurr[[r, g]]), {r, 2, nrd}] *
					mortothsel[[g]],
					{g, ng}];

		(* OTHER CAUSES MORTALITY RISKS FOR 1ST RISK FACTOR, I.E. SMOKERS IN CASE OF DURATION DEPENDENCY *)

		If[(RRsmokduurind == 1),

			mortoth	*= Table[Plus@@(hRMothsmok[[g]] nrisksmok[[g]]) / (Plus@@nrisksmok[[g]] + eps), {g, ng}]];

		(* OTHER CAUSES MORTALITY RISKS FOR 1ST RISK FACTOR IN ALL OTHER CASES *)

		If[(RRsmokduurind == 0) && (nrd > 0),

			mortoth	*= Table[Plus@@(RMothrisksel[[1, g]] priskcurr[[1, g]]), {g, ng}]];

		(* CURRENT ALL CAUSE MORTALITY RATES *)

		morttot 	= Table[mortoth[[g]] + Plus@@Table[mortspec[[d, g]], {d, nd}], {g, ng}];

		(* NEW DISCRETELY DISTRIBUTED RISK FACTOR CLASS PREVALENCE NUMBERS *)

		mortrisk = Join[Table[	Plus@@Table[mortspec[[d, g]] RMrisk[[r, RRriskindsel[[r, d + 1]], g, ri]], {d, nd}] +
					RMothrisksel[[r, g, ri]] mortoth[[g]] / (Plus@@(RMothrisksel[[r, g]] priskcurr[[r, g]]) + eps),
					{r, nrdpop}, {g, ng}, {ri, ncrsel[[r]]}],

				Table[	RMrisk[[nrdpop + r, RRriskindsel[[nrdpop + r, disindinv[[disriskindddis[[r]]]] + 1]], g, ri]] *
						excessmortadj[[disindinv[[disriskindddis[[r]]]], g]] *
						(1 - pdis[[disindinv[[disriskindddis[[r]]]], g]]),
					{r, nrddis}, {g, ng}, {ri, ncrsel[[nrdpop + r]]}]];

		
		(*--------------------------------------------------------------------------
		FILL OUTPUT VARIABLES WITH MODEL RESULTS FOR SCENARIO scen AND TIME STEP n 
		---------------------------------------------------------------------------*)

		respop[[scen, n]] = Table[aggreg[npop[[g]], 1], {g, ng}] +
					Table[Ceiling[.2 lengthageclass[[1, Range[nac[[1]]]]]] eps, {ng}];

		resrisk[[scen, n]] = Table[aggreg[nrisk[[r, g, ri]], 1], {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}];

		resinc[[scen, n]] = Table[aggreg[inc[[d, g]] npop[[g]], 1], {d, nd}, {g, ng}];

		resdis[[scen, n]] = Table[aggreg[pdis[[d, g]] npop[[g]], 1], {d, nd}, {g, ng}];

		resmort[[scen, n, Range[nd]]] = Table[aggreg[mortspec[[d, g]] npop[[g]], 1], {d, nd}, {g, ng}];

		resmort[[scen, n, nd + 1]] = Table[aggreg[mortoth[[g]] npop[[g]], 1], {g, ng}];

		resmort[[scen, n, nd + 2]]= Plus@@resmort[[scen, n, Range[nd + 1]]];

		resonsetage[[scen, n]] = Table[aggreg[onsetage[[d, g]], 1], {d, nd}, {g, ng}];

		If[(RRsmokduurind == 1),
			resduurstop[[scen, n]] = Table[aggreg[Plus@@(nrisksmok[[g, 2 + Range[nstopduur]]] duurval), 1],	{g, ng}]];

		If[(riskcontind == 1) && (nrc > 0),
			resdist[[scen, n]] = Table[{aggreg[mucurr[[r, g]] npop[[g]], 1], aggreg[varcurr[[r, g]] npop[[g]], 1]},
					{r, nrc}, {g, ng}]];

		resmortrisk[[scen, n]] = Table[aggreg[mortrisk[[r, g, ri]] nrisk[[r, g, ri]], 1], {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}];

			
		(*---------------------------------------------------------
	 	CALCULATED NEW VALUES OF MODEL STATE VARIABLES, I.E. AT END OF 1-YEAR TIME STEP 
		----------------------------------------------------------*)

		(* NEW DISEASE PREVALENCE RATES *)

		pdis 	= Table[subsetp[
				pdis[[d, g, 1]] +
				.5 inc[[d, g, 1]] (1 - (1 - pdis[[d, g, 1]]) casefatadj[[d, g, 1]]) *
					(1 - .25 (excessmortscen[[d, g, 1]] + rem1[[remindsel[[d]], g, 1]])),
				inc[[d, g]] (1 - (1 - pdis[[d, g]]) casefatadj[[d, g]]) *
					(1 - .5 (excessmortscen[[d, g]] + rem1[[remindsel[[d]], g]])) +
				pdis[[d, g]] (1 - rem1[[remindsel[[d]], g]] - excessmortscen[[d, g]] (1 - pdis[[d, g]])),
				wgtsubset[[g]]
				],
				{d, nd}, {g, ng}];

		(* NEW SUM OF AGE AT DISEASE ONSET OF PREVALENT CASES *)

		onsetage = Table[subsetn[
				.5 inc[[d, g, 1]] (1 - casefatadj[[d, g, 1]]) *
					(1 - .25 (excessmortscen[[d, g, 1]] + rem1[[remindsel[[d]], g, 1]])) *
					nbirth[[g]] .5,
				inc[[d, g]] (1 -  casefatadj[[d, g]]) *
					(1 - .5 (excessmortscen[[d, g]] + rem1[[remindsel[[d]], g]])) npop[[g]] Range[na1] +
				onsetage[[d, g]] *
					(1 - rem1[[remindsel[[d]], g]] - excessmortscen[[d, g]] (1 - pdissel[[d, g]]) - morttot1[[g]])
				],
				{d, nd}, {g, ng}];

		(* NEW TOTAL POPULATION NUMBERS *)

		npop 	= Table[subsetn[nbirth[[g]], npop[[g]] (1 - morttot[[g]]) ], {g, ng}];
		
		(* RE-SCALING NUMBERS BECAUSE OF MIGRATION *)

		onsetage = Table[(npop[[g]] + migpop[[g]]) / (npop[[g]] + eps) onsetage[[d, g]], {d, nd}, {g, ng}];

		npop	+= migpop;

		(* SCENARIO-SPECIFIC TRANSITION RATES *)

		ToExpression[makescen];
	
		transrisk = Table[maketransmarginal[transriskscen[[r]], transriskindsel[[r]], r, ncrsel[[r]], trackingscen], {r, nrd}];
	
		If[(RRsmokduurind == 1), transrisksmok0 = hmaketransrisksmok[]];

		(* NEW RISK FACTOR CLASS PREVALENCE NUMBERS *)

		nrisk 	= Join[	Table[subsetn[
					nbirth[[g]] priskscen[[r, g, ri, 1]],
					nrisk[[r, g, ri]] (1 - mortrisk[[r, g, ri]] - Plus@@transrisk[[r, g, ri]]) +
						Plus@@(transrisk[[r, g, Range[ncrsel[[r]]], ri]] nrisk[[r, g]])
					],
					{r, nrdpop}, {g, ng}, {ri, ncrsel[[r]]}],

				Table[subsetn[
					nbirth[[g]] priskscen[[r, g, ri, 1]] *
					(pdis[[disindinv[[disriskindddis[[r - nrdpop]]]], g, 1]] + 
					.5 inc[[disindinv[[disriskindddis[[r - nrdpop]]]], g, 1]]),
					nrisk[[r, g, ri]] (1 - mortrisk[[r, g, ri]] - Plus@@transrisk[[r, g, ri]]) +
					Plus@@(transrisk[[r, g, All, ri]] nrisk[[r, g]]) +
					inc[[disindinv[[disriskindddis[[r - nrdpop]]]], g]] npop[[g]] priskincsel[[r - nrdpop, g, ri]]
					],
					{r, nrdpop + 1, nrdpop + nrddis}, {g, ng}, {ri, ncrsel[[r]]}]];
				
		(* NEW CONTINUOUSLY DISTRIBUTED RISK FACTOR DISTRIBUTION CHARACTERISTICS *)

		(* NEW SMOKING CLASS PREVALENCE NUMBERS IN CASE OF DURATION DEPENDENT *)

		If[(RRsmokduurind == 1),

			(* ADJUSTMENT OF SMOKING CLASS TRANSITION RATES FOR MORTALITY *)

			mortsmok = hmakemortsmok[];

			transrisksmok = transrisksmok0;

			Do[transrisksmok[[g, ri, ri]] -= mortsmok[[g, ri]], {g, ng}, {ri, ncsmok}];

			(* SMOKING CLASS PREVALENCE NUMBERS, NEW VALUES *)

			nrisksmok = Table[subsetn[
						nbirth[[g]]*
							If[(ri <= 2),
								priskscen[[1, g, ri, 1]],
								priskscen[[1, g, 3, 1]] stopduur[[g, ri - 2, 1]]],
						Plus@@(transrisksmok[[g, Range[ncsmok], ri]] nrisksmok[[g]])
						],
						{g, ng}, {ri, ncsmok}];

			(* OVERWRITING PREVIOUSLY CALCULATED PREVALENCE NUMBERS *)

			nrisk[[1]] = Table[Join[nrisksmok[[g, Range[2]]], {Plus@@nrisksmok[[g, 2 + Range[nstopduur]]]}], {g, ng}]

			];

		(* RE-SCALING DISCRETE RISK FACTOR CLASS PREVALENCE NUMBERS BECAUSE OF MIGRATION *)

		sumnrisk = Table[Plus@@nrisk[[r, g]], {r, nrd}, {g, ng}];

		nrisk = Join[	Table[nrisk[[r, g, ri]] npop[[g]] / (sumnrisk[[r, g]] + eps), {r, nrdpop}, {g, ng}, {ri, ncrsel[[r]]}],

				Table[nrisk[[nrdpop + r, g, ri]] pdis[[disindinv[[disriskindddis[[r]]]], g]] npop[[g]] /
					(sumnrisk[[nrdpop + r, g]] + eps),
					{r, nrddis}, {g, ng}, {ri, ncrsel[[nrdpop + r]]}]
				];

		If[(RRsmokduurind == 1),

			nrisksmok = Table[nrisksmok[[g, ri]] npop[[g]] / (sumnrisk[[1, g]] + eps), {g, ng}, {ri, ncsmok}]],


		(*-------------------------------------------------
			END OF LOOP OVER 1 YEAR TIME STEPS
		---------------------------------------------------*)

	{n, nstap}],


(*-------------------------------------------------
		END OF SCENARIO LOOP
---------------------------------------------------*)

{scen, nscen}]];

resmarginalmodeldetermpop = {respop, resrisk, resdist, resdis, resinc, resmort, resonsetage, resduurstop, resmortrisk};

(* --------------------------------------------------
			Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];

End[]


Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMSimulationJointModelDetermPop *)

(* :Context: CZMsimulation` *)

(* :Author: Rudolf T. Hoogenveen *)

(* :Summary:
   CZM simulation routine describes deterministic joint CZM model, i.e. change of joint risk factor
   class and disease prevalence numbers *)

(* :Copyright: © 2004 by Rudolf Hoogenveen *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM November 2004
		2.0 first release CZM 2005, version March
		3.0 version November 2005 
		3.1 version March 2007; storage of results *)

(* :Keywords: joint model, model parameters *)


BeginPackage["CZMSimulation`CZMSimulationJointModelDetermPop`",
	{"CZMInitialization`CZMLogFile`", 
	 "CZMInitialization`CZMConstants`",
	"CZMInitialization`CZMFunctions`",
	"CZMImportData`CZMImportUserSelections`",
	"CZMImportData`CZMImportDemography`",
	"CZMImportData`CZMImportRiskFactors`",
	"CZMImportData`CZMImportRelativeRisks`",
	"CZMAdjustData`CZMDataSmoothing`",
	"CZMAdjustData`CZMMakeSelections`",
	"CZMAdjustData`CZMAdjustAfterSelection`",
	"CZMDefineScenarios`CZMDefineScenarios`",
	"CZMSimulation`CZMSimulationFunctions`",
	"CZMPostProcessing`CZMExportUserSelections`"}] 


resjointmodeldetermpop::usage	= "output numbers of deterministic joint model total population, see marginalmodelresults"
jointmodeldetermpopprev::usage	= "MMA data file, field 1: dimension of:, field 2: data, see jointmodelresults"


Begin["`Private`"]


Print["CZMSimulationJointModelDetermPop package is evaluated"];
printtijd;

printbug[c_] := If[(bugind == 1), Print[{"CZMSimulationJointModelDetermPop", c}]];

appltype	= StringTake[ToString[Global`application], {8, 11}];

respop = resrisk = resdist = resdis = resinc = resmort = resonsetage = resduurstop = resmortrisk = Table[0., {nscen}, {nstap}];

If[(modelsel[[2]] == 1) && (appltype != "outp"),

(* INITIALIZE OUTPUT VARIABLES *)

printbug["1."];

respop 		= Table[0., {nscen}, {nstap}, {ng}, {nac[[1]]}];
resrisk 	= Table[0., {nscen}, {nstap}, {r, nrd}, {ng}, {ncrsel[[r]]}, {nac[[1]]}];
resdis 		= Table[0., {nscen}, {nstap}, {nd}, {ng}, {nac[[1]]}]; 
resinc 		= Table[0., {nscen}, {nstap}, {nd}, {ng}, {nac[[1]]}]; 
resmort 	= Table[0., {nscen}, {nstap}, {nd + 2}, {ng}, {nac[[1]]}]; 
resonsetage 	= Table[0., {nscen}, {nstap}, {nd}, {ng}, {nac[[1]]}]; 
If[(RRsmokduurind == 1),
	resduurstop	= Table[0., {nscen}, {nstap}, {ng}, {nac[[1]]}]];

mortrisk	= Table[0., {r, nrd}, {ng}, {ncrsel[[r]]}, {na1}];

(* JOINT STATE PREVALENCE NUMBERS MADE AVAILABLE *)

printbug["2."];

outfile		= OpenWrite[Global`outputpath <> "jointmodeldetermpopprev.m"];
Put[{nscen, Length[agesel], nstap, nz1, agemin, 0, riskind, disind, nscen0}, outfile];

(* EMPIRICAL INITIAL CLASS PREVALENCE RATES *)

printbug["3."];

ERRrisk 	= Table[Plus@@(RRriskseladj[[r, d, g]] prisksel[[r, g]]), {r, nrd}, {d, Length[RRriskseladj[[r]]]}, {g, ng}];

RMrisk		= Table[RRriskseladj[[r, d, g, ri]] / (ERRrisk[[r, d, g]] + eps),
			{r, nrd}, {d, Length[RRriskseladj[[r]]]}, {g, ng}, {ri, ncrsel[[r]]}];

printbug["4."];

n		= 0;
scen		= 1;
ToExpression[makescen];

printbug["5."];	

prevcurr0	= makeprevcurr[prisksel, pdissel, RMrisk, RRdisscen, RRcasefatscen];

		
(*-------------------------------------------------
		LOOP OVER SCENARIOS
---------------------------------------------------*)

Do[
	(* DEFINES SCENARIO-SPECIFIC INPUT PARAMETER VALUES *)

printbug["6."];

	n		= 0;
	ToExpression[makescen];

	(* ADJUSTED EXCESS MORTALITY RATES *)

printbug["6.1"];

	excessmortadj 	= Min1[Max0[excessmortseladj + (excessmortscen - excessmortsel)]];
	
	(* DISEASE INCIDENCE FIGURES *)

printbug["6.1"];

	inc		= makeincjoint[incscen, RRriskscen, RRdisscen];

printbug["6.2"];

	incbase		= Table[incscen[[d, g]]^2 / (Plus@@(inc[[g, d]] prevcurr0[[g]]) + eps), {d, nd}, {g, ng}];


printbug["6.3"];

	rate		= maketransjoint[transriskscen, incbase, excessmortscen, casefatscen,
						RRriskscen, trackingscen, RRdisscen, RRcasefatscen];

printbug["6.4"];

	transjoint	= rate[[1]];
	inc		= rate[[2]];
	mortoth		= rate[[3]];

	(* CHANGE OF INITIAL CLASS PREVALENCE RATES ACCORDING TO SCENARIO *)

printbug["6.5"];

	prevcurr = If[(scen == 1), prevcurr0, changeprevcurr[prevcurr0, priskscen]];


	(* RESTRICTION TO DISEASE PATIENT POPULATION *)

	If[(Quotient[patientsel, 10] > 0) && (Mod[patientsel, 10] == 0),

		prevcurr[[Range[ng], zinddis[[disindinv[[Quotient[patientsel, 10]]], 1]]]] *= 0];

printbug["6.6"];
	nprev		= Table[prevcurr[[g, zi]] npop0[[g]] agesel1, {g, ng}, {zi, nz1}];

	npop		= Table[Plus@@nprev[[g]], {g, ng}];
	
	prevnewborn 	= prevcurr[[Range[ng], Range[nz1], 1]];
	(* MEAN AGE AT ONSET OF INCIDENT AND PREVALENT DISEASE CASES *)

	If[(outputsel[[7]] == 1),

printbug["6.7"];

		onsetage = Table[Range[na1], {ng}, {nz1}, {nd}] - 1;

		Do[onsetage[[g, zinddis[[d, 2, zi]], d]] = Range[na1] - .5 - disduur[[d, g]],
				{g, ng}, {d, nd}, {zi, Length[zinddis[[d, 2]]]}]];


	(*-------------------------------------------------
			LOOP OVER 1 YEAR TIME STEPS
	---------------------------------------------------*)

	Do[
		(* UPDATE OF MEAN AGE AT ONSET OF NEW DISEASE CASES *)

printbug["7"];

		If[(outputsel[[7]] == 1), Do[++onsetage[[g, zinddis[[d, 1]], d]], {g, ng}, {d, nd}]];	

		(* #NEWBORNS *)
		
		nbirth 	= makenbirth[n] (1 - .5 morttot1[[Range[ng], 1]]);

		(* 1-YEAR MIGRATION NUMBERS APPLIED TO SELECTED COHORT TIMES PROBABILITY OF HALF YEAR SURVIVAL *)

		migpop 	= makemigpop[n] ( 1 - .5 morttot1);

		(* WGTSUBSET = PROPORTIONAL DISTRIBUTION OF 84+ POPULATION NUMBERS OVER AGE YEAR 84 AND AGE CLASS 85+ *)
	
		wgtsubset = Table[Take[npop[[g]], -2] / (Plus@@Take[npop[[g]], -2] + eps), {g, ng}];

		(* MORTALITY NUMBERS FOR EACH RISK FACTOR CLASS *)

		Do[mortrisk[[r, g, ri]] = Plus@@(mortoth[[g, zindrisk[[r, ri]]]] nprev[[g, zindrisk[[r, ri]]]]),
				{r, nrdpop}, {g, ng}, {ri, ncrsel[[r]]}];
					
		Do[	disset	= Intersection[zindrisk[[r, ri]], zinddis[[d, 1]]];

			Do[	mortrisk[[r, g, ri]] += Plus@@(nprev[[g, disset]] inc[[g, d, disset]]) *
	 						(casefatscen[[casefatindsel[[d]], g]] +
							.5 (1 - casefatscen[[casefatindsel[[d]], g]]) excessmortadj[[d, g]]),
					{g, ng}];

			disset	= Intersection[zindrisk[[r, ri]], zinddis[[d, 2]]];

			Do[mortrisk[[r, g, ri]] += Plus@@nprev[[g, disset]] excessmortadj[[d, g]], {g, ng}],

			{r, nrdpop}, {ri, ncrsel[[r]]}, {d, nd}];

		Do[	d1	= disindinv[[disriskindddis[[r]]]];
			disset	= Intersection[zindrisk[[nrdpop + r, ri]], zinddis[[d1, 2]]];
			Do[	mortrisk[[nrdpop + r, g, ri]] = excessmortadj[[d1, g]] Plus@@nprev[[g, disset]], {g, ng}],

			{r, nrddis}, {ri, ncrsel[[nrdpop + r]]}];


		(*--------------------------------------------------------------------------
		CALCULATED NEW VALUES OF MODEL STATE VARIABLES, I.E. AT END OF 1-YEAR TIME STEP 
		----------------------------------------------------------*)

printbug["8."];		
		nprevnew 	= Table[Plus@@(nprev[[g]] transjoint[[g, Range[nz1], zj]]), {g, ng}, {zj, nz1}];

		If[(outputsel[[7]] == 1),

			onsetage	= Table[subsetp[
							.5 .5 Plus@@(prevnewborn[[g]] transjoint[[g, Range[nz1], zj, 1]]),
							Plus@@(onsetage[[g, Range[nz1], d]] nprev[[g]] transjoint[[g, Range[nz1], zj]]) /
								(Plus@@(nprev[[g]] transjoint[[g, Range[nz1], zj]]) + eps),
							wgtsubset[[g]]
							],
						{g, ng}, {zj, nz1}, {d, nd}]];


		(*--------------------------------------------------------------------------
		FILL OUTPUT VARIABLES WITH MODEL RESULTS FOR SCENARIO scen AND TIME STEP n 
		---------------------------------------------------------------------------*)

printbug["9."];

		respop[[scen, n]] = Table[aggreg[Plus@@nprev[[g]], 1], {g, ng}] +
					Table[Ceiling[.2 lengthageclass[[1, Range[nac[[1]]]]]] eps, {ng}];

		Do[resrisk[[scen, n, r, g, ri]] = aggreg[Plus@@nprev[[g, zindrisk[[r, ri]]]], 1],
					{r, nrdpop}, {g, ng}, {ri, ncrsel[[r]]}];

		Do[resrisk[[scen, n, nrdpop + r, g, ri]] =
					aggreg[Plus@@nprev[[g, Intersection[zindrisk[[nrdpop + r, ri]],
									zinddis[[disindinv[[disriskindddis[[r]]]], 2]]]]], 1],
					{r, nrddis}, {g, ng}, {ri, ncrsel[[nrdpop + r]]}];

		resdis[[scen, n]] = Table[aggreg[Plus@@nprev[[g, zinddis[[d, 2]]]], 1], {d, nd}, {g, ng}];

		resinc[[scen, n]] = Table[aggreg[Plus@@(nprev[[g, zinddis[[d, 1]]]] inc[[g, d, zinddis[[d, 1]]]]), 1],
					{d, nd}, {g, ng}];

		resmort[[scen, n, Range[nd]]] = Table[aggreg[
					Plus@@(nprev[[g, zinddis[[d, 1]]]] inc[[g, d, zinddis[[d, 1]]]]) *
	 					(casefatscen[[casefatindsel[[d]], g]] +
						.5 (1 - casefatscen[[casefatindsel[[d]], g]]) excessmortadj[[d, g]]) +
					Plus@@nprev[[g, zinddis[[d, 2]]]] excessmortadj[[d, g]] , 1],
					{d, nd}, {g, ng}];

		resmort[[scen, n, nd + 1]] = Table[aggreg[Plus@@(mortoth[[g]] nprev[[g]]), 1], {g, ng}];

		resmort[[scen, n, nd + 2]] = Table[aggreg[Plus@@(nprev[[g]] - nprevnew[[g]]), 1], {g, ng}];

		If[(outputsel[[7]] == 1),
			resonsetage[[scen, n]] = Table[aggreg[
						Plus@@(onsetage[[g, zinddis[[d, 2]], d]] nprev[[g, zinddis[[d, 2]]]]), 1],
						{d, nd}, {g, ng}]];	
		
		resmortrisk[[scen, n]] = Table[aggreg[mortrisk[[r, g, ri]], 1],	{r, nrd}, {g, ng}, {ri, ncrsel[[r]]}];

		PutAppend[Table[aggreg[nprev[[g, zi]], 1], {g, ng}, {zi, nz1}],	outfile]; 

		(*---------------------------------------------------------
		CALCULATED NEW VALUES OF MODEL STATE VARIABLES, I.E. AT END OF 1-YEAR TIME STEP 
		----------------------------------------------------------*)

printbug["10."];		
		nprev		= Table[subsetn[nbirth[[g]] prevnewborn[[g, zi]], nprevnew[[g, zi]]], {g, ng}, {zi, nz1}];

		sumnprev 	= Table[Plus@@nprev[[g]], {g, ng}];

		(* RE-SCALING BECAUSE OF MIGRATION *)

		npop		= sumnprev + migpop;
		nprev		= Table[nprev[[g, zi]] npop[[g]] / (sumnprev[[g]] + eps), {g, ng}, {zi, nz1}],


		(*-------------------------------------------------
			END OF LOOP OVER 1 YEAR TIME STEPS
		---------------------------------------------------*)


	{n, nstap}],


(*-------------------------------------------------
	END OF SCENARIO LOOP
---------------------------------------------------*)

{scen, nscen}];


Close[outfile]];

printbug["10."];

resjointmodeldetermpop = {respop, resrisk, resdist, resdis, resinc, resmort, resonsetage, resduurstop, resmortrisk};



(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];

End[]


Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMSimulationJointModelDetermAge *)

(* :Context: CZMSimulation` *)

(* :Author: Rudolf T. Hoogenveen *)

(* :Summary:
   CZM simulation routine describes deterministic joint CZM model stratified by age, i.e. change of joint risk factor
   class and disease prevalence numbers for successive cohorts *)

(* :Copyright: © 2004 by Rudolf Hoogenveen *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM November 2004
		2.0 first release CZM 2005, version March
		3.0 version November 2005 
		3.1 version March 2007; storage of results *)

(* :Keywords: joint model, model parameters *)


BeginPackage["CZMSimulation`CZMSimulationJointModelDetermAge`",
	{"CZMInitialization`CZMLogFile`", 
	 "CZMInitialization`CZMConstants`",
	"CZMInitialization`CZMFunctions`",
	"CZMImportData`CZMImportUserSelections`",
	"CZMImportData`CZMImportDemography`",
	"CZMImportData`CZMImportRiskFactors`",
	"CZMImportData`CZMImportRelativeRisks`",
	"CZMAdjustData`CZMDataSmoothing`",
	"CZMAdjustData`CZMMakeSelections`",
	"CZMAdjustData`CZMAdjustAfterSelection`",
	"CZMDefineScenarios`CZMDefineScenarios`",
	"CZMSimulation`CZMSimulationFunctions`",
	"CZMPostProcessing`CZMExportUserSelections`"}] 


resjointmodeldetermage::usage	= "output numbers of deterministic joint model stratified by cohort, see marginalmodelresults"
jointmodeldetermageprev::usage	= "MMA data file, field 1: dimension of:, field 2: data, see jointmodelresults"


Begin["`Private`"]


Print["CZMSimulationJointModelDetermAge package is evaluated"];
printtijd;

printbug[c_] := If[(bugind == 1), Print[{"CZMSimulationJointModelDetermAge", c}]];

appltype	= StringTake[ToString[Global`application], {8, 11}];

respop = resrisk = resdist = resdis = resinc = resmort = resonsetage = resduurstop = resmortrisk = Table[0., {nscen}, {nstap}];

If[(modelsel[[3]] == 1) && (appltype != "outp"),

(* INITIALIZE OUTPUT VARIABLES *)

printbug["1."];

respop 		= Table[0., {nscen}, {nstap}, {ng}, {Length[agesel]}];
resrisk 	= Table[0., {nscen}, {nstap}, {r, nrd}, {ng}, {ncrsel[[r]]}, {Length[agesel]}];
resdis 		= Table[0., {nscen}, {nstap}, {nd}, {ng}, {Length[agesel]}]; 
resinc 		= Table[0., {nscen}, {nstap}, {nd}, {ng}, {Length[agesel]}]; 
resmort 	= Table[0., {nscen}, {nstap}, {nd + 2}, {ng}, {Length[agesel]}]; 
resonsetage	= Table[0., {nscen}, {nstap}, {nd}, {ng}, {Length[agesel]}]; 
If[(RRsmokduurind == 1),
	resduurstop	= Table[0., {nscen}, {nstap}, {ng}, {nac[[1]]}]];

resmortrisk	= Table[0., {nscen}, {nstap}, {r, nrd}, {ng}, {ncrsel[[r]]}, {Length[agesel]}];;
mortrisk	= Table[0., {r, nrd}, {ncrsel[[r]]}]; 

(* JOINT STATE PREVALENCE NUMBERS *)

outfile		= OpenWrite[Global`outputpath <> "jointmodeldetermageprev.m"];

Put[{nscen, Length[agesel], nstap, nz1, agemin, 0, riskind, disind, nscen0}, outfile];

(* EMPIRICAL INITIAL CLASS PREVALENCE RATES *)

printbug["1.1"];

ERRrisk		= Table[Plus@@(RRriskseladj[[r, d, g]] prisksel[[r, g]]), {r, nrd}, {d, Length[RRriskseladj[[r]]]}, {g, ng}];

RMrisk		= Table[RRriskseladj[[r, d, g, ri]] / (ERRrisk[[r, d, g]] + eps),
			{r, nrd}, {d, Length[RRriskseladj[[r]]]}, {g, ng}, {ri, ncrsel[[r]]}];

printbug["1.2"];

n		= 0;
scen		= 1;
ToExpression[makescen];

printbug["1.3"];
	
prevcurr0	= makeprevcurr[prisksel, pdissel, RMrisk, RRdisscen, RRcasefatscen];

printbug["1.4"];

				
(*-------------------------------------------------
		LOOP OVER SCENARIOS
---------------------------------------------------*)

Do[
	(* DEFINES SCENARIO-SPECIFIC INPUT PARAMETER VALUES *)

printbug["2."];

	n		= 0;
	ToExpression[makescen];
	
	(* ADJUSTED EXCESS MORTALITY RATES *)

printbug["2.1"];

	excessmortadj 	= Min1[Max0[excessmortseladj + (excessmortscen - excessmortsel)]];
	
	(* DISEASE INCIDENCE FIGURES *)

printbug["2.2"];

	inc		= makeincjoint[incscen, RRriskscen, RRdisscen];

	incbase		= Table[incscen[[d, g]]^2 / (Plus@@(inc[[g, d]] prevcurr0[[g]]) + eps), {d, nd}, {g, ng}];

	(* CHANGE OF INITIAL CLASS PREVALENCE RATES ACCORDING TO SCENARIO *)

printbug["2.3"];

	prevcurr = If[(scen == 1), prevcurr0, changeprevcurr[prevcurr0, priskscen]];

	(* UNCHANGED TRANSITION RATES FOR DISEASE-FREE PERSONS IN CASE OF SCENARIOS RESTRICTED TO DISEASE PATIENT POPULATION *)

printbug["2.4"]; 

	If[(Quotient[patientsel, 10] > 0) && (scen == 1),

		transjointref = maketransjoint[transriskscen, incbase, excessmortscen, casefatscen, 
							RRriskscen, trackingscen, RRdisscen, RRcasefatscen][[1]]];

	(* RESTRICTION TO DISEASE PATIENT POPULATION *)

	If[(Quotient[patientsel, 10] > 0) && (Mod[patientsel, 10] == 0),

printbug["2.5"];

		prevcurr[[Range[ng], zinddis[[disindinv[[Quotient[patientsel, 10]]], 1]]]] *= 0];

	prevnewborn 	= prevcurr[[Range[ng], Range[nz1], 1]];

printbug["2.6"];


(*-------------------------------------------------
		LOOP OVER GENDER AND AGE
---------------------------------------------------*)
	
	Do[
		a	= agesel[[a1]];				(* INITIAL AGE OF COHORT*)
		ha	= a;					(* CURRENT AGE OF COHORT*)

printbug["3."];

		(* INITIAL POPULATIONAND CLASS PREVALENCE NUMBERS *)
			
		nprev	= prevcurr[[g, Range[nz1], a]] npop0[[g, a]];
		npop	= Plus@@nprev;

		(* MEAN AGE AT ONSET OF INCIDENT AND PREVALENT DISEASE CASES *)

		onsetage = Table[a, {nz1}, {nd}] - 1;

		Do[onsetage[[zinddis[[d, 2, zi]], d]] = a - .5 - disduur[[d, g, a]], {d, nd}, {zi, Length[zinddis[[d, 2]]]}];
				

		(*-------------------------------------------------
				LOOP OVER 1 YEAR TIME STEPS
		---------------------------------------------------*)
				
		Do[
			(* UPDATE OF AGE AT ONSET OF NEW DISEASE CASES *)
printbug["4."];	
			Do[++onsetage[[zinddis[[d, 1]], d]], {d, nd}];	

			(* CURRENT TRANSITION RATE VALUES *)
printbug["4.1"];
			rate		= maketransjointga[g, ha, transriskscen, incbase, excessmortscen, casefatscen, 
								RRriskscen, trackingscen, RRdisscen, RRcasefatscen];

			transjoint 	= rate[[1]];

			If[(Quotient[patientsel, 10] > 0),
				transjoint[[zinddis[[disindinv[[Quotient[patientsel, 10]]], 1]], Range[nz1]]] = 
						transjointref[[g, zinddis[[disindinv[[Quotient[patientsel, 10]]], 1]], Range[nz1], ha]]];
			
			inc		= rate[[2]];
			mortoth		= rate[[3]];

			(* MORTALITY NUMBERS FOR EACH RISK FACTOR CLASS *)
printbug["4.2"];

			Do[	mortrisk[[r, ri]] = Plus@@(mortoth[[zindrisk[[r, ri]]]] nprev[[zindrisk[[r, ri]]]]),
				{r, nrdpop}, {ri, ncrsel[[r]]}];
					
			Do[	disset	= Intersection[zindrisk[[r, ri]], zinddis[[d, 1]]];

				mortrisk[[r, ri]] += Plus@@(nprev[[disset]] inc[[d, disset]]) *
	 						(casefatscen[[casefatindsel[[d]], g, ha]] +
							.5 (1 - casefatscen[[casefatindsel[[d]], g, ha]]) excessmortadj[[d, g, ha]]);

				disset	= Intersection[zindrisk[[r, ri]], zinddis[[d, 2]]];

				mortrisk[[r, ri]] += Plus@@nprev[[disset]] excessmortadj[[d, g, ha]],

				{r, nrdpop}, {ri, ncrsel[[r]]}, {d, nd}];

			Do[	d1	= disindinv[[disriskindddis[[r]]]];
				disset	= Intersection[zindrisk[[nrdpop + r, ri]], zinddis[[d1, 2]]];
				mortrisk[[nrdpop + r, ri]] = excessmortadj[[d1, g, ha]] Plus@@nprev[[disset]],

				{r, nrddis}, {ri, ncrsel[[nrdpop + r]]}];
printbug["4.3"];

			(*---------------------------------------------------------
			CALCULATED NEW VALUES OF MODEL STATE VARIABLES, I.E. AT END OF 1-YEAR TIME STEP 
			----------------------------------------------------------*)

			onsetage	= Table[Plus@@(onsetage[[Range[nz1], d]] nprev transjoint[[Range[nz1], zj]]) /
						(Plus@@(nprev transjoint[[Range[nz1], zj]]) + eps),
						{zj, nz1}, {d, nd}];

			nprevnew	= Table[Plus@@(nprev transjoint[[Range[nz1], zj]]), {zj, nz1}];
			npopnew		= Plus@@nprevnew;

			
			(*--------------------------------------------------------------------------
			FILL OUTPUT VARIABLES WITH MODEL RESULTS FOR SCENARIO scen AND TIME STEP n 
			---------------------------------------------------------------------------*)
	
			respop[[scen, n, g, a1]] = npop;
	
			Do[	resrisk[[scen, n, r, g, ri, a1]] = Plus@@nprev[[zindrisk[[r, ri]]]], {r, nrdpop}, {ri, ncrsel[[r]]}];

			Do[	resrisk[[scen, n, nrdpop + r, g, ri, a1]] =
				Plus@@nprev[[Intersection[zindrisk[[nrdpop + r, ri]],
								zinddis[[disindinv[[disriskindddis[[r]]]], 2]]]]],
				{r, nrddis}, {ri, ncrsel[[nrdpop + r]]}];

 			Do[resdis[[scen, n, d, g, a1]] = Plus@@nprev[[zinddis[[d, 2]]]], {d, nd}];

			Do[resinc[[scen, n, d, g, a1]] = Plus@@(nprev[[zinddis[[d, 1]]]] inc[[d, zinddis[[d, 1]]]]), {d, nd}];

			Do[resmort[[scen, n, d, g, a1]] = 
					Plus@@(nprev[[zinddis[[d, 1]]]] inc[[d, zinddis[[d, 1]]]]) *
	 					(casefatscen[[casefatindsel[[d]], g, ha]] +
						.5 (1 - casefatscen[[casefatindsel[[d]], g, ha]]) *
						excessmortadj[[d, g, ha]]) +
					Plus@@nprev[[zinddis[[d, 2]]]] excessmortadj[[d, g, ha]],
					{d, nd}];

			resmort[[scen, n, nd + 1, g, a1]] = Plus@@(mortoth nprev);

			resmort[[scen, n, nd + 2, g, a1]] = Plus@@(npop - npopnew);

			Do[resonsetage[[scen, n, d, g, a1]] = Plus@@(onsetage[[zinddis[[d, 2]], d]] nprev[[zinddis[[d, 2]]]]), {d, nd}];

			Do[resmortrisk[[scen, n, r, g, ri, a1]] = mortrisk[[r, ri]], {r, nrd}, {ri, ncrsel[[r]]}];

			PutAppend[nprev, outfile];

			(*---------------------------------------------------------
			NEW POPULATION NUMBERS
			----------------------------------------------------------*)

			nprev		= nprevnew;			
			npop		= npopnew;
			ha		= Min[{ha + 1, na1}],


			(*-------------------------------------------------
				END OF LOOP OVER 1 YEAR TIME STEPS
			---------------------------------------------------*)

		{n, nstap}],


	(*-------------------------------------------------
		END OF LOOP OVER GENDER AND AGE
	---------------------------------------------------*)

	{g, ng}, {a1, Length[agesel]}],


(*-------------------------------------------------
		END OF LOOP OVER SCENARIOS
---------------------------------------------------*)

{scen, nscen}];

printbug["6."];


Close[outfile];

resjointmodeldetermage = transformres[respop, resrisk, resdist, resdis, resinc, resmort, resonsetage, resduurstop, resmortrisk],

resjointmodeldetermage = {respop, resrisk, resdist, resdis, resinc, resmort, resonsetage, resduurstop, resmortrisk}];


(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];

End[]


Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMSimulationJointModelStochInd *)

(* :Context: CZMSimulation` *)

(* :Author: Rudolf T. Hoogenveen *)

(* :Summary:
   CZM simulation routine describes stochastic joint CZM model sratified by individuals, i.e. random change of risk
   factor class and disease state for successive individuals *)

(* :Copyright: © 2004 by Rudolf Hoogenveen *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM November 2004
		2.0 first release CZM 2005, version March, effect of time since smoking cessation 
		3.1 version March 2007; storage of results *)

(* :Keywords: joint model, model parameters *)


BeginPackage["CZMSimulation`CZMSimulationJointModelStochInd`",
	{"CZMInitialization`CZMLogFile`", 
	"CZMInitialization`CZMConstants`",
	"CZMInitialization`CZMFunctions`",
	"CZMImportData`CZMImportUserSelections`",
	"CZMImportData`CZMImportDemography`",
	"CZMImportData`CZMImportRiskFactors`",
	"CZMImportData`CZMImportRelativeRisks`",
	"CZMAdjustData`CZMDataSmoothing`",
	"CZMAdjustData`CZMAdjustBeforeSelection`",
	"CZMAdjustData`CZMMakeSelections`",
	"CZMAdjustData`CZMAdjustAfterSelection`",
	"CZMDefineScenarios`CZMDefineScenarios`",
	"CZMSimulation`CZMSimulationFunctions`",
	"CZMPostProcessing`CZMExportUserSelections`",
	"Statistics`DiscreteDistributions`"}] 


resjointmodelstochind::usage	= "output numbers of joint model stratified by individuals, see marginalmodelresults"
ndraw::usage			= "sample size of stochastic joint model stratified by individuals"
jointmodeldetermindprev::usage	= "MMA data file, field 1: dimension of:, field 2: data, see jointmodelresults"


Begin["`Private`"]	


Print["CZMSimulationJointModelStochInd package is evaluated"];
printtijd;

printbug[c_] := If[(bugind == 1), Print[{"CZMSimulationJointModelStochInd", c}]];

appltype	= StringTake[ToString[Global`application], {8, 11}];

respop = resrisk = resdist = resdis = resinc = resmort = resonsetage = resduurstop = resmortrisk = Table[0., {nscen}, {nstap}];

If[(modelsel[[4]] == 1) && (appltype != "outp"),

(* INITIALIZE OUTPUT VARIABLES *)

ndraw		= 10000;

(* INIDIVUAL RISK FACTOR CLASS STATES, INITIAL DISEASE STATES, TIMES AT DISEASE ONSET, AND TIMES OF MORTALITY *)

respop		= Table[.0, {nscen}, {nstap}, {ng}, {Length[agesel]}];
resrisk 	= Table[.0, {nscen}, {nstap}, {r, nrd}, {ng}, {ncrsel[[r]]}, {Length[agesel]}];
resdis		= Table[.0, {nscen}, {nstap}, {nd}, {ng}, {Length[agesel]}];
resinc		= Table[.0, {nscen}, {nstap}, {nd}, {ng}, {Length[agesel]}];
resmort		= Table[.0, {nscen}, {nstap}, {nd + 2}, {ng}, {Length[agesel]}]; 
resonsetage	= Table[.0, {nscen}, {nstap}, {nd}, {ng}, {Length[agesel]}];
resmortrisk 	= Table[.0, {nscen}, {nstap}, {r, nrd}, {ng}, {ncrsel[[r]]}, {Length[agesel]}];

printbug["1."];

If[(RRsmokduurind == 1),

	resduurstop	= Table[.0, {nscen}, {nstap}, {ng}, {Length[agesel]}];

	(* MEAN DURATION SINCE SMOKING CESSATION SPECIFIED BY AGE *)

	meanstopduur	= Table[Plus@@(duurval stopduur[[g, Range[nstopduur], a]]), {g, ng}, {a, na1}];

	RRsmokformoth = Table[1 + (RMothrisksel[[1, g, 2]] / RMothrisksel[[1, g, 1]] - 1) Exp[-logRRsmokduuroth[[g, 1]] *
					Exp[-logRRsmokduuroth[[g, 2]] Max0[Range[na1] - 51] ] meanstopduur[[g]] ],
				{g, ng}],

	(*JACK 240506resduurstop	= .0;*)resduurstop	= Table[0., {nscen}, {nstap}];

	];

(* JOINT STATE PREVALENCE NUMBERS MADE AVAILABLE *)

outfile		= OpenWrite[Global`outputpath <> "jointmodelstochindprev.m"];
Put[{nscen, Length[agesel], nstap, nz1, agemin, ndraw, riskind, disind, nscen0}, outfile]; 

(*{nscen, Length[agesel], nstap, nz1, agemin, ndraw, riskind, disind}*)


(* INITIAL CLASS PREVALENCE RATES *)

printbug["2."];

ERRrisk		= Table[Plus@@(RRriskseladj[[r, d, g]] prisksel[[r, g]]), {r, nrd}, {d, Length[RRriskseladj[[r]]]}, {g, ng}];

RMrisk		= Table[RRriskseladj[[r, d, g, ri]] / (ERRrisk[[r, d, g]] + eps),
			{r, nrd}, {d, Length[RRriskseladj[[r]]]}, {g, ng}, {ri, ncrsel[[r]]}];

printbug["2.1"];

n		= 0;
scen		= 1;
ToExpression[makescen];

printbug["2.2"];

prevcurr0	= makeprevcurr[prisksel, pdissel, RMrisk, RRdisscen, RRcasefatscen];

casefatbase	= Table[casefatscen[[casefatindsel[[d]]]] *
				Times@@Table[1 + (RRcasefatscen[[RRcasefatindsel[[d1, d]]]] - 1) pdissel[[d1]], {d1, nd}],
			{d, nd}];
printbug["2.3"];

	
(*-------------------------------------------------
	LOOP OVER SCENARIOS
---------------------------------------------------*)

nprevnew	= Table[0, {nz}];	(* CLASS PREVALENCE VALUES AFTER 1-YEAR TIME STEP *)
incevent	= Table[0, {nd}];	(* INCIDENCE EVENT INDICATOR VALUES *)
casefatevent	= Table[0, {nd}];	(* CASE FATALITY EVENT INDICATOR VALEUS *)

Do[
	(* DEFINES SCENARIO-SPECIFIC INPUT PARAMETER VALUES *)

printbug["3."];

	n		= 0;
	ToExpression[makescen];

	(* ADJUSTED EXCESS MORTALITY RATES *)

printbug["3.1"];

	excessmortadj 	= Min1[Max0[excessmortseladj + (excessmortscen - excessmortsel)]];
	
	transrisk	= Table[maketransmarginal[transriskscen[[r]], transriskindsel[[r]], r, ncrsel[[r]], trackingscen], {r, nrd}];

printbug["3.2"];

	If[(Quotient[patientsel, 10] > 0) && (scen == 1), transriskref = transrisk];

	(* DISCRETELY DISTRIBUTED RISK FACTORS *)

printbug["3.3"];

	ERRrisk		= Table[Plus@@(RRriskscen[[r, d, g]] priskscen[[r, g]]),
				{r, nrd}, {d, Length[RRriskscen[[r]]]}, {g, ng}];

	RMrisk		= Table[RRriskscen[[r, d, g, ri]] / (ERRrisk[[r, d, g]] + eps),
				{r, nrd}, {d, Length[RRriskscen[[r]]]}, {g, ng}, {ri, ncrsel[[r]]}];

	(* DISEASE INCIDENCE FIGURES *)

printbug["3.4"];

	inc		= makeincjoint[incscen, RRriskscen, RRdisscen];

	incbase		= Table[incscen[[d, g]]^2 / (Plus@@(inc[[g, d]] prevcurr0[[g]]) + eps), {d, nd}, {g, ng}];

	(* CHANGE OF INITIAL CLASS PREVALENCE RATES ACCORDING TO SCENARIO *)

printbug["3.5"];

	prevcurr 	= If[(scen == 1), prevcurr0, changeprevcurr[prevcurr0, priskscen]];

	prevnewborn 	= prevcurr[[Range[ng], Range[nz1], 1]];

	(* INITIAL DISCRETELY DISTRIBUTED DISEASE-SPECIFIC RISK FACTOR CLASSES, E.G. HBA1C *)

printbug["3.6"];

	hprisk	= Table[priskscen[[nrdpop + r, g, ri]] /
				RRrisksel[[nrdpop + r, RRriskindsel[[nrdpop + r, disindinv[[disriskindddis[[r]]]] + 1]], g, ri]],
			{r, nrddis}, {g, ng}, {ri, ncrsel[[nrdpop + r]]}];

	hprisk	= Table[hprisk[[r, g, ri]] / Plus@@hprisk[[r, g]], {r, nrddis}, {g, ng}, {ri, ncrsel[[nrdpop + r]]}];

	hRMriskdis = Table[RRrisksel[[nrdpop + r, RRriskindsel[[nrdpop + r, disindinv[[disriskindddis[[r]]]] + 1]], g, ri]] /
			(Plus@@(RRrisksel[[nrdpop + r, RRriskindsel[[nrdpop + r, disindinv[[disriskindddis[[r]]]] + 1]], g]] *
				hprisk[[r, g]]) + eps),
			{r, nrddis}, {g, ng}, {ri, ncrsel[[nrdpop + r]]}];

printbug["3.7"];


If[(scen == 1),	initprev = Table[0, {ng}, {Length[agesel]}, {ndraw}];
		initcont = Table[0, {ng}, {Length[agesel]}, {ndraw}]];


(*-------------------------------------------------
	LOOP OVER GENDER, AGE AND SAMPLE SIZE
---------------------------------------------------*)

	Do[	a	= agesel[[a1]];			(* INITIAL AGE OF COHORT *)
		b	= 1;				(* FIRST RANDOM DRAWING FROM POPULATION SAMPLE *)
		
	While[(b <= ndraw),

		ha	= agesel[[a1]];			(* CURRENT AGE OF COHORT *)
		breject	= False;
		nprev 	= If[(scen  == 1), Table[0, {nz}], initprev[[g, a1, b]]];
		
		If[(scen == 1), (* REFERENCE SCENARIO *)

			(* INITIAL DISCRETELY DISTRIBUTED RISK FACTOR CLASSES *)

			Do[	nprev[[r]] = Max[Range[ncrsel[[r]] + 1] Sign[Random[] - FoldList[Plus, 0, priskscen[[r, g, All, ha]]]]],
				{r, nrdpop}];

			(* INITIAL DISEASE STATES *)

			Do[	d = dispath[[d1]];

				(* BASELINE DISEASE PREVALENCE RATE *)

				currpdis = pdissel[[d, g, ha]];

				(* EFFECT THROUGH DISCRETELY DISTRIBUTED POPULATION RISK FACTORS *)

				Do[currpdis *= RMrisk[[r, RRriskindsel[[r, d + 1]], g, nprev[[r]], ha]], {r, nrdpop}];
				
				(* EFFECT THROUGH NOT CAUSALLY RELATED RISK FACTORS WITH EMPIRICAL DATA *)

				If[(userriskdata >= 1),	Do[

					currpdis *= RMriskDMinc[[d, r1, g, nprev[[DMriskpairsel[[d, r1]]]], ha]],
					{r1, Length[DMriskpairsel[[d]]]}]];

				(* EFFECT THROUGH INDEPENDENT CO-MORBIDITY DISEASES *)

				Do[If[MemberQ[dispair, {dispath[[d2]], d}],

					currpdis *= (2 - nprev[[nrd + dispath[[d2]]]]) +
							(nprev[[nrd + dispath[[d2]]]] - 1) *
								RRdisadj[[RRdisindsel[[dispath[[d2]], dispath[[d1]]]], g, ha]] /
							ERRdisadj[[RRdisindsel[[dispath[[d2]], dispath[[d1]]]], g, ha]]],
					{d2, d1 - 1}];

				(* EFFECT THROUGH DISCRETELY DISTRIBUTED DISEASE-SPECIFIC RISK FACTORS *)

				Do[	hr 	= nrdpop + riskdisdsel[[dispath[[d2]], r]];
					hd	= nprev[[nrd + disindinv[[disriskindddis[[hr - nrdpop]]]]]];

					currpdis *= RMrisk[[hr, RRriskindsel[[hr, d + 1]], g, nprev[[hr]], ha]] (hd - 1) + (2 - hd),

					{d2, d1 - 1}, {r, Length[riskdisdsel[[dispath[[d2]]]]]}];

				nprev[[nrd + d]] = 1 + Max0[Sign[currpdis - Random[]]];

				(* DISCRETELY DISTRIBUTED DISEASE-SPECIFIC RISK FACTORS HAVING THE RELATED DISEASE *)

				Do[	hr 	= nrdpop + riskdisdsel[[d, r]];
					hprisk	= (nprev[[nrd + d]] - 1) priskscen[[hr, g, All, ha]] +
							(2 - nprev[[nrd + d]]) priskincsel[[hr - nrdpop, g, All, ha]];

					nprev[[hr]] = Max[Range[ncrsel[[hr]] + 1] Sign[Random[] - FoldList[Plus, 0, hprisk]]],

					{r, Length[riskdisdsel[[d]]]}]

				,{d1, nd}]; (* INITIAL DISEASE STATES *)

			If[(patientsel == 0) || (Mod[patientsel, 10] > 0)|| (nprev[[nrd + disindinv[[Quotient[patientsel, 10]]]]] == 2),

				initprev[[g, a1, b]] = nprev;
				b++,
				breject = True]];  (* END REFERENCE SCENARIO *)

		(* ALTERNATIVE SCENARIO *)

		If[(scen > 1), 
			rsel = Select[Range[nrd] Sign[Table[Plus @@Flatten[Abs[prisksel[[r]] - priskscen[[r]]]], {r, nrd}]], Positive];
			If[! ((Quotient[patientsel, 10] > 0)
				&& (Mod[patientsel, 10] > 0)
				&& (nprev[[nrd + disindinv[[Quotient[patientsel, 10]]]]] == 1)), 
				Do[nprev[[rsel[[r]]]] = Max[Range[ncrsel[[rsel[[r]]]] + 1]*Sign[Random[] - FoldList[Plus, 0, priskscen[[rsel[[r]], g, All, ha]]]]],
				{r, Length[rsel]}]];
			b++];

		n	= 0;				(* TIME STEP *)	
		dmort	= 0;				(* MORTALITY INDICATOR *)

		(* RESTRICTION TO DISEASED POPULATION *)

		If[(Quotient[patientsel, 10] > 0) && (Mod[patientsel, 10] == 0) &&
			(nprev[[nrd + disindinv[[Quotient[patientsel, 10]]]]] == 1), dmort = 1];
		
		(* AGE AT DISEASE ONSET *)

		onsetage = ha - 1 - disduur[[Range[nd], g, ha]];

		(* AGE AT SMOKING CESSATION *)

		If[(nrd > 0),

			duurstop = If[(RRsmokduurind == 1) && (nprev[[1]] == 3),
					(prisksel[[1, g, 3, ha]] Plus@@(stopduur[[g, Range[nstopduur], ha]] duurval) +
					(priskscen[[1, g, 3, ha]] - prisksel[[1, g, 3, ha]]) duurval[[1]]) / (priskscen[[1, g, 3, ha]] + eps),
					0]];

		resprev	= Table[0, {nstap}];						

		While[(n < nstap) && (dmort == 0),	

				
		(*-------------------------------------------------
				LOOP OVER 1 YEAR TIME STEPS
		---------------------------------------------------*)

			++n;

			(* RANDOM RISK FACTOR CLASS TRANSITIONS *) 

			Do[	transrate = transrisk[[r, g, nprev[[r]], Range[ncrsel[[r]]], ha]];

				(* ADJUSTMENT FOR TRACKING *)

				If[(trackingind == 1) && (trstrackingind[[riskindd[[r]]]] == 1),

					Do[transrate[[ri + 1]] += trackingscen trstrackingsel[[r, g, ri, 1, ha]],
						{ri, ncrsel[[r]] - 1}];

					Do[transrate[[ri - 1]] += trackingscen trstrackingsel[[r, g, ri, 2, ha]],
						{ri, 2, ncrsel[[r]]}]

					];
		
				(* NO TRANSITIONS IN CASE OF DISEASE-FREE FOR DISEASE-SPECIFIC RISK FACTORS, E.G. HBA1C *)

				If[(r > nrdpop) && (nprev[[nrd + disindinv[[disriskindddis[[r - nrdpop]]]]]] == 1),
					transrate = Table[0, {ncrsel[[r]]}];
					transrate[[nprev[[r]]]] = 1];

				(* DURATION-DEPENDENT SMOKING RELAPSE RATES *)

				If[(RRsmokduurind == 1) && (r == 1) && (nprev[[r]] == 3),

					transrate[[2]] = 1 - Exp[ -relapsecoeffscen[[g, 1]] Exp[ -relapsecoeffscen[[g, 2]] 12 duurstop] *
									( 1 - Exp[ -relapsecoeffscen[[g, 2]] 12] ) ];
					transrate[[3]] = 1 - transrate[[2]]];

				nprevnew[[r]] = Max[Range[ncrsel[[r]] + 1] Sign[Random[] - FoldList[Plus, 0, transrate]]],

				{r, nrd}];

			(* RELATIVE RISKS FOR EX-SMOKERS DEPEND ON TIME SINCE SMOKING CESSATION *)

			If[(RRsmokduurind == 1),

				Do[RRriskscen[[1, d, g, 3, ha]] =
						1 + (RRriskscen[[1, d, g, 2, ha]] - 1) *
						Exp[-logRRsmokduur[[d, g, 1]] Exp[-logRRsmokduur[[d, g, 2]] Max0[ha - 51] ] duurstop],
					{d, Length[logRRsmokduur]}, {g, ng}]];

			(* RANDOM DISEASE STATE TRANSITIONS *)

			incevent = Table[0, {nd}];

			Do[If[(nprev[[nrd + d]] == 1),

					(* INCIDENCE AND CASE FATALITY EVENTS IN CASE OF DISEASE-FREE *)

					inc = incbase[[d, g, ha]] *

						(* DISCRETELY DISTRIBUTED POPULATION RISK FACTORS *)

						Times@@Table[RRriskscen[[r, RRriskindsel[[r, d + 1]], g, nprev[[r]], ha]], {r, nrdpop}] *

						(* DISCRETELY DISTRIBUTED RISK FACTORS RESTRICTED TO DISEASES, E.G. HBA1C *)

						Times@@Table[	1 +
								(nprev[[nrd + disindinv[[disriskindddis[[r]]]]]] - 1) *
								(RRriskscen[[nrdpop + r, RRriskindsel[[nrdpop + r, d + 1]], g,													nprev[[nrdpop + r]], a]] - 1),
								{r, nrddis}] *

						(* CO-MORBIDITY *)

						Times@@Table[1 + (RRdisadj[[RRdisindsel[[d1, d]], g, ha]] - 1) (nprev[[nrd + d1]] - 1),
								{d1, nd}];

					incevent[[d]] 	= Max0[Sign[inc - Random[]]];

					onsetage[[d]] 	= ha;

					(* CASE FATALITY RATES ADJUSTED FOR CO-MORBID DISEASE STATUS *)

					casefatadj	= casefatbase[[d, g, ha]] *
								Times@@Table[
									1 +
									(RRcasefatscen[[RRcasefatindsel[[d1, d]], g, ha]] - 1) *
										nprev[[nrd + d1]],
									{d1, nd}];
								
					probcasefat	= casefatadj +
								.5 (1 - casefatadj ) *
									(excessmortscen[[d, g, ha]] + rem1[[remindsel[[d]], g, ha]]);

					casefatevent[[d]] = incevent[[d]] Max0[Sign[probcasefat - Random[]]];

					nprevnew[[nrd + d]] = 1 + incevent[[d]] (1 - casefatevent[[d]]),

					(* REMISSION EVENTS IN CASE OF DISEASED *)
					
					remrate		= rem1[[remindsel[[d]], g, ha]];

					nprevnew[[nrd + d]] = 2 - Max0[Sign[remrate - Random[]]]],

				{d, nd}]; (* END RANDOM DISEASE STATE TRANSITIONS *)

			(* MORTALITY EVENT *)

			mortoth		= Times@@Table[RMothrisksel[[r, g, nprev[[r]], ha]], {r, 2, nrd}] mortothsel[[g, ha]] *

						If[(nrd == 0),

							1,

							If[(RRsmokduurind == 1) && (nprev[[1]] == 3),

								(1 + (RMothrisksel[[1, g, 2, ha]] / RMothrisksel[[1, g, 1, ha]] - 1) *
									Exp[-logRRsmokduuroth[[g, 1]] Exp[-logRRsmokduuroth[[g, 2]] *
									Max0[ha - 51] ] duurstop ]) /
								RRsmokformoth[[g, ha]],

								RMothrisksel[[1, g, nprev[[1]], ha]]]

							];

			excessmortcurr	= excessmortadj[[Range[nd], g, ha]] (nprev[[nrd + Range[nd]]] - 1);

			morttot 	= Plus@@excessmortcurr + mortoth;

			dmortprev 	= Max0[Sign[morttot - Random[]]];

			dmort		= Max[{casefatevent incevent, dmortprev}];
	
	
			(*--------------------------------------------------------------------------
			FILL OUTPUT VARIABLES WITH MODEL RESULTS FOR SCENARIO scen AND TIME STEP n 
			---------------------------------------------------------------------------*)

			++respop[[scen, n, g, a1]];

			Do[++resrisk[[scen, n, r, g, nprev[[r]], a1]], {r, nrdpop}];

			Do[If[(nprev[[nrd + disindinv[[disriskindddis[[r]]]]]] == 2),
					++resrisk[[scen, n, nrdpop + r, g, nprev[[nrdpop + r]], a1]]], {r, nrddis}];

			resdis[[scen, n, Range[nd], g, a1]] += nprev[[nrd + Range[nd]]] - 1;

			resinc[[scen, n, Range[nd], g, a1]] += incevent;

			If[(dmortprev == 1),

				resmort[[scen, n, Range[nd], g, a1]] += excessmortcurr / morttot;

				resmort[[scen, n, nd + 1, g, a1]] += mortoth / morttot];

			If[(dmortprev == 0) && (dmort == 1),

				resmort[[scen, n, Range[nd], g, a1]] += casefatevent incevent];
		
			resmort[[scen, n, nd + 2, g, a1]] += dmort;

			resonsetage[[scen, n, Range[nd], g, a1]] += (nprev[[nrd + Range[nd]]] - 1) onsetage;

			If[(RRsmokduurind == 1) && (nprev[[1]] == 3), resduurstop[[scen, n, g, a1]] += duurstop];

			If[(dmort == 1),

				Do[	++resmortrisk[[scen, n, r, g, nprev[[r]], a1]], {r, nrdpop}];

				Do[	If[(nprev[[nrd + disindinv[[disriskindddis[[r]]]]]] == 2),
				 		++resmortrisk[[scen, n, nrdpop + r, g, nprev[[nrdpop + r]], a1]]], {r, nrddis}]];

			resprev[[n]] = makezval[nprev];
	 		
			(*---------------------------------------------------------
		 	CALCULATED NEW VALUES OF MODEL STATE VARIABLES, I.E. AT END OF 1-YEAR TIME STEP
			----------------------------------------------------------*)

			If[(RRsmokduurind == 1),

				If[(nprev[[1]] == 3) && (nprevnew[[1]] == 3), ++duurstop];	(* CONTINUOUSLY FORMER SMOKER *)
				If[(nprev[[1]] == 2) && (nprevnew[[1]] == 3), duurstop = .5]];	(* NEW FORMER SMOKER *)
									
			nprev		= nprevnew (1 - dmort);
			ha		= Min[{ha + 1, na1}]


		(*-------------------------------------------------
				END OF LOOP OVER 1 YEAR TIME STEPS
			---------------------------------------------------*)

		];

		If[!breject, PutAppend[{scen, g, agesel[[a1]], resprev}, outfile]]


	(*-------------------------------------------------
		END OF LOOP OVER GENDER, AGE AND DRAWING
	---------------------------------------------------*)

	], {g, ng}, {a1, Length[agesel]}],

(*-------------------------------------------------
	END OF LOOP OVER SCENARIOS
---------------------------------------------------*)

{scen, nscen}]; 

Close[outfile];


(*-------------------------------------------------
	SCALING OF RESULTS FROM SAMPLE SIZE TO POPULATION SIZE
---------------------------------------------------*)

printbug["5."];

scalepop	= npop0;

If[(Quotient[patientsel, 10] > 0) && (Mod[patientsel, 10] == 0),scalepop *= pdissel[[disindinv[[Quotient[patientsel, 10]]]]]];

Do[respop[[scen, n]] *= scalepop[[All, agesel]] / ndraw, {scen, nscen}, {n, nstap}];

Do[resrisk[[scen, n, r, g, ri]] *= scalepop[[g, agesel]] / ndraw, {scen, nscen}, {n, nstap}, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}];

If[(riskcontind == 1) && (nrc > 0), Do[resdist[[scen, n, r, g, ri]] *= scalepop[[g, agesel]] / ndraw,
	{scen, nscen}, {n, nstap}, {r, nrc}, {g, ng}, {ri, 2}]];

Do[resdis[[scen, n, d]] *= scalepop[[All, agesel]] / ndraw, {scen, nscen}, {n, nstap}, {d, nd}];

Do[resinc[[scen, n, d]] *= scalepop[[All, agesel]] / ndraw, {scen, nscen}, {n, nstap}, {d, nd}];

Do[resmort[[scen, n, d]] *= scalepop[[All, agesel]] / ndraw, {scen, nscen}, {n, nstap}, {d, nd + 2}];

Do[resonsetage[[scen, n, d]] *= scalepop[[All, agesel]] / ndraw, {scen, nscen}, {n, nstap}, {d, nd}];

If[(RRsmokduurind == 1), Do[resduurstop[[scen, n]] *= scalepop[[All, agesel]] / ndraw, {scen, nscen}, {n, nstap}]];

Do[resmortrisk[[scen, n, r, g, ri]] *= scalepop[[g, agesel]] / ndraw, {scen, nscen}, {n, nstap}, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}];

printbug["5.1"];

resjointmodelstochind = transformres[respop, resrisk, resdist, resdis, resinc, resmort, resonsetage, resduurstop, resmortrisk],

resjointmodelstochind = {respop, resrisk, resdist, resdis, resinc, resmort, resonsetage, resduurstop, resmortrisk}];

 (* IF[(MODELSEL[[4]] == 1) && (APPLTYPE != "outp") *)

printtijd;



(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];

End[]

Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMStoreResults *)

(* :Context: CZMSimulation` *)

(* :Author: Rudolf T. Hoogenveen, Roel G.M. Breuls *)

(* :Summary:
   CZM postprocessing routine stores results *)

(* :Copyright: © 2006 by Rudolf Hoogenveen *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	 3.1 March 2007 *)

(* :Keywords: postprocessing, results, storage, file *)


BeginPackage["CZMSimulation`CZMStoreResults`",
	{"CZMMain`CZMMain`",
	"CZMInitialization`CZMLogFile`",
	"CZMInitialization`CZMConstants`",
	"CZMInitialization`CZMFunctions`", 
	"CZMImportData`CZMImportUserSelections`",
	"CZMImportData`CZMImportDemography`",
	"CZMAdjustData`CZMMakeSelections`",
	"CZMAdjustData`CZMAdjustAfterSelection`",
	"CZMSimulation`CZMSimulationMarginalModelDetermPop`",
	"CZMSimulation`CZMSimulationJointModelDetermPop`",
	"CZMSimulation`CZMSimulationJointModelDetermAge`",
	"CZMSimulation`CZMSimulationJointModelStochInd`",
	"CZMSimulation`CZMSimulationMarginalModelDetermDis`"}]

resmodel	::usage	= "list of CZM model results"
leesprev1	::usage	= "reads data from file with results from marginal model"
leesprevpop	::usage	= "reads data from file with results from joint population model"
leesprevage	::usage	= "reads data from file with results from joint age-cohort model"
leesprevind	::usage	= "reads data from file with results from joint individual model"
leesprevpop1	::usage	= "reads data from file with results from multiple joint population models"
leesprevage1	::usage	= "reads data from file with results from multiple joint age-cohort models"
leesprevind1	::usage	= "reads data from file with results from multiple joint individual models"


Begin["`Private`"]


Print["CZMStoreResults package is evaluated"];
printtijd;

printbug[c_] := If[(bugind == 1), Print[{"CZMStoreResults", c}]];

printbug["1."];


(* --------------------------------------------------
	CONCATENATION OF MODEL RESULTS
----------------------------------------------------*)

appltype	= StringTake[ToString[Global`application], {8, 11}];

If[(appltype != "outp"),

printbug["1.1"];

	(* MARGINAL MODEL RESULTS: MARGINAL MODEL ON DISEASE INCLUDED *)

	If[(appltype == "test"),

		resmodel	= {resmarginalmodeldetermpop, resjointmodeldetermpop, resjointmodeldetermage, resjointmodelstochind,
					resmarginalmodeldetermdis,
					excessmortseladj, mortothsel, RRriskseladj, RMothrisksel},

		resmodel	= {resmarginalmodeldetermpop, resjointmodeldetermpop, resjointmodeldetermage, resjointmodelstochind,
					resmarginalmodeldetermdis,
					0, 0, 0, 0}];

	PutAppend[{riskindd, disind, excessmortcond, mortothind, agemin, agemax, modelsel, nstap, nscen0},
			Global`outputpath <> "outfileresmodelrun.m"];

	Do[PutAppend[resmodel[[m, o, scen, n]], Global`outputpath <> "outfileresmodelrun.m"],
		{m, nmodel}, {o, Length[resmodel[[m]]]}, {scen, nscen}, {n, nstap}];

	Do[PutAppend[resmodel[[m]], Global`outputpath <> "outfileresmodelrun.m"], {m, nmodel + 1, Length[resmodel]}];
	
	(* JOINT POPULATION MODEL RESULTS *)

	If[(modelsel[[2]] == 1),
printbug["1.2"];

	dat	= OpenRead[Global`outputpath <> "jointmodeldetermpopprev.m"];
		hres	= Read[dat];
		PutAppend[hres, Global`outputpath <> "jointmodeldetermpopprev1.m"];
		hnscen	= hres[[1]];
		hnstap	= hres[[3]];
		Do[	PutAppend[Read[dat], Global`outputpath <> "jointmodeldetermpopprev1.m"], {hnscen}, {hnstap}];
		Close[dat]];
		
	(* JOINT AGE-COHORT MODEL RESULTS *)

	If[(modelsel[[3]] == 1),
printbug["1.3"]; 
		dat	= OpenRead[Global`outputpath <> "jointmodeldetermageprev.m"];
		hres	= Read[dat];
		PutAppend[hres, Global`outputpath <> "jointmodeldetermageprev1.m"];
		hnscen	= hres[[1]];
		nagesel	= hres[[2]];
		hnstap	= hres[[3]];
		Do[	PutAppend[ReadList[dat, Expression, hnstap], Global`outputpath <> "jointmodeldetermageprev1.m"],
			{hnscen}, {ng}, {nagesel}];
		Close[dat]];
	
	(* JOINT INDIVIDUAL MODEL RESULTS *)

	If[(modelsel[[4]] == 1),
printbug["1.4"];
		dat	= OpenRead[Global`outputpath <> "jointmodelstochindprev.m"];
		hres	= Read[dat];
		PutAppend[hres, Global`outputpath <> "jointmodelstochindprev1.m"];
		hnscen	= hres[[1]];
		nagesel	= hres[[2]];
		hndraw	= hres[[6]];
		Do[	PutAppend[ReadList[dat, Expression, hndraw], Global`outputpath <> "jointmodelstochindprev1.m"],
			{hnscen}, {ng}, {nagesel}];
		Close[dat]];
printbug["1.6"],

	resmodel = (ReadList[Global`outputpath <> resfile])[[1 + 2 run]];

	];

(* --------------------------------------------------
	READ PROCEDURES
----------------------------------------------------*)

(* MARGINAL MODEL *)

leesprev1 := Block[{},

printbug["2.1"];

	dat	= OpenRead[Global`outputpath <> "outfileresmodelrun.m"];
	Read[dat];
	hsel 	= Read[dat]; 
	hnstap	= hsel[[8]];
	hnscen	= hsel[[9]];
	res 	= Table[0., {10}, {hnscen}, {hnstap}];
	Do[	res[[o, scen, n]] += Read[dat], {o, 10}, {scen, hnscen}, {n, hnstap}]; 
	Close[dat];

	{{hnscen, hnstap}, res}];	

(* JOINT MODEL DETERMINISTIC POPULATION *)

leesprevpop := Block[{},

printbug["2.2"];

	dat	= OpenRead[Global`outputpath <> "jointmodeldetermpopprev.m"];
	hres 	= Read[dat];
	hnscen	= hres[[1]];
	hnstap	= hres[[3]];
	hnprev	= Table[0., {hnscen}, {hnstap}];
	Do[hnprev[[scen, n]] += Read[dat], {scen, hnscen}, {n, hnstap}];
	Close[dat];

	{hres, hnprev}];

(* JOINT MODEL DETERMINISTIC AGE COHORTS *)

leesprevage := Block[{},

printbug["2.3"];

	dat	= OpenRead[Global`outputpath <> "jointmodeldetermageprev.m"];

	hres 	= Read[dat];
	hnscen 	= hres[[1]];
	nagesel	= hres[[2]];
	hnstap	= hres[[3]];
	hnz1	= hres[[4]];
	hagemin	= hres[[5]];
	hna	= Max[{na1, hagemin + nagesel + hnstap}];

	hnprev = Table[0., {hnscen}, {hnstap}, {ng}, {hna}, {hnz1}];

	Do[hnprev[[scen, n, g, hagemin + a + n - 2]] += Read[dat], {scen, hnscen}, {g, ng}, {a, nagesel}, {n, hnstap}];

	Close[dat];

	hnprev	= Transpose[hnprev, {2, 3, 4, 1, 5}];

	If[(hna > na1),	hnprev[[na1]] = Plus@@Drop[hnprev, na];
			hnprev	= hnprev[[Range[na1]]]];

	hnprev	= Table[Plus@@hnprev[[Range[5 ai - 4, Min[{5 ai, na1}]]]], {ai, nac[[1]]}];
	hnprev	= Transpose[hnprev, {5, 1, 2, 3, 4}];

	{hres, hnprev}];

(* JOINT MODEL STOCHASTIC INDIVIDUALS *)

leesprevind := Block[{},

printbug["2.4"];

	dat	= OpenRead[Global`outputpath <> "jointmodelstochindprev.m"];
	hres 	= Read[dat];
	hnscen 	= hres[[1]];
	nagesel = hres[[2]];
	hnstap 	= hres[[3]];
	hnz1 	= hres[[4]];
	hagemin = hres[[5]];
	hndraw 	= hres[[6]];

	hnprev 	= Table[0., {hnscen}, {ng}, {nagesel}, {hnstap}, {hnz1}];

	Do[	hresi = Read[dat];
		nstapi = Max[Range[hnstap] Sign[hresi[[4]]]];
		Do[++hnprev[[scen, g, a, n, hresi[[4, n]]]], {n, nstapi}], {scen, hnscen}, {g, ng}, {a, nagesel}, {hndraw}];

	Do[hnprev[[scen, g, a, n]] *= npop0[[g, hagemin + a - 1 ]] / hndraw, {scen, hnscen}, {g, ng}, {a, nagesel}, {n, hnstap}];
	hnprev	= Transpose[hnprev, {3, 4, 1, 2, 5}];
	hnprev1	= Table[0., {na1}, {hnstap}, {hnscen}, {ng}, {hnz1}]; 
	Do[hnprev1[[Min[{hagemin + a + n - 2, na1}], n]] += hnprev[[a, n]], {a, nagesel}, {n, hnstap}];
	hnprev	= Table[Plus@@hnprev1[[Range[5 ai - 4, Min[{5 ai, na1}]]]], {ai, nac[[1]]}];
	hnprev	= Transpose[hnprev, {5, 2, 1, 3, 4}];

	{hres, hnprev}];

(* JOINT MODEL DETERMINISTIC POPULATION, SEVERAL RUNS *)

leesprevpop1 := Block[{},

printbug["2.5"];

	dat	= OpenRead[Global`outputpath <> "jointmodeldetermpopprev1.m"];
	hnrun	= Read[dat][[1]];
	hres	= hnprev = Table[0., {hnrun}];
	Do[	hres[[hrun]]	= Read[dat];
		hnscen		= hres[[hrun, 1]];
		hnstap		= hres[[hrun, 3]];
		hnprev[[hrun]]	= Table[0., {hnscen}, {hnstap}];
		Do[hnprev[[hrun, scen, n]] += Read[dat], {scen, hnscen}, {n, hnstap}],
		{hrun, hnrun}];
	Close[dat];
   
	Table[{hres[[hrun]], hnprev[[hrun]]}, {hrun, hnrun}]];

(* JOINT MODEL DETERMINISTIC AGE COHORTS *)

leesprevage1 := Block[{},

printbug["2.6"];

	dat	= OpenRead[Global`outputpath <> "jointmodeldetermageprev1.m"];
	hnrun	= Read[dat][[1]];
	hres	= hnprev = Table[0., {hnrun}];
printbug["2.6.1"];	
	Do[	hres[[hrun]]	= Read[dat];
		hnscen		= hres[[hrun, 1]];
		nagesel		= hres[[hrun, 2]];
		hnstap		= hres[[hrun, 3]];
		hnz1		= hres[[hrun, 4]];
		hagemin		= hres[[hrun, 5]];
		hna		= Max[{na1, hagemin + nagesel + hnstap}];
		hnprev[[hrun]]	= Table[0., {hnscen}, {ng}, {hna}, {hnstap}, {hnz1}];
printbug["2.6.2"];
		Do[	resi	= Read[dat];
			Do[hnprev[[hrun, scen, g, hagemin + a + n - 2, n]] += resi[[n]], {n, hnstap}],
			{scen, hnscen}, {g, ng}, {a, nagesel}]; 
		hnprev[[hrun]]	= Transpose[hnprev[[hrun]], {2, 4, 1, 3, 5}];
printbug["2.6.3"];
		If[(hna > na1),	hnprev[[hrun, na1]] = Plus@@Drop[hnprev[[hrun]], na];
printbug["2.6.4"];
		hnprev[[hrun]]	= hnprev[[hrun, Range[na1]]]];
		hnprev[[hrun]]	= Table[Plus@@hnprev[[hrun, Range[5 ai - 4, Min[{5 ai, na1}]]]], {ai, nac[[1]]}];
		hnprev[[hrun]]	= Transpose[hnprev[[hrun]], {5, 1, 2, 3, 4}],

		{hrun, hnrun}];

	Table[{hres[[hrun]], hnprev[[hrun]]}, {hrun, hnrun}]];

(* JOINT MODEL STOCHASTIC INDIVIDUALS *)

leesprevind1 := Block[{},

printbug["2.7"];

	dat	= OpenRead[Global`outputpath <> "jointmodelstochindprev1.m"];
	hnrun	= Read[dat][[1]];
	hres	= hnprev = Table[0., {hnrun}];
	Do[	hres[[hrun]]	= Read[dat];
		hnscen		= hres[[hrun, 1]];
		nagesel		= hres[[hrun, 2]];
		hnstap 		= hres[[hrun, 3]];
		hnz1 		= hres[[hrun, 4]];
		hagemin 	= hres[[hrun, 5]];
		hndraw 		= hres[[hrun, 6]];
		hnprev[[hrun]] 	= Table[0., {hnscen}, {ng}, {nagesel}, {hnstap}, {hnz1}];
		Do[	hdat 	= Read[dat];
			Do[	hresi = hdat[[i]];
				nstapi 	= Max[Range[hnstap] Sign[hresi[[4]]]];
				Do[++hnprev[[hrun, scen, g, a, n, hresi[[4, n]]]], {n, nstapi}],
				{i, hndraw}],
			{scen, hnscen}, {g, ng}, {a, nagesel}];
		Do[hnprev[[hrun, scen, g, a, n]] *= npop0[[g, hagemin + a - 1]] / hndraw, {scen, hnscen}, {g, ng}, {a, nagesel}, {n, hnstap}];
		hnprev[[hrun]]	= Transpose[hnprev[[hrun]], {3, 4, 1, 2, 5}];
		hnprev1		= Table[0., {na1}, {hnstap}, {hnscen}, {ng}, {hnz1}];
		Do[hnprev1[[Min[{hagemin + a + n - 2, na1}], n]] += hnprev[[hrun, a, n]], {a, nagesel}, {n, hnstap}];
		hnprev[[hrun]]	= Table[Plus@@hnprev1[[Range[5 ai - 4, Min[{5 ai, na1}]]]], {ai, nac[[1]]}];
		hnprev[[hrun]]	= Transpose[hnprev[[hrun]], {5, 2, 1, 3, 4}],

		{hrun, hnrun}];
	
	Table[{hres[[hrun]], hnprev[[hrun]]}, {hrun, hnrun}]];
	
printtijd;


(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];

End[]


Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMExportUserSelections *)

(* :Context: CZMPostProcessing` *)

(* :Author: Rudolf  T. Hoogenveen, Roel G.M. Breuls *)

(* :Summary:
   CZM package with functions to import the user selections of input*)

(* :Copyright: © 2004 by Rudolf Hoogenveen/Roel Breuls *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM July 2004
		2.0 first release CZM 2005, version March, update menus
		3.0 version November 2005 
		3.1 version March 2007 *)

(* :Keywords: user selections, import *)

BeginPackage["CZMPostProcessing`CZMExportUserSelections`",
	{"CZMInitialization`CZMLogFile`",
	"CZMInitialization`CZMDefaultFileNames`",
	"CZMInitialization`CZMConstants`",
	"CZMInitialization`CZMFunctions`",
	"CZMImportData`CZMImportUserSelections`"}]


outputnames::usage		= "names of output variables"
outputsel::usage		= "output variables selected"
noutput::usage			= "number of output variables available"

rates::usage			= "absolute numbers (0) or rates (1)"
standardized::usage		= "standardized no (0) or yes (1)"
agespecres::usage		= "presentation of model results specified by age class (>1) or not (<=1)"
withindisease::usage		= "presentation of model results within disease groups"

cumulative::usage		= "yearly (0) or cumulative (1) figures"
discountc::usage		= "cost discounting factor applied to cumulative figures"
discounte::usage		= "effect discounting factor applied to cumulative figures"
disweighting::usage		= "weighting of disease states applied to cumulative figures"
otherdis::usage			= "inclusion of other diseases applied to cumulative figures"
heterogeneity::usage		= "assumption  of homogeneous (0) or heterogeneous (1) population in DALY calculations"

outputscreen::usage		= "presentation of model output on screen (1) or not (0)"
outputnotebook::usage		= "presentation of model output in notebook (1) or not (0)"
outputfile::usage		= "presentation of tabular output in ASCII file (1) or not (0)"
tabeloutput::usage		= "presentation of tabular output (1) or not (0)"
graphicoutput::usage		= "presentation of graphical output (1) or not (0)"


Begin["`Private`"]	


Print["CZMExportUserSelections package is evaluated"]


(* -----------------------------------------------
           OUTPUT VARIABLES
   -----------------------------------------------*)

input = ReadList[Global`inputpath <> useroutput, Word, WordSeparators -> {"/t", "="}];

(* s0 to s3 denote the position of the KEYWORDS in the userinput file *)

s0	= Flatten[Position[input, "OUTPUT VARIABLES SELECTED"]][[1]];
s1	= Flatten[Position[input, "OUTPUT SPECIFICATION"]][[1]];
s2	= Flatten[Position[input, "COMBINING LIFE YEARS"]][[1]];
s3	= Flatten[Position[input, "OUTPUT DEVICE SPECIFICATION"]][[1]];
s4 	= Flatten[Position[input, "END"]][[1]];

outputnames 	= Take[input, {s0 + 1, s1 - 1, 2}]; 
outputsel	= ToExpression[Take[input, {s0 + 2, s1 - 1, 2}]];

constants 	= ToExpression[Take[input, {s1 + 2, s2 - 1, 2}]];

rates		= constants[[1]];
standardized 	= constants[[2]];
agespecres	= constants[[3]];
withindisease	= constants[[4]];
If[(patientsel > 0) && (Mod[patientsel, 10] == 0),
	Print["results presented within disease in case of population restricted to disease (thus: withindisease = 1)"];
	withindisease = 1];								(* DEFAULT SELECTION *)

outputnames	= Join[outputnames, {"\t"<> "joint class prevalence numbers"}];
outputsel	= Join[outputsel, {1}];
noutput		= Length[outputnames];

If[(Length[agesel] > 1),
	Print["only standardization in case of selecting one cohort (thus: standardized = 0)"];
	standardized = 0];								(* DEFAULT SELECTION *)
If[(standardized == 1),
	Print["presentation of absolute total numbers in case of standardization (thus: agespecres = rates = 0)"];
	agespecres = 0; rates = 0];							(* DEFAULT SELECTION *)

constants 	= ToExpression[Take[input, {s2 + 2, s3 - 1, 2}]];

cumulative 	= 0;
discountc 	= 0;
discounte 	= 0;
disweighting 	= constants[[1]];
otherdis	= 0;
heterogeneity	= 0;

If[(discountc > eps) || (discounte > eps), rates = 0;
	Print["no presentation of rates in case of discounting (thus: rates = 0)"];
	cumulative = 1];								(* DEFAULT SELECTION *)

constants 	= ToExpression[Take[input, {s3 + 2, s4 - 1, 2}]];

outputnotebook	= constants[[1]];
outputfile	= constants[[2]];
tabeloutput	= constants[[3]];
graphicoutput	= constants[[4]];
outputscreen	= 0;

If[(graphicoutput == 1),
	Print["presentation in notebook in case of graphical output (thus: outputnotebook = 1)"];
	outputnotebook 	= 1];								(* DEFAULT SELECTION *)
If[(outputfile == 1),
	Print["presentation in table format in case of ASCII file output (thus: tabeloutput = 1)"];
	tabeloutput 	= 1];								(* DEFAULT SELECTION *)
If[(nstap < 2),
	Print["no presentation for separate runs if nstap < 2 (thus: outputfile = 0, outputnotebook = 0)"];
	outputfile	= 0;
	outputnotebook	= 0];								(* DEFAULT SELECTION *)
	

(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];

WriteString[logfile,

		"Output Variables Selected\n\n",
		
		Table[outputnames[[Select[Range[noutput] outputsel, Positive]]][[t]] <> "\n", {t, Plus@@outputsel}],
		"\n",

	"Output Specification\n\n",
		"\t" <> "rates no (0) or yes (1): " <> ToString[rates] <> "\n",
		"\t" <> "standardized no (0) or yes (1): " <> ToString[standardized] <> "\n",
		"\t" <> "specification by age: " <> ToString[agespecres] <> "\n\n",
		
	"Life Expectancy Weighting\n\n",
		"\t" <> "cumulative no (0) or yes (1): " <> ToString[cumulative] <> "\n",
		"\t" <> "effect discounting factor: " <> ToString[discounte] <> "\n",
		"\t" <> "cost discounting factor: " <> ToString[discountc] <> "\n",
		"\t" <> "disease status weighting: " <> ToString[disweighting] <> "\n",
		"\t" <> "other diseases included: " <> ToString[otherdis] <> "\n",
		"\t" <> "heterogeneous population: " <> ToString[heterogeneity] <> "\n\n",

	"Output Device Specification\n\n",
		"\t" <> "output to screen: "	<> ToString[outputscreen] <> "\n",
		"\t" <> "output to notebook: " 	<> ToString[outputnotebook] <> "\n",
		"\t" <> "output to file: " 	<> ToString[outputfile] <> "\n",
		"\t" <> "output in table form: " <> ToString[tabeloutput] <> "\n",
		"\t" <> "output in graphical form: " <> ToString[graphicoutput] <> "\n\n"
		
]; 

End[]

Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMCalcResults *)

(* :Context: CZMPostProcessing` *)

(* :Author: Rudolf T. Hoogenveen, Roel G.M. Breuls, Maiwenn Al *)

(* :Summary:
   CZM postprocessing routine calculates model results *)

(* :Copyright: © 2004 by Rudolf Hoogenveen/Roel Breuls *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM July 2004
		2.0 first release CZM 2005, version March
		3.0 version November 2005 
		3.1 version March 2007; storage of index values, new package CZMStoreResults *)

(* :Keywords: postprocessing, plots *)


BeginPackage["CZMPostProcessing`CZMCalcResults`",
	{"CZMInitialization`CZMLogFile`",
	"CZMInitialization`CZMConstants`",
	"CZMInitialization`CZMFunctions`", 
	"CZMImportData`CZMImportUserSelections`",
	"CZMImportData`CZMImportRiskFactors`",
	"CZMImportData`CZMImportDiseaseData`",
	"CZMImportData`CZMImportDALYs`",
	"CZMImportData`CZMImportCosts`",
	"CZMAdjustData`CZMMakeSelections`",
	"CZMAdjustData`CZMAdjustAfterSelection`",
	"CZMSimulation`CZMSimulationFunctions`",
	"CZMSimulation`CZMStoreResults`",
	"CZMPostProcessing`CZMExportUserSelections`",
	"Graphics`MultipleListPlot`"}]

mortnames::usage	= "list of disease names extended with other causes and all cause"
scenlist::usage		= "list of scenarios (from 1:nscen) for each user-defined scenario (1:nscen0)"

makeresdiff::usage	= "makeresdiff calculates result of scenarios (diff=0) or differences with baseline scenario (diff=1)"
makenpopagg::usage	= "makenpopagg aggregates model output population numbers unweighted (aggregating over list of scenarios)"
makenpopnonagg::usage	= "makenpopnonagg aggregates model output population numbers unweighted"
makenpop::usage		= "makenpop calculates model output population numbers weighted"
npopdiscount::usage	= "npopdiscount discounts calculated future population numbers"
makenrisk::usage	= "makenrisk aggregates model discrete risk factor class prevalence numbers"
makedist::usage		= "makedist aggregates model continuous risk factor distribution characteristics"
makendis::usage		= "makendis aggregates model disease prevalence numbers output"
makencosts::usage	= "makencosts calculates costs from calculated population and disease prevalence numbers"
ncostsdiscount::usage	= "ncostsdiscount discounts calculated future costs"

headingprint::usage	= "headingprint: prints text at level 0"
headingprint1::usage	= "headingprint1: prints text at level 1"
headingprint2::usage	= "headingprint2: prints text at level 2"
headingprint3::usage	= "headingprint3: prints text at level 3"
headingprintnb::usage	= "headingprintnb: prints text at level 0 in notebook"
headingprint1nb::usage	= "headingprint1nb: prints text at level 1 in notebook"
headingprint2nb::usage	= "headingprint2nb: prints text at level 2 in notebook"
headingprint3nb::usage	= "headingprint3nb: prints text at level 3 in notebook"

scenlist::usage		= "scenlist[scen]: list of random samples for each scenario"
scenname::usage		= "scenname: prints specification of scenario"
plotheading::usage	= "plotheading: prints 'simulation results'"
stdtextstyle::usage	= "standard text style"

nbout::usage		= "Notebook containing model results"

resjointmodelpopprev::usage = "resjointmodelpopprev[[scen,nstap,ng,nz1,na]]: results of joint deterministic population model"
resjointmodelageprev::usage = "resjointmodelageprev[[scen,nstap,ng,nz1,na]]: results of joint deterministic model stratified by age"
resjointmodelindprev::usage = "resjointmodelindprev[[scen,nstap,ng,nz1,na]]: results of joint deterministic model stratified by individuals"

makemultiplelistplot::usage = "makemultiplelistplot constructs multiplelistplots for variable number of lists"


Begin["`Private`"]


Print["CZMCalcResults package is evaluated"];
printtijd;

printbug[c_] := If[(bugind == 1), Print[{"CZMCalcResults", c}]];


(*-------------------------------------------------
	GENERAL PLOT ROUTINED
---------------------------------------------------*)

printbug["1."];

headingprint[text_] := Block[{},
				Print[];
				StylePrint[	text,
						FontFamily 	-> "Helvetica",
						FontSize 	-> 32,
						Background 	-> RGBColor[1, 1, 1],
						TextAlignment 	-> "Center",
			 			FontWeight 	-> "Bold"
					]
				];

headingprintnb[text_] := Cell[	text,
				"Title",
				FontFamily 	-> "Helvetica",
				FontSize 	-> 32,
				Background 	-> RGBColor[.6, .8, .8],
				TextAlignment 	-> "Center",
				FontWeight 	-> "Bold"
				];

headingprint1[text_] := Block[{},
				Print[];
				StylePrint[	text,
						FontFamily 	-> "Helvetica",
						FontSize 	-> 16, 
						Background 	-> RGBColor[0.6, 0.8, 0.8],
						FontWeight 	-> "Bold"
					]
				];

headingprint1nb[text_] := Cell[	text,
				"Subtitle",
				FontFamily 	-> "Helvetica",
				FontSize 	-> 16, 
				Background 	-> RGBColor[.6, .8, .8],
				FontWeight 	-> "Bold"
				];

headingprint2[text_] := Block[{},
				StylePrint[	"    "<> text,
						FontFamily 	-> "Helvetica", 
						FontSize 	-> 14,
						Background	-> None,
						FontWeight 	-> "Bold"
					]
				];

headingprint2nb[text_] := Cell[	text,
				"Section",
				FontFamily 	-> "Helvetica", 
				FontSize 	-> 14,
				Background	-> RGBColor[.6, .8, .8],
				FontWeight 	-> "Bold"
				];

headingprint3[text_] := Block[{},
				Print[];
				StylePrint[	"         "<> text,
						FontFamily 	-> "Helvetica", 
						FontSize 	-> 12,
						Background 	-> None,
						FontSlant 	-> "Italic"
					]
				];

headingprint3nb[text_] := Cell[	text,
				"Subsection",
				FontFamily 	-> "Helvetica", 
				FontSize 	-> 12,
				Background 	-> None,
				FontSlant 	-> "Italic"
				];

makemultiplelistplot[dat_, form_] :=

	Switch[Length[dat],

		1,	MultipleListPlot[dat[[1]], form],
		2,	MultipleListPlot[dat[[1]], dat[[2]], form],
		3,	MultipleListPlot[dat[[1]], dat[[2]], dat[[3]], form],
		4,	MultipleListPlot[dat[[1]], dat[[2]], dat[[3]], dat[[4]], form],
		5,	MultipleListPlot[dat[[1]], dat[[2]], dat[[3]], dat[[4]], dat[[5]], form],
		6,	MultipleListPlot[dat[[1]], dat[[2]], dat[[3]], dat[[4]], dat[[5]], dat[[6]], form],
		7,	MultipleListPlot[dat[[1]], dat[[2]], dat[[3]], dat[[4]], dat[[5]], dat[[6]], dat[[7]], form],
		8,	MultipleListPlot[dat[[1]], dat[[2]], dat[[3]], dat[[4]], dat[[5]], dat[[6]], dat[[7]], dat[[8]], form],
		9,	MultipleListPlot[dat[[1]], dat[[2]], dat[[3]], dat[[4]], dat[[5]], dat[[6]], dat[[7]], dat[[8]], dat[[9]], form]

		];
				

plotheading 	:= headingprint["simulation results"];

scenname[scen_, diffscen_] := "scenario " <> ToString[scen + diffscen] <> If[(diffscen == 1), " compared to baseline scenario"," "];
stdtextstyle 	= {FontFamily -> "Helvetica", FontSize -> 11};

mortnames	= Flatten[{disnames[[disind]], "other causes", "all cause"}];
scenlist	= Table[nscen0 (Range[ndrawinput] - 1) + scen, {scen, nscen0}];


(* --------------------------------------------------
	GENERAL ROUTINES OF CALCULATING OUTPUT NUMBERS
----------------------------------------------------*)

printbug["2."];

makeresdiff[plusnres_, diffscen_] := (*Block[{},*)

	If[(diffscen == 0),

		(* FOR BASELINE SCENARIO *)

		plusnres,

		(* DIFFERENCES WITH BASELINE SCENARIO *)

		Drop[plusnres, 1] - Table[plusnres[[1]], {nscen0 - 1}]]

	(*];*)


(* --------------------------------------------------
	GENERAL ROUTINES OF CALCULATING OUTPUT NUMBERS: TOTAL POPULATION NUMBERS (FORMAT)
----------------------------------------------------*)

(* POPULATION NUMBERS & RATES: AGGREGATED OVER AGE OR SPECIFIED BY AGE CLASS DIRECTLY ON MODEL RESULTS *)

printbug["2.1"];
			
makenpopnonagg[npop_, diffscen_] := Block[{},

	plusnpop = If[(agespecres <= 1),

			(* AGGREGATED OVER AGE *)

			Table[Plus@@Flatten[npop[[scen, n, g]]], {scen, nscen0}, {g, ng}, {n, nstap}],

			(* SPECIFIED BY AGE CLASS *)

			Table[aggregc[npop[[scen, n, g]], 1, 7], {scen, nscen0}, {g, ng}, {n, nstap}]];

	makeresdiff[plusnpop, diffscen]
	
	]; (* END MAKENPOPNONAGG *)

(* POPULATION NUMBERS & RATES: AGGREGATED OVER AGE OR SPECIFIED BY AGE CLASS INCLUDING AGGREGATING OVER LIST OF SCENARIOS *)

printbug["2.2"];

makenpopagg[npop_, diffscen_] := Block[{},

	plusnpop = If[(agespecres <= 1),

			(* AGGREGATED OVER AGE *)

			Table[Plus@@Flatten[npop[[scenlist[[scen]], n, g]]], {scen, nscen0}, {g, ng}, {n, nstap}],

			(* SPECIFIED BY AGE CLASS *)

			Table[aggregc[Plus@@npop[[scenlist[[scen]], n, g]], 1, 7], {scen, nscen0}, {g, ng}, {n, nstap}]

			] / ndrawinput;

	makeresdiff[plusnpop, diffscen]
		
	]; (* END MAKENPOPAGG *)

(* # DELETE 120406 JACK
(* --------------------------------------------------
	GENERAL ROUTINES OF CALCULATING OUTPUT NUMBERS: WEIGHTED TOTAL POPULATION NUMBERS
----------------------------------------------------*)

printbug["3."];

makenpop[result_, diffscen_] := Block[{},

	(* TOTAL POPULATION NUMBERS *)

printbug["3.1"];

	npop1 	= Table[Plus@@result[[1, scenlist[[scen]]]], {scen, nscen0}] / ndrawinput;

printbug["3.2"];

	(* DISCRETE RISK FACTOR CLASS PREVALENCE RATES *)

printbug["3.3"];

	prisk	= Table[Plus@@result[[2, scenlist[[scen]], n, r, g, ri]] / (Plus@@Flatten[result[[2, scenlist[[scen]], n, r, g]]] + eps),
			{scen, nscen0}, {n, nstap}, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}] / ndrawinput;

	(* CONTINUOUS RISK FACTOR DISTRIBUTION CHARACTERISTICS *)

printbug["3.4"];

	pcont	= Table[Plus@@result[[3, scenlist[[scen]], n, r, g, ri]] / (npop1[[scen, n, g]] + eps),
			{scen, nscen0}, {n, nstap}, {r, nrc}, {g, ng}, {ri, 2}] / ndrawinput;

	pcont	= Table[{vect1, pcont[[scen, n, r, g, 1]], pcont[[scen, n, r, g, 1]]^2 + pcont[[scen, n, r, g, 2]]},
			{scen, nscen0}, {n, nstap}, {r, nrc}, {g, ng}];

	(* DISEASE PREVALENCE RATES *)

printbug["3.5"];

	pdis	= Table[Plus@@result[[4, scenlist[[scen]], n, d, g]] / (Plus@@Flatten[result[[1, scenlist[[scen]], n, g]]] + eps),
			{scen, nscen0}, {n, nstap}, {d, nd}, {g, ng}];

printbug["3.6"];

	If[(disweighting > 0) && (heterogeneity == 1), 

		(* DISEASE PREVALENCE RATES IN JOINT RISK FACTOR CLASSES *)

		priskjoint = Table[Times@@Table[prisk[[scen, n, r, g, riskclass[[ri, r]]]], {r, nrd}],
					{scen, nscen0}, {n, nstap}, {g, ng}, {ri, Length[riskclass]}];

		RMrisk	= Table[meanaggreg[RRrisksel[[r, d, g, ri]]],
					{r, nrd}, {d, Length[RRrisksel[[r]]]}, {g, ng}, {ri, ncrsel[[r]]}];

		RMrisk	= Table[RMrisk[[r, d, g, ri]] / (Plus@@(RMrisk[[r, d, g]] prisk[[scen, n, r, g]]) + eps),
					{scen, nscen0}, {n, nstap}, {r, nrd}, {d, Length[RMrisk[[r]]]}, {g, ng}, {ri, ncrsel[[r]]}];

		RMcont	= Table[meanaggreg[RRcontsel[[r, d, g, ri]]],
					{r, nrc}, {d, Length[RRcontsel[[r]]]}, {g, ng}, {ri, 3}];

		RMcont	= Table[RMcont[[r, d, g, ri]] / (Plus@@(RMcont[[r, d, g]] pcont[[scen, n, r, g]]) + eps),
					{scen, nscen0}, {n, nstap}, {r, nrc}, {d, Length[RMcont[[r]]]}, {g, ng}, {ri, 3}];
		
		pdisjoint = Table[Times@@Table[RMrisk[[scen, n, r, RRriskindsel[[r, d + 1]], g, riskclass[[ri, r]]]], {r, nrd}] *
						pdis[[scen, n, d, g]],
					 {scen, nscen0}, {n, nstap}, {ri, Length[riskclass]}, {d, nd}, {g, ng}];

		];

printbug["3.7"];

	Switch[disweighting,

		(* DISEASE-FREE YEARS *)

		1,

		If[(heterogeneity == 0),

			Do[npop1[[scen, n]] *=
					Times@@(1 - pdis[[scen, n, Range[nd]]]), {scen, nscen0}, {n, nstap}],

			Do[npop1[[scen, n, g]] *=
					Plus@@Table[priskjoint[[scen, n, g, ri]] Times@@(1 - pdisjoint[[scen, n, ri, Range[nd], g]]),
						{ri, Length[riskclass]}],
					{scen, nscen0}, {n, nstap}, {g, ng}]

			];

		(* OTHER DISEASES INCLUDED *)

		Do[npop1[[scen, n]] *=
				(1 + otherdis (Times@@Table[1 - pdis0[[nondisind[[d]]]], {d, nd0 - nd}] Times@@(1 - nonmodelpdis0) - 1)),
				{scen, nscen0}, {n, nstap}],
		
		(* PROPORTIONAL DALY WEIGHTING *)

		2,

		If[(heterogeneity == 0),

			Do[npop1[[scen, n]] *=
					Times@@Table[1 - DALYwgt0[[disind[[d]]]] pdis[[scen, n, d]], {d, nd}],
					{scen, nscen0}, {n, nstap}],

			Do[npop1[[scen, n, g]] *=
					Plus@@Table[
						priskjoint[[scen, n, g, ri]] *
						Times@@Table[1 - DALYwgt0[[disind[[d]], g]] pdisjoint[[scen, n, ri, d, g]], {d, nd}],
						{ri, Length[riskclass]}],
					{scen, nscen0}, {n, nstap}, {g, ng}]

			];

		(* OTHER DISEASES INCLUDED *)

		Do[npop1[[scen, n]] *=
				(1 + otherdis *
					(Times@@Table[1 - DALYwgt0[[nondisind[[d]]]] pdis0[[nondisind[[d]]]], {d, nd0 - nd}] *
					Times@@(1 - nonmodelDALYwgt0 nonmodelpdis0) - 1)),
				{scen, nscen0}, {n, nstap}],
					
		(* ADDITIVE DALY WEIGHTING *)

		3,

		Do[npop1[[scen, n]] *=
				(1 - 	Plus@@Table[DALYwgt0[[disind[[d]]]] pdis[[scen, n, d]], {d, nd}] -
					otherdis Plus@@Table[DALYwgt0[[nondisind[[d]]]] pdis0[[nondisind[[d]]]], {d, nd0 - nd}] -
					otherdis Plus@@(nonmodelDALYwgt0 nonmodelpdis0)),
				{scen, nscen0}, {n, nstap}],

		(* WORST DISEASE DALY WEIGHTING *)

		4,

		If[(otherdis == 0),

			(* ONLY MODELED DISEASES INCLUDED *)

			seq	= Ordering[Table[Plus@@Flatten[DALYwgtsel[[d]]], {d, nd}]];

			If[(heterogeneity == 0),

				Do[npop1[[scen, n]] *=
						(1 - 
						Plus@@Table[DALYwgt0[[disind[[seq[[d]]]]]] pdis[[scen, n, seq[[d]]]] *
									Times@@(1 - pdis[[scen, n, Range[seq[[d]] - 1]]]),
								{d, nd}]),
						{scen, nscen0}, {n, nstap}],

				
				Do[npop1[[scen, n, g]] *=
						Plus@@Table[
							priskjoint[[scen, n, g, ri]] *
							(1 -
							Plus@@Table[DALYwgt0[[disind[[seq[[d]]]], g]] *
										pdisjoint[[scen, n, ri, seq[[d]], g]] *
										Times@@(1 - pdisjoint[[scen, n, ri, Range[seq[[d]] - 1], g]]),
									{d, nd}]),
							{ri, Length[riskclass]}],
						{scen, nscen0}, {n, nstap}, {g, ng}]

				],

			(* ALSO NON-MODELED DISEASES INCLUDED *)

			seq = Ordering[Join[Table[Plus@@Flatten[DALYwgt0[[d]]], {d, nd0}],
						Table[Plus@@Flatten[nonmodelDALYwgt0[[d]]], {d, ndoth}]]];

			If[(heterogeneity == 0),

				(* HOMOGENEOUS POPULATION *)

				hpdis = Table[If[(seq[[d]] <= nd0),
							If[(disindinv[[seq[[d]]]] > 0),
								pdis[[Range[nscen], Range[nstap], disindinv[[seq[[d]]]]]],
								Table[pdis0[[seq[[d]]]], {nscen0}, {nstap}]
								],
							Table[nonmodelpdis0[[seq[[d]] - nd0]], {nscen0}, {nstap}]
							],
						{d, nd0 + ndoth}];

				Do[npop1[[scen, n]] *=
						(1 -
						Plus@@Table[DALYwgtall[[seq[[d]]]] hpdis[[d, scen, n]] *
									Times@@(1 - hpdis[[Range[d - 1], scen, n]]),
								{d, nd0 + ndoth}]),
						{scen, nscen0}, {n, nstap}],

				(* HETEROGENEOUS POPULATION *)

				hpdis = Table[If[(seq[[d]] <= nd0),
						If[(disindinv[[seq[[d]]]] > 0),
							Table[pdisjoint[[scen, n, ri, disindinv[[seq[[d]]]]]],
								{scen, nscen0}, {n, nstap}, {ri, Length[riskclass]}],
							Table[pdis0[[seq[[d]]]], {nscen0}, {nstap}, {Length[riskclass]}]
							],
						Table[nonmodelpdis0[[seq[[d]] - nd0]], {nscen0}, {nstap}, {Length[riskclass]}]
						],
						{d, nd0 + ndoth}];

				Do[npop1[[scen, n, g]] *=
						Plus@@Table[
							priskjoint[[scen, n, g, ri]] *
							(1 -
							Plus@@Table[DALYwgtall[[seq[[d]], g]] hpdis[[d, scen, n, ri, g]] *
										Times@@(1 - hpdis[[Range[d - 1], scen, n, ri, g]]),
									{d, nd0 + ndoth}]),
							{ri, Length[riskclass]}],
						{scen, nscen0}, {n, nstap}, {g, ng}]

				]

			]

		];

printbug["3.8"];

	makenpopnonagg[npop1, diffscen]
			
	]; (* END MAKENPOP *)
# *)

(* # NEW #*)

(* --------------------------------------------------
	GENERAL ROUTINES OF CALCULATING OUTPUT NUMBERS: TOTAL POPULATION NUMBERS
----------------------------------------------------*)

printbug["3."];

makenpop[result_, diffscen_] := Block[{},

	(* TOTAL POPULATION NUMBERS *)

	npop1 	= Table[Plus@@result[[1, scenlist[[scen]]]], {scen, nscen0}] / ndrawinput;

	makenpopnonagg[npop1, diffscen]
			
	]; (* END MAKENPOP *)

(* --------------------------------------------------
	GENERAL ROUTINES OF CALCULATING OUTPUT NUMBERS: DISCOUNTING WEIGHTED FUTURE TOTAL POPULATION NUMBERS
----------------------------------------------------*)

printbug["4."];

npopdiscount[npop_, diffscen_, discount_, standardnpop_] := Block[{},

	npop1 = npop;

	(* ONLY REFERENCE SCENARIO *)

printbug["4.1"];

	If[(diffscen == 0), npop1 = npop1[[{1}]]];

	(* STANDARDIZED TO INITIAL POPULATION SIZE 1 *)

printbug["4.2"];

	If[(standardized == 1),
		npop1 = Table[npop1[[scen, g, n]] / standardnpop[[scen, g]], {scen, Length[npop1]}, {g, ng}, {n, nstap}]];

	(* FUTURE NUMBERS DISCOUNTED *)

printbug["4.3"];

	If[(discount > eps),
		npop1 = Table[npop1[[scen, g, n]] / (1 + discount)^(n - 1), {scen, Length[npop1]}, {g, ng}, {n, nstap}]];

	(* CUMULATIVE *)

printbug["4.4"];

	If[(cumulative == 1),
		npop1 = Table[Plus@@npop1[[scen, g, Range[n]]], {scen, Length[npop1]}, {g, ng}, {n, nstap}]];

	npop1

	]; (* END NPOPDISCOUNT *)


(* --------------------------------------------------
	GENERAL ROUTINES OF CALCULATING OUTPUT NUMBERS: RISK FACTOR CLASS PREVALENCE NUMBERS
----------------------------------------------------*)

printbug["5."];

(* (DISCRETE) RISK FACTOR CLASS RATES AND NUMBERS: AGGREGATED OVER AGE OR SPECIFIED BY AGE CLASS,
FOR BASELINE SCENARIO OR DIFFERENCES WITH BASELINE SCENARIO *)

makenrisk[nrisk_, diffscen_] := Block[{},

	plusnrisk = If[(agespecres <= 1),
	
			(* AGGREGATED OVER AGE *)

			Table[Plus@@Flatten[nrisk[[scenlist[[scen]], n, r, g, ri]]],
				{scen, nscen0}, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}, {n, nstap}],

			(* SPECIFIED BY AGE CLASS *)
			
			Table[aggregc[Plus@@nrisk[[scenlist[[scen]], n, r, g, ri]], 1, 7],
				{scen, nscen0}, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}, {n, nstap}]

			] / ndrawinput;

	makeresdiff[plusnrisk, diffscen]

	]; (* END MAKENRISK *)

(* (CONTINUOUS) RISK FACTOR CLASS RATES AND NUMBERS: AGGREGATED OVER AGE OR SPECIFIED BY AGE CLASS,
FOR BASELINE SCENARIO OR DIFFERENCES WITH BASELINE SCENARIO *)

makedist[dist_, diffscen_] := Block[{},

	plusdist = If[(agespecres <= 1),

			(* AGGREGATED OVER AGE *)

			Table[Plus@@Flatten[dist[[scenlist[[scen]], n, r, g, ri]]],
				{scen, nscen0}, {r, nrc}, {g, ng}, {ri, 2}, {n, nstap}],

			(* SPECIFIED BY AGE CLASS *)

			Table[aggregc[Plus@@dist[[scenlist[[scen]], n, r, g, ri]], 1, 7],
				{scen, nscen0}, {r, nrc}, {g, ng}, {ri, 2}, {n, nstap}]

			] / ndrawinput;

	makeresdiff[plusdist, diffscen]

	]; (* END MAKEDIST *)

(* --------------------------------------------------
	GENERAL ROUTINES OF CALCULATING OUTPUT NUMBERS: DISEASE (PREVALENCE, INCIDENCE AND MORTALITY) NUMBERS AND RATES
----------------------------------------------------*)

printbug["6."];

(* DISEASE RATES & NUMBERS: AGGREGATED OVER AGE OR SPECIFIED BY AGE CLASS, FOR BASELINE SCENARIO OR DIFFERENCES WITH BASELINE SCENARIO *)

makendis[ndis_, diffscen_] := Block[{},

	plusndis = If[(agespecres <= 1),

			(* AGGREGATED OVER AGE *)

			Table[Plus@@Flatten[ndis[[scenlist[[scen]], n, d, g]]],
					{scen, nscen0}, {d, Length[ndis[[1, 1]]]}, {g, ng}, {n, nstap}],

			(* SPECIFIED BY AGE CLASS *)

			Table[aggregc[Plus@@ndis[[scenlist[[scen]], n, d, g]], 1, 7],
					{scen, nscen0}, {d, Length[ndis[[1, 1]]]}, {g, ng}, {n, nstap}]

			] / ndrawinput;

	makeresdiff[plusndis, diffscen]

	]; (* END MAKENDIS *)


(* --------------------------------------------------
	GENERAL ROUTINES OF CALCULATING OUTPUT NUMBERS: COSTS
----------------------------------------------------*)

printbug["7."];

makencosts[resmodel_] := Block[{},

	ncosts 	= Table[Join[	Table[costspatient0[[disind[[d]], g]] Plus@@resmodel[[4, scenlist[[scen]], n, d, g]], {d, nd}],
				{otherdis meanaggreg[costspersonothsel[[g]]] Plus@@resmodel[[1, scenlist[[scen]], n, g]]}],
			{scen, nscen0}, {g, ng}, {n, nstap}] / ndrawinput;

	Transpose[Table[Join[ncosts[[scen, g, n]], {Plus@@ncosts[[scen, g, n]]}], {scen, nscen0}, {g, ng}, {n, nstap}], {1, 3, 4, 2, 5}]

	]; (* END MAKENCOSTS *)


(* --------------------------------------------------
	GENERAL ROUTINES OF CALCULATING OUTPUT NUMBERS: DISCOUNTING FUTURE COSTS
----------------------------------------------------*)

printbug["7.1"];

ncostsdiscount[ncosts_, discount_, standardnpop_] := Block[{},

	ncosts1 = ncosts;

	(* STANDARDIZED TO INITIAL POPULATION SIZE 1 *)

	If[(standardized == 1),
		ncosts1 = Table[ncosts1[[scen, d, g, n]] / standardnpop[[scen, g]],
				{scen, nscen0}, {d, nd + 2}, {g, ng}, {n, nstap}]];

	(* FUTURE NUMBERS DISCOUNTED *)

	If[(discount > eps),
		ncosts1 = Table[ncosts1[[scen, d, g, n]] / (1 + discount)^(n - 1),
				{scen, nscen0}, {d, nd + 2}, {g, ng}, {n, nstap}]];

	(* CUMULATIVE *)

	If[(cumulative == 1),
		ncosts1 = Table[Plus@@ncosts1[[scen, d, g, Range[n]]], {scen, nscen0}, {d, nd + 2}, {g, ng}, {n, nstap}]];

	ncosts1

	];
	

(* --------------------------------------------------
		Notebook containing model results
----------------------------------------------------*)

If[(outputnotebook == 1), nbout = NotebookCreate[]];


(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];

End[]


Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMPresentResults *)

(* :Context: CZMPostProcessing` *)

(* :Author: Rudolf T. Hoogenveen, Roel G.M. Breuls *)

(* :Summary:
   CZM postprocessing routine presents results *)

(* :Copyright: © 2004 by Rudolf Hoogenveen/Roel Breuls *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM July 2004
		2.0 first release CZM 2005, version March
		3.1 version March 2007, storage of indexvalues, new packages CZMStoreResults *)

(* :Keywords: postprocessing, plots *)


BeginPackage["CZMPostProcessing`CZMPresentResults`",
	{"CZMMain`CZMMain`",
	"CZMInitialization`CZMLogFile`",
	"CZMInitialization`CZMDefaultFileNames`",
	"CZMInitialization`CZMConstants`",
	"CZMInitialization`CZMFunctions`", 
	"CZMImportData`CZMImportUserSelections`",
	"CZMImportData`CZMImportDiseaseData`",
	"CZMImportData`CZMImportDALYs`",
	"CZMImportData`CZMImportCosts`",
	"CZMAdjustData`CZMMakeSelections`",
	"CZMAdjustData`CZMAdjustAfterSelection`",
	"CZMSimulation`CZMSimulationFunctions`",
	"CZMSimulation`CZMSimulationMarginalModelDetermPop`",
	"CZMSimulation`CZMSimulationJointModelDetermPop`",
	"CZMSimulation`CZMSimulationJointModelDetermAge`",
	"CZMSimulation`CZMSimulationJointModelStochInd`",
	"CZMSimulation`CZMStoreResults`",
	"CZMPostProcessing`CZMExportUserSelections`",
	"CZMPostProcessing`CZMCalcResults`",
	"Graphics`Legend`",
	"Graphics`MultipleListPlot`",
	"Graphics`FilledPlot`"}]

Begin["`Private`"]

Print["CZMPresentResults package is evaluated"];
printtijd;

printbug[c_] := If[(bugind == 1), Print[{"CZMPresentResults", c}]];

printbug["1."];

imagesize	= 240;
stdaxislabel 	= {"time", ""};
stdagecolor1	= Table[{RGBColor[(ai - 1) / (nac[[7]] - 1), 0, 1 - (ai - 1) / (nac[[7]] - 1)]}, {ai, nac[[7]]}];
stdagecolor2	= Join[	{{{Axis, 1}, RGBColor[0, 0, 1]}},
			Table[{{ai, ai + 1}, RGBColor[ai / (nac[[7]] - 1), 0, 1 - ai / (nac[[7]] - 1)]}, {ai, nac[[7]] - 1}]
			];
stdmodelcolor	= Table[{RGBColor[m / Plus@@modelsel, 0, 1 - m / Plus@@modelsel]}, {m, 0, Plus@@modelsel - 1}];

stdriskcolor[r_] := Join[{{{Axis, 1}, RGBColor[0, 1, 0]}},
			Table[{{ri, ri + 1}, RGBColor[ri / (ncrsel[[r]] - 1), 1 - ri / (ncrsel[[r]] - 1), 0]},
				{ri, ncrsel[[r]] - 1}]
			];
stdagelegend	= Table["age" <> ToString[initageclass[[7, ai]]] <> "+", {ai, nac[[7]]}];
stdmodellegend	= Table["model" <> ToString[m], {m, Plus@@modelsel}];

stdlabel[r_, ri_] := risknames[[riskindd]][[r]] <> "class " <> ToString[ri];
stdlabelc[r_, ri_] := risknames[[riskindc]][[r]] <> "parameter " <> ToString[ri];
basescenstr 	= " for baseline scenario";
compscenstr 	= " differences with baseline scenario";
ratesstr	= {" absolute numbers "," rates "}[[rates + 1]];

plotset1	= {	DisplayFunction -> Identity, 
			PlotJoined 	-> True,  
			TextStyle 	-> stdtextstyle,
			AxesLabel 	-> stdaxislabel,
			PlotRange	-> All};

plotset2	= {	DisplayFunction -> Identity,
			SymbolShape 	-> None,
			LegendPosition 	-> {-.8, .0},
			LegendSize 	-> {.65, .5},
			PlotJoined 	-> True,
			TextStyle 	-> stdtextstyle,
			AxesLabel 	-> stdaxislabel,
			PlotRange	-> All};

plotset3	= {	PlotRange	-> All,
			DisplayFunction -> Identity,
			TextStyle 	-> stdtextstyle,
			AxesLabel 	-> stdaxislabel,
			PlotRange 	-> All};
										

(*-------------------------------------------------
	PLOTS TOTAL POPULATION NUMBERS & TIME SINCE SMOKING CESSATION
---------------------------------------------------*)

printbug["2."];

(* WRITE TO SCREEN *)

plotpop[respop_, naam_, diffscen_] := Block[{},
	headingprint1[naam];
	Table[Show[
		headingprint3["gender: " <> gennames[[g]]];
	    	GraphicsArray[Table[
			If[(agespecres <= 1),

				(* NUMBERS AGGREGATED OVER AGE *)

				ListPlot[respop[[scen, g]],
					plotset1,
					PlotLabel 	-> scenname[scen, diffscen]],

			If[(agespecres == 2),

				(* NUMBERS SPECIFIED BY AGE CLASS, NOT STACKED *)

				makemultiplelistplot[Table[respop[[scen, g, Range[nstap], ai]], {ai, nac[[7]]}],
					{plotset2,
					PlotStyle 	-> stdagecolor1,
					PlotLegend 	-> stdagelegend,
					PlotLabel 	-> scenname[scen, diffscen]}],

			If[(agespecres == 3),

				(* NUMBERS SPECIFIED BY AGE CLASS, STACKED *)

				respop1 = Table[Plus@@respop[[scen, g, n, Range[ai]]], {ai, nac[[7]]}, {n, nstap}];
				frespop[x_] := Table[respop1[[ai, Round[x]]], {ai, nac[[7]]}];
				FilledPlot[frespop[x], {x, nstap},
					plotset3,
					PlotLabel 	-> scenname[scen, diffscen],
					Fills 		-> stdagecolor2]
				]]],
		     	{scen, Length[respop]}]],
		ImageSize 	-> Min[{nscen imagesize, 900}],
		DisplayFunction :> $DisplayFunction,
		Background 	-> RGBColor[1, 1, 1]
		],
	{g, ng}]
	];

(* WRITE TO NOTEBOOK *)

plotpopnb[respop_, naam_, diffscen_] := 
	{
	headingprint2nb[naam <> If[(diffscen == 0), basescenstr, compscenstr]],
	Table[	{
		headingprint3nb["gender: " <> gennames[[g]]],
	    	Cell[	GraphicsData[
				"PostScript",
				DisplayString[
					GraphicsArray[
						Table[	If[(agespecres <= 1),

								(* NUMBERS AGGREGATED OVER AGE *)

								ListPlot[respop[[scen, g]],
									plotset1,
									PlotLabel 	-> scenname[scen, diffscen], 
									PlotStyle 	-> {Thickness[.02]}],

							If[(agespecres == 2),

								(* NUMBERS SPECIFIED BY AGE CLASS, NOT STACKED *)

								makemultiplelistplot[Table[respop[[scen, g, Range[nstap], ai]],
														{ai, nac[[7]]}],
									{plotset2,
									PlotStyle 	-> stdagecolor1,
									PlotLegend 	-> stdagelegend,
									PlotLabel 	-> scenname[scen, diffscen]}],

							If[(agespecres == 3),

								(* NUMBERS SPECIFIED BY AGE CLASS, STACKED *)

								respop1 = Table[Plus@@respop[[scen, g, n, Range[ai]]],
										{ai, nac[[7]]}, {n , nstap}];
								frespop[x_] := Table[respop1[[ai, Round[x]]], {ai, nac[[7]]}];
								FilledPlot[frespop[x], {x, nstap},
									plotset3,
									PlotLabel 	-> scenname[scen, diffscen],
									Fills 		-> stdagecolor2]
								]]],
						     	{scen, Length[respop]}]
						]
					]
				],
			"Subsection",
			ImageSize -> Min[{nscen imagesize, 900}]
			
			]
		},
	{g, ng}]
	};

(* WRITE TO NOTEBOOK, RESULTS FOR SEVERAL CZM MODEL VERSIONS SIMULTANEOUSLY *)

plotpopnb1[respop_, naam_, diffscen_] := 
	{
	headingprint2nb[naam <> If[(diffscen == 0), basescenstr, compscenstr]],
	Table[	{
		headingprint3nb["gender: " <> gennames[[g]]],
	    	Cell[	GraphicsData[
				"PostScript",
				DisplayString[
					GraphicsArray[
						Table[	If[(agespecres <= 1),

								(* NUMBERS AGGREGATED OVER AGE *)

								makemultiplelistplot[Table[respop[[m, scen, g]], {m, Length[respop]}],
									{plotset2,
									PlotLegend 	-> stdmodellegend,
									PlotLabel 	-> scenname[scen, diffscen], 
									PlotJoined 	-> True, 
									PlotStyle 	-> stdmodelcolor}]

							],
						     	{scen, Length[respop[[1]]]}]
						]
					]
				],
			"Subsection",
			ImageSize -> Min[{nscen imagesize, 900}]
			
			]
		},
	{g, ng}]
	};


(*-------------------------------------------------
	PLOTS (DISCRETE) RISK FACTOR CLASS PREVALENCE NUMBERS AND RATES
---------------------------------------------------*)

printbug["2.1"];

(* WRITE TO SCREEN *)

plotrisk[resrisk_, naam_, diffscen_]:= Block[{},
	headingprint1[naam];
	Table[	headingprint2[scenname[scen, diffscen]],
		Table[	
			headingprint3["gender " <> gennames[[g]]];
			If[(agespecres == 1),

				(*TOTAL NUMBERS, SPECIFICATION BY RISK FACTOR CLASSES STACKED *)

				Show[GraphicsArray[Table[
					resrisk1 = Table[Plus@@resrisk[[scen, r, g, Range[ri]]], {ri, ncrsel[[r]]}];
					fresrisk[x_] := Table[resrisk1[[ri, Round[x]]], {ri, ncrsel[[r]]}];
					FilledPlot[fresrisk[x], {x, nstap},
						plotset3,
						PlotLabel 	-> risknames[[riskindd]][[r]],
						Fills 		-> stdriskcolor[r]],						
						{r, nrd}]],
					ImageSize 	-> Min[{nrd imagesize, 900}],
					DisplayFunction :> $DisplayFunction, 
					Background 	-> RGBColor[1, 1, 1]
					],

				Table[Show[GraphicsArray[Table[
					Switch[agespecres,
						0,

						(* TOTAL NUMBERS FOR EACH RISK FACTOR CLASS *)

						ListPlot[resrisk[[scen, r, g, ri]],
							plotset1,
							PlotLabel 	-> stdlabel[r, ri]],
						2,

						(* NUMBERS BY AGE CLASS FOR EACH RISK FACTOR CLASS, NOT STACKED *)

			     			makemultiplelistplot[Table[resrisk[[scen, r, g, ri, Range[nstap], ai]], {ai, nac[[7]]}],
							{plotset2,
              						PlotStyle 	-> stdagecolor1,
							PlotLegend 	-> stdagelegend,
							PlotLabel 	-> stdlabel[r, ri]}],
						3,

						(* NUMBERS BY AGE CLASS FOR EACH RISK FACTOR CLASS, STACKED *)

						resrisk1 = Table[Plus@@resrisk[[scen, r, g, ri, n, Range[ai]]],
								{ai, nac[[7]]}, {n, nstap}];
						fresrisk[x_] := Table[resrisk1[[ai, Round[x]]], {ai, nac[[7]]}];
						FilledPlot[fresrisk[x], {x, nstap},
							plotset3,
							PlotLabel 	-> stdlabel[r, ri],
							Fills 		-> stdagecolor2]
						],
						{ri, ncrsel[[r]]}]],
					ImageSize 	-> Min[{ncrsel[[r]] imagesize, 900}],
					DisplayFunction :> $DisplayFunction, 
					Background 	-> RGBColor[1, 1, 1]
					],
					{r, nrd}]
				],
		{g, ng}], 
	{scen, Length[resrisk]}]
	];

(* WRITE TO NOTEBOOK *)

plotrisknb[resrisk_, naam_, diffscen_]:= 
	{
	headingprint2nb[naam <> If[(diffscen == 0), basescenstr, compscenstr]],
	Table[	{
		headingprint3nb[scenname[scen, diffscen] <> " gender " <> gennames[[g]]],
		Switch[agespecres,
			0,

			(* TOTAL NUMBERS FOR EACH RISK FACTOR CLASS *)

			Table[	Cell[	GraphicsData[
						"PostScript",
						DisplayString[
							GraphicsArray[
								Table[	ListPlot[resrisk[[scen, r, g, rj]],
										plotset1,
										PlotLabel 	-> stdlabel[r, rj], 
										AxesLabel 	-> stdaxislabel],
									{rj, 4 ri + 1, Min[{4 ri + 4, ncrsel[[r]]}]}]
								]
							]
						],
					"Subsection",
					ImageSize -> Min[{(Min[{4 ri + 4, ncrsel[[r]]}] - 4 ri) imagesize, 900}]
					],
				{r, nrd}, {ri, 0, Floor[(ncrsel[[r]] - 1) / 4]}],

			1,

			(*TOTAL NUMBERS, SPECIFICATION BY RISK FACTOR CLASSES STACKED *)

			Cell[	GraphicsData[
						"PostScript",
						DisplayString[
							GraphicsArray[
								Table[	resrisk1 = Table[Plus@@resrisk[[scen, r, g, Range[ri], n]],
											{ri, ncrsel[[r]]}, {n, nstap}];
									fresrisk[x_] := Table[resrisk1[[ri, Round[x]]],
											{ri, ncrsel[[r]]}];
									FilledPlot[fresrisk[x], {x, nstap},
										plotset3,
										PlotLabel 	-> risknames[[riskindd]][[r]],
										Fills 		-> stdriskcolor[r]],
									{r, nrd}]
								]
							]
						],
					"Subsection",
					ImageSize -> Min[{nrd imagesize, 900}]
				],

			2,

			(* NUMBERS BY AGE CLASS FOR EACH RISK FACTOR CLASS, NOT STACKED *)

			Table[	Cell[	GraphicsData[
						"PostScript",
						DisplayString[
							GraphicsArray[
								Table[	makemultiplelistplot[Table[resrisk[[scen, r, g, ri, Range[nstap], ai]],
												{ai, nac[[7]]}], 
										{plotset2,
			              						PlotStyle 	-> stdagecolor1,
										PlotLegend 	-> stdagelegend,
										PlotLabel 	-> stdlabel[r, ri]}],
									{ri, ncrsel[[r]]}]
								]
							]
						],
					"Subsection",
					ImageSize -> Min[{ncrsel[[r]] imagesize, 900}]
					],
				{r, nrd}],

			3,

			(* NUMBERS BY AGE CLASS FOR EACH RISK FACTOR CLASS, STACKED *)

			Table[	Cell[	GraphicsData[
						"PostScript",
						DisplayString[
							GraphicsArray[
								Table[	resrisk1 = Table[Plus@@resrisk[[scen, r, g, rj, n, Range[ai]]],
												{ai, nac[[7]]}, {n, nstap}];
									fresrisk[x_] := Table[resrisk1[[ai, Round[x]]],
												{ai, nac[[7]]}];
									FilledPlot[fresrisk[x], {x, nstap},
											plotset3,
											PlotLabel 	-> stdlabel[r, rj],
											Fills 		-> stdagecolor2],												{rj, 4 ri + 1, Min[{4 ri + 4, ncrsel[[r]]}]}]
								]
							]
						],
					"Subsection",
					ImageSize -> Min[{(Min[{4 ri + 4, ncrsel[[r]]}] - 4 ri) imagesize, 900}]
					],
				{r, nrd}, {ri, 0, Floor[(ncrsel[[r]] - 1) / 4]}]
			]
		},
	{scen, Length[resrisk]}, {g, ng}]
	};

(* WRITE TO NOTEBOOK, RESULTS FOR SEVERAL CZM MODEL VERSIONS SIMULTANEOUSLY *)

plotrisknb1[resrisk_, naam_, diffscen_]:= 
	{
	headingprint2nb[naam <> If[(diffscen == 0), basescenstr, compscenstr]],
	Table[	{
		headingprint3nb[scenname[scen, diffscen] <> " gender " <> gennames[[g]]],
		Switch[agespecres,
			0,

			(* TOTAL NUMBERS FOR EACH RISK FACTOR CLASS *)

			Table[	Cell[	GraphicsData[
						"PostScript",
						DisplayString[
							GraphicsArray[
								Table[	makemultiplelistplot[Table[resrisk[[m, scen, r, g, rj]],
												{m, Length[resrisk]}],
										{plotset2,
										PlotLegend 	-> stdmodellegend,
										PlotLabel 	-> stdlabel[r, rj], 
										PlotStyle 	-> stdmodelcolor}],
									{rj, 4 ri + 1, Min[{4 ri + 4, ncrsel[[r]]}]}]
								]
							]
						],
					"Subsection",
					ImageSize -> Min[{(Min[{4 ri + 4, ncrsel[[r]]}] - 4 ri) imagesize, 900}]
					],
				{r, nrd}, {ri, 0, Floor[(ncrsel[[r]] - 1) / 4]}],

			1,

			_,

			2,

			_,

			3,

			_]
		},
	{scen, Length[resrisk[[1]]]}, {g, ng}]
	};


(*-------------------------------------------------
	PLOTS (CONTINUOUS) RISK FACTOR DISTRIBUTION CHARACTERISTICS
---------------------------------------------------*)

printbug["2.2"];

(* WRITE TO NOTEBOOK *)

plotdistnb[resdist_, naam_, diffscen_]:= 
	{
	headingprint2nb[naam <> If[(diffscen == 0), basescenstr, compscenstr]],
	Table[	{
		headingprint3nb[scenname[scen, diffscen] <> " gender " <> gennames[[g]]],
		If[(agespecres <= 1),
			
			(* TOTAL NUMBERS FOR EACH CHARACTERISTIC *)

			Table[	Cell[	GraphicsData[
						"PostScript",
						DisplayString[
							GraphicsArray[
								Table[	ListPlot[resdist[[scen, r, g, ri]],
										plotset1,
										PlotLabel 	-> stdlabelc[r, ri]],
									{ri, 2}]
								]
							]
						],
					"Subsection",
					ImageSize -> Min[{2 imagesize, 900}]
					],
				{r, nrc}],

			(* NUMBERS BY AGE CLASS FOR EACH RISK FACTOR CLASS, NOT STACKED *)

			Table[	Cell[	GraphicsData[
						"PostScript",
						DisplayString[
							GraphicsArray[
								Table[makemultiplelistplot[Table[resdist[[scen, r, g, ri, Range[nstap], ai]],
												{ai, nac[[7]]}], 
										{plotset2,
			              						PlotStyle 	-> stdagecolor1,
										PlotLegend 	-> stdagelegend,
										PlotLabel 	-> stdlabelc[r, ri]}],
									{ri, 2}]
								]
							]
						],
					"Subsection",
					ImageSize -> Min[{2 imagesize, 900}]
					],
				{r, nrc}]

			]
		},
	{scen, Length[resdist]}, {g, ng}]
	};

(*-------------------------------------------------
	PLOTS DISEASE PREVALENCE NUMBERS AND RATES
---------------------------------------------------*)

printbug["2.3"];

(* WRITE TO SCREEN *)

plotdis[resdis_, naam_, diffscen_]:= Block[{},
	nd1 = Length[resdis[[1]]];
	headingprint1[naam];
	Table[
		headingprint2[scenname[scen, diffscen]];
		Table[
			headingprint3["gender " <> gennames[[g]]];
			Table[Show[
    				GraphicsArray[Table[
					If[(agespecres <= 1),

						(* NUMBERS AGGREGATED OVER AGE *)

						ListPlot[resdis[[scen, dj, g]],
							plotset1,
							PlotLabel 	-> mortnames[[dj]]],

					If[(agespecres == 2),

						(* NUMBERS BY AGE CLASS, NOT STACKED *)

						makemultiplelistplot[Table[resdis[[scen, dj, g, Range[nstap], ai]], {ai, nac[[7]]}],
							{plotset2,
							PlotStyle 	-> stdagecolor1,
				 			PlotLegend 	-> stdagelegend,
							PlotLabel 	-> mortnames[[dj]]}],

					If[(agespecres == 3),

						(* NUMBERS BY AGE CLASS, STACKED *)

						resdis1 = Table[Plus@@resdis[[scen, dj, g, n, Range[ai]]], {ai, nac[[7]]}, {n, nstap}];
						fresdis[x_] := Table[resdis1[[ai, Round[x]]], {ai, nac[[7]]}];
						FilledPlot[fresdis[x], {x, nstap},
							plotset3,
							PlotLabel 	-> mortnames[[dj]],
							Fills 		-> stdagecolor2]
					]]],
		     			{dj, 4 di + 1, Min[{4 di + 4, nd1}]}]],
				ImageSize 	-> (Min[{4 di + 4, nd1}] - 4 di) imagesize, 
				DisplayFunction :> $DisplayFunction,
				Background 	-> RGBColor[1, 1, 1]
				], 	
			{di, 0, Floor[(nd1 - 1) / 4]}],
		{g, ng}], 
	{scen, Length[resdis]}]
	];

(* WRITE TO NOTEBOOK *)

plotdisnb[resdis_, naam_, diffscen_]:= Block[{},
	nd1 = Length[resdis[[1]]];
	{
	headingprint2nb[naam <> If[(diffscen == 0), basescenstr, compscenstr]],
	Table[	{
		headingprint3nb[scenname[scen, diffscen] <> " gender " <> gennames[[g]]],
		Table[	Cell[	GraphicsData[
					"PostScript",
					DisplayString[
   						GraphicsArray[
							Table[
								If[(agespecres <= 1),

									(* NUMBERS AGGREGATED OVER AGE *)

									ListPlot[resdis[[scen, dj, g]],
										plotset1,
										PlotLabel 	-> mortnames[[dj]]],

								If[(agespecres == 2),

									(* NUMBERS BY AGE CLASS, NOT STACKED *)

									makemultiplelistplot[Table[resdis[[scen, dj, g, Range[nstap], ai]],
												{ai, nac[[7]]}],
										{plotset2,
										PlotStyle 	-> stdagecolor1,
		 								PlotLegend 	-> stdagelegend,
										PlotLabel 	-> mortnames[[dj]]}],

								If[(agespecres == 3),

									(* NUMBERS BY AGE CLASS, STACKED *)

									resdis1 = Table[Plus@@resdis[[scen, dj, g, n, Range[ai]]], 
												{ai, nac[[7]]}, {n, nstap}];
									fresdis[x_] := Table[resdis1[[ai, Round[x]]], {ai, nac[[7]]}];
									FilledPlot[fresdis[x], {x, nstap},
										plotset3,
										PlotLabel 	-> mortnames[[dj]],
										Fills 		-> stdagecolor2]
								]]],
     								{dj, 4 di + 1, Min[{4 di + 4, nd1}]}]
								]
							]
						],
				"Subsection",
				ImageSize -> Min[{(Min[{4 di + 4, nd1}] - 4 di) imagesize, 900}]
				],
			{di, 0, Floor[(nd1 - 1) / 4]}]
			},
		{scen, Length[resdis]}, {g, ng}] 
	}
	];

(* WRITE TO NOTEBOOK, RESULTS FOR SEVERAL CZM MODEL VERSIONS SIMULTANEOUSLY *)

plotdisnb1[resdis_, naam_, diffscen_]:= Block[{},
	nd1 = Length[resdis[[1, 1]]];
	{
	headingprint2nb[naam <> If[(diffscen == 0), basescenstr, compscenstr]],
	Table[	{
		headingprint3nb[scenname[scen, diffscen] <> " gender " <> gennames[[g]]],
		Table[	Cell[	GraphicsData[
					"PostScript",
					DisplayString[
   						GraphicsArray[
							Table[
								If[(agespecres <= 1),

									(* NUMBERS AGGREGATED OVER AGE *)

									makemultiplelistplot[Table[resdis[[m, scen, dj, g]],
												{m, Length[resdis]}],
										{plotset2,
										PlotStyle 	-> stdmodelcolor,
		 								PlotLegend 	-> stdmodellegend,
										PlotLabel 	-> mortnames[[dj]]}]

								],
     								{dj, 4 di + 1, Min[{4 di + 4, nd1}]}]
								]
							]
						],
				"Subsection",
				ImageSize -> Min[{(Min[{4 di + 4, nd1}] - 4 di) imagesize, 900}]
				],
			{di, 0, Floor[(nd1 - 1) / 4]}]
			},
		{scen, Length[resdis[[1]]]}, {g, ng}] 
	}
	];


(* --------------------------------------------------
	PRINTING ROUTINES FOR EVENT NUMBERS FOR EACH MODEL TYPE: SUB-ROUTINES
----------------------------------------------------*)

printbug["3."];

(* PRINTS NAME OF OUTPUT VARIABLE AND SCENARIO SPECIFICATIONS *)

resname[t_, diffscen_] 	:= Block[{},

printbug["3.1"];

	str = outputnames[[t]] <> If[(diffscen == 0), basescenstr, compscenstr];

	If[(outputscreen == 1),		headingprint2[str]];
	If[(outputnotebook == 1),	addcellnb[headingprint2nb[str]]];
	If[(outputfile == 1),		WriteString[resmodelfile, str <> "\n\n"]]

	];


(* PRINTS TOTAL POPULATION NUMBERS *)

printrespop[respop_, diffscen_] := Block[{},

printbug["3.2"];
	
	Do[	str = scenname[scen, diffscen];

		If[(outputscreen == 1),		headingprint3[str]];				
		If[(outputnotebook == 1),	addcellnb[headingprint3nb[str]]];	
		If[(outputfile == 1),		WriteString[resmodelfile, str <> "\n\n"]];		

printbug["3.2.1"];

		If[(agespecres <= 1),

printbug["3.2.2"];

			(* AGGREGATED OVER AGE *)

			If[(outputscreen == 1),		Print[TableForm[respop[[scen]]]]];
			If[(outputnotebook == 1),	addcellnb[Cell[BoxData[ToBoxes[respop[[scen]] // MatrixForm]],
								"Subsection"]]];
			If[(outputfile == 1),		Export[resmodelfile, respop[[scen]], "Table"];			
							WriteString[resmodelfile, "\n\n"]],

printbug["3.2.3"];

			(* SPECIFIED BY AGE *)

			If[(outputscreen == 1),		Do[	Print[gennames[[g]]];
								Print[TableForm[Transpose[respop[[scen, g]]]]],
								{g, ng}]];

			If[(outputnotebook == 1),	addcellnb[Table[
								{headingprint3nb[gennames[[g]]],			
								Cell[BoxData[ToBoxes[Transpose[respop[[scen, g]]] // MatrixForm]],
									"Subsection"]},
								{g, ng}]]];
				
			If[(outputfile == 1),		Do[	WriteString[resmodelfile, gennames[[g]] <> "\n\n"];	
								Export[resmodelfile, Transpose[respop[[scen, g]]], "Table"];
								WriteString[resmodelfile, "\n\n"],
								{g, ng}]];
			],

		{scen, Length[respop]}]

	];


(* PRINTS (DISCRETE) RISK FACTOR CLASS PREVALENCE NUMBERS *)

printresrisk[resrisk_, diffscen_] := Block[{},

printbug["3.3"];

	Do[	str = scenname[scen, diffscen] <> risknames[[riskindd[[r]]]] <> " "<> gennames[[g]];

		If[(outputscreen == 1),		headingprint3[str]];
		If[(outputnotebook == 1),	addcellnb[headingprint3nb[str]]];					
		If[(outputfile == 1),		WriteString[resmodelfile, str <> "\n\n"]];				

		If[(agespecres <= 1),

			(* AGGREGATED OVER AGE *)

			If[(outputscreen == 1),		Print[TableForm[resrisk[[scen, r, g]]]]];
			If[(outputnotebook == 1),	addcellnb[Cell[BoxData[ToBoxes[resrisk[[scen, r, g]] // MatrixForm]],
								"Subsection"]]];
			If[(outputfile == 1),		Export[resmodelfile, resrisk[[scen, r, g]], "Table"];		
							WriteString[resmodelfile, "\n\n"]],
			
			(* SPECIFIED BY AGE *)

			If[(outputscreen == 1),		Do[	Print[ToString[ri]];				
								Print[TableForm[Transpose[resrisk[[scen, r, g, ri]]]]],
								{ri, ncrsel[[r]]}]];
	
			If[(outputnotebook == 1),	addcellnb[Table[
								{headingprint3nb[ToString[ri]],				
								Cell[BoxData[ToBoxes[Transpose[resrisk[[scen, r, g, ri]]] // MatrixForm]],
									"Subsection"]},
								{ri, ncrsel[[r]]}]]];

			If[(outputfile == 1),		Do[	WriteString[resmodelfile, ToString[ri] <> "\n\n"];	
								Export[resmodelfile, Transpose[resrisk[[scen, r, g, ri]]], "Table"];
								WriteString[resmodelfile, "\n\n"],
								{ri, ncrsel[[r]]}]];

			],

		{scen, Length[resrisk]}, {r, nrd}, {g, ng}]

	];

(* PRINTS (CONTINUOUS) RISK FACTOR CLASS DISTRIBUTION CHARACTERISTICS *)

printresdist[resdist_, diffscen_] := Block[{},

printbug["3.4"];

	Do[	str = scenname[scen, diffscen] <> risknames[[riskindc[[r]]]] <> " "<> gennames[[g]];

		If[(outputscreen == 1),		headingprint3[str]];
		If[(outputnotebook == 1),	addcellnb[headingprint3nb[str]]];					
		If[(outputfile == 1),		WriteString[resmodelfile, str <> "\n\n"]];				

		If[(agespecres <= 1),

			(* AGGREGATED OVER AGE *)

			If[(outputscreen == 1),		Print[TableForm[resdist[[scen, r, g]]]]];
			If[(outputnotebook == 1),	addcellnb[Cell[BoxData[ToBoxes[resdist[[scen, r, g]] // MatrixForm]],
								"Subsection"]]];
			If[(outputfile == 1),		Export[resmodelfile, resdist[[scen, r, g]], "Table"];		
							WriteString[resmodelfile, "\n\n"]],
			
			(* SPECIFIED BY AGE *)

			If[(outputscreen == 1),		Do[	Print[ToString[ri]];				
								Print[TableForm[Transpose[resdist[[scen, r, g, ri]]]]],
								{ri, 2}]];
	
			If[(outputnotebook == 1),	addcellnb[Table[
								{headingprint3nb[ToString[ri]],				
								Cell[BoxData[ToBoxes[Transpose[resdist[[scen, r, g, ri]]] // MatrixForm]],
									"Subsection"]},
								{ri, 2}]]];

			If[(outputfile == 1),		Do[	WriteString[resmodelfile, ToString[ri] <> "\n\n"];	
								Export[resmodelfile, Transpose[resdist[[scen, r, g, ri]]], "Table"];
								WriteString[resmodelfile, "\n\n"],
								{ri, 2}]];

			],

		{scen, Length[resdist]}, {r, nrc}, {g, ng}]

	];


(* PRINTS DISEASE (PREVALENCE, INCIDENCE, MORTALITY) NUMBERS *)

printresdis[resdis_, diffscen_] := Block[{},

printbug["3.5"];

	Do[	str = scenname[scen, diffscen] <> mortnames[[d]];

		If[(outputscreen == 1),		headingprint3[str]];
		If[(outputnotebook == 1),	addcellnb[headingprint3nb[str]]];					
		If[(outputfile == 1),		WriteString[resmodelfile, str <> "\n\n"]];								
		If[(agespecres <= 1),

			(* AGGREGATED OVER AGE *)

			If[(outputscreen == 1),		Print[TableForm[resdis[[scen, d]]]]];
			If[(outputnotebook == 1),	addcellnb[Cell[BoxData[ToBoxes[resdis[[scen, d]] // MatrixForm]],
								"Subsection"]]];
			If[(outputfile == 1),		Export[resmodelfile, resdis[[scen, d]], "Table"];		
							WriteString[resmodelfile, "\n\n"]],

			(* SPECIFIED BY AGE *)

			If[(outputscreen == 1),		Do[	Print[gennames[[g]]];				
								Print[TableForm[Transpose[resdis[[scen, d, g]]]]],
								{g, ng}]];

			If[(outputnotebook == 1),	addcellnb[Table[
								{headingprint3nb[gennames[[g]]],			
								Cell[BoxData[ToBoxes[Transpose[resdis[[scen, d, g]]] // MatrixForm]],
									"Subsection"]},
								{g, ng}]]];
			
			If[(outputfile == 1),		Do[	WriteString[resmodelfile, gennames[[g]] <> "\n\n"];	
								Export[resmodelfile, Transpose[resdis[[scen, d, g]]], "Table"];
								WriteString[resmodelfile, "\n\n"],
								{g, ng}]];

			],

		{scen, Length[resdis]}, {d, Length[resdis[[1]]]}]

	];
		
(* --------------------------------------------------
	PRINTING ROUTINES FOR EVENT NUMBERS FOR COMPARING MODEL TYPES: SUB-ROUTINES
----------------------------------------------------*)

(* PRINTS NAME OF OUTPUT VARIABLE AND SCENARIO SPECIFICATIONS *)

resnameabs[t_, diffscen_] := Block[{},

printbug["3.6"];

	str = outputnames[[t]] <> If[(diffscen == 0), basescenstr, compscenstr] <> " (absolute)";

	If[(outputscreen == 1),		headingprint2[str]];
	If[(outputnotebook == 1),	addcellnb[headingprint2nb[str]]];						
	If[(outputfile == 1),		WriteString[resmodelfile, str <> "\n\n"]]					

	];


resnamerel[t_, diffscen_] := Block[{},

printbug["3.7"];

	str = outputnames[[t]] <> If[(diffscen == 0), basescenstr, compscenstr] <> " (relative)";

	If[(outputscreen == 1),		headingprint2[str]];								
	If[(outputnotebook == 1),	addcellnb[headingprint2nb[str]]];						
	If[(outputfile == 1),		WriteString[resmodelfile, str <> "\n\n"]]					

	];

(* PRINTS RESULTS: DIFFERENCES BETWEEN TOTAL POPULATION NUMBERS *)

printdrespop[drespop_, respop_, diffscen_, respopind_] := Block[{},

printbug["3.8"];

	hprint[hres_, hdiffscen_] := Block[{},

		Do[	If[(outputscreen == 1),		headingprint3[scenname[scen, hdiffscen]]];				
			If[(outputnotebook == 1),	addcellnb[headingprint3nb[scenname[scen, hdiffscen]]]];			
			If[(outputfile == 1),		WriteString[resmodelfile, scenname[scen, hdiffscen] <> "\n\n"]];		

			If[(agespecres <= 1), 

				(* NO AGE SPECIFICATION *)

				If[(outputscreen == 1),		Print[TableForm[hres[[scen]]]]];				
				If[(outputnotebook == 1),	addcellnb[Cell[BoxData[ToBoxes[hres[[scen]] // MatrixForm]],
									"Subsection"]]];

				If[(outputfile == 1),		Export[resmodelfile, hres[[scen]], "Table"];			
								WriteString[resmodelfile, "\n\n"]],

				(* SPECIFIED BY AGE CLASS *)
			
				If[(outputscreen == 1),		Do[	Print[gennames[[g]]];				
									Print[TableForm[Transpose[hres[[scen, g]]]]],
									{g, ng}]];

				If[(outputnotebook == 1),	addcellnb[Table[
									{headingprint3nb[gennames[[g]]],				
									Cell[BoxData[ToBoxes[Transpose[hres[[scen, g]]] // MatrixForm]],
										"Subsection"]},
									{g, ng}]]];

				If[(outputfile == 1),		Do[	WriteString[resmodelfile, gennames[[g]] <> "\n\n"];	
									Export[resmodelfile, Transpose[hres[[scen, g]]], "Table"];
									WriteString[resmodelfile, "\n\n"],
									{g, ng}]]

				],

			{scen, Length[hres]}]

		];

	(* ABSOLUTE DIFFERENCES *)

	resnameabs[respopind, diffscen];		

	hprint[drespop, diffscen];

	(* RELATIVE DIFFERENCES *)

	resnamerel[respopind, diffscen];

	hprint[drespop respop /	(respop^2 + eps), diffscen]

	];

(* PRINTS RESULTS: DIFFERENCES BETWEEN (DISCRETE) RISK FACTOR CLASS PREVALENCE NUMBERS *)

printdresrisk[dresrisk_, resrisk_, diffscen_, resriskind_, absind_] := Block[{},

printbug["3.9"];

	hprint[hres_, hdiffscen_] := Block[{},

		Do[	str = scenname[scen, hdiffscen] <> risknames[[riskindd[[r]]]] <> " " <> gennames[[g]];

			If[(outputscreen == 1),		headingprint3[str]];							
			If[(outputnotebook == 1),	addcellnb[headingprint3nb[str]]];					
			If[(outputfile == 1),		WriteString[resmodelfile, str <> "\n\n"]];				

			If[(agespecres <= 1),

				(* NO AGE SPECIFICATION *)

				If[(outputscreen == 1),		Print[TableForm[hres[[scen, r, g]]]]];			
				If[(outputnotebook == 1),	addcellnb[Cell[BoxData[ToBoxes[hres[[scen, r, g]] // MatrixForm]],
									"Subsection"]]];	
				If[(outputfile == 1),		Export[resmodelfile, hres[[scen, r, g]], "Table"];			
								WriteString[resmodelfile, "\n\n"]],

				(* SPECIFIED BY AGE CLASS *)

				If[(outputscreen == 1),		Do[	Print[ToString[ri]];				
									Print[TableForm[Transpose[hres[[scen, r, g, ri]]]]],
									{ri, ncrsel[[r]]}]];

				If[(outputnotebook == 1),	addcellnb[Table[
									{headingprint3nb[ToString[ri]],				
									Cell[BoxData[ToBoxes[Transpose[hres[[scen, r, g, ri]]] //
										MatrixForm]], "Subsection"]},
									{ri, ncrsel[[r]]}]]];

				If[(outputfile == 1),		Do[	WriteString[resmodelfile, ToString[ri] <> "\n\n"];	
									Export[resmodelfile, Transpose[hres[[scen, r, g, ri]]], "Table"];
									WriteString[resmodelfile, "\n\n"],
									{ri, ncrsel[[r]]}]]

				],

			{scen, Length[hres]}, {r, nrd}, {g, ng}]

		];


	(* ABSOLUTE DIFFERENCES *)

	resnameabs[resriskind];

	hprint[dresrisk, diffscen];
		
	(* RELATIVE DIFFERENCES IF ALLOWED (absind == 1) *)

	hprint[dresrisk resrisk / (resrisk^2 + eps)]
	
	];

(* PRINTS RESULTS: DIFFERENCES BETWEEN (CONTINUOUS) RISK FACTOR CLASS DISTRIBUTION CHARACTERISTICS *)

printdresdist[dresdist_, resdist_, diffscen_, resdistind_, absind_] := Block[{},

printbug["3.11"];

	hprint[hres_, hdiffscen_] := Block[{},

		Do[	str = scenname[scen, hdiffscen] <> risknames[[riskindc[[r]]]] <> " " <> gennames[[g]];

			If[(outputscreen == 1),		headingprint3[str]];							
			If[(outputnotebook == 1),	addcellnb[headingprint3nb[str]]];					
			If[(outputfile == 1),		WriteString[resmodelfile, str <> "\n\n"]];				

			If[(agespecres <= 1),

				(* NO AGE SPECIFICATION *)

				If[(outputscreen == 1),		Print[TableForm[hres[[scen, r, g]]]]];			
				If[(outputnotebook == 1),	addcellnb[Cell[BoxData[ToBoxes[hres[[scen, r, g]] // MatrixForm]],
									"Subsection"]]];	
				If[(outputfile == 1),		Export[resmodelfile, hres[[scen, r, g]], "Table"];			
								WriteString[resmodelfile, "\n\n"]],

				(* SPECIFIED BY AGE CLASS *)

				If[(outputscreen == 1),		Do[	Print[ToString[ri]];				
									Print[TableForm[Transpose[hres[[scen, r, g, ri]]]]],
									{ri, 2}]];

				If[(outputnotebook == 1),	addcellnb[Table[
									{headingprint3nb[ToString[ri]],				
									Cell[BoxData[ToBoxes[Transpose[hres[[scen, r, g, ri]]] //
										MatrixForm]], "Subsection"]},
									{ri, 2}]]];

				If[(outputfile == 1),		Do[	WriteString[resmodelfile, ToString[ri] <> "\n\n"];	
									Export[resmodelfile, Transpose[hres[[scen, r, g, ri]]], "Table"];
									WriteString[resmodelfile, "\n\n"],
									{ri, 2}]]

				],

			{scen, Length[hres]}, {r, nrc}, {g, ng}]

		];

	(* ABSOLUTE DIFFERENCES *)

	resnameabs[resdistind];

	hprint[dresdist, diffscen];

	(* RELATIVE DIFFERENCES IF ALLOWED (absind == 1) *)

	hprint[dresdist resdist / (resdist^2 + eps), diffscen];

	];

(* PRINTS RESULTS: DIFFERENCES BETWEEN DISEASE (PREVALENCE, INCIDENCE, MORTALITY) NUMBERS *)

printdresdis[dresdis_, resdis_, diffscen_, resdisind_, absind_]:= Block[{},

printbug["3.12"];

	hprint[hres_, hdiffscen_] := Block[{},

		Do[	str = scenname[scen, hdiffscen] <> mortnames[[d]];

			If[(outputscreen == 1),		headingprint3[str]];							
			If[(outputnotebook == 1),	addcellnb[headingprint3nb[str]]];					
			If[(outputfile == 1),		WriteString[resmodelfile, str <> "\n\n"]];				

			If[(agespecres <= 1),

				(* NO AGE SPECIFICATION *)

				If[(outputscreen == 1),		Print[TableForm[hres[[scen, d]]]]];			
				If[(outputnotebook == 1),	addcellnb[Cell[BoxesData[ToBoxes[hres[[scen, d]] // MatrixForm]],
									"Subsection"]]];

				If[(outputfile == 1),		Export[resmodelfile, hres[[scen, d]], "Table"];		
								WriteString[resmodelfile, "\n\n"]],

				(* SPECIFIED BY AGE CLASS *)

				If[(outputscreen == 1),		Do[	Print[gennames[[g]]];				
									Print[TableForm[Transpose[hres[[scen, d, g]]]]],
									{g, ng}]];

				If[(outputnotebook == 1),	addcellnb[Table[
									{headingprint3nb[gennames[[g]]],														Cell[BoxesData[ToBoxes[Transpose[hres[[scen, d, g]]] //
										MatrixForm]], "Subsection"]},
									{g, ng}]]];

				If[(outputfile == 1),		Do[	WriteString[resmodelfile, gennames[[g]] <> "\n\n"];	
									Export[resmodelfile, Transpose[hres[[scen, d, g]]], "Table"];
									WriteString[resmodelfile, "\n\n"],
									{g, ng}]];

				],

			{scen, Length[hres]}, {d, Length[hres[[1]]]}]

		];

	(* ABSOLUTE DIFFERENCES *)

	resnameabs[resdisind];

	hprint[dresdis, diffscen];

	(* RELATIVE DIFFERENCES IF ALLOWED (absind == 1) *)

	hprint[dresdis resdis / (resdis^2 + eps), diffscen]
	
	];


(*-------------------------------------------------
	PRESENTING ROUTINE FOR EVENT NUMBERS FOR EACH MODEL TYPE 
---------------------------------------------------*)

printbug["4."];

presentnumbers[resmodel_, diffscen_] := Block[{},

	(* TOTAL POPULATION NUMBERS *)

printbug["4.1"];

	hnpop0		= makenpopagg[resmodel[[1]], 0];
	standardnpop	= Table[Plus@@hnpop0[[scen, g, 1]], {scen, nscen0}, {g, ng}];

	(* DISCRETELY DISTRIBUTED RISK FACTOR CLASS PREVALENCE NUMBERS *)

printbug["4.2"];

	hnrisk0		= makenrisk[resmodel[[2]], 0];
	hprisk0		= Table[hnrisk0[[scen, r, g, ri]] / (Plus@@hnrisk0[[scen, r, g]] + eps),
				{scen, nscen0}, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}];
	standardnrisk	= Table[Plus@@hnrisk0[[scen, r, g, ri, 1]], {scen, nscen0}, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}];

	(* DISEASE PREVALENCE NUMBERS *)

printbug["4.3"];

	hndis0		= makendis[resmodel[[4]], 0];
	
	(* TOTAL POPULATION NUMBERS *)

	If[(outputsel[[1]] == 1),

printbug["4.4"];

		npop	= makenpop[resmodel, diffscen];
		npop	= npopdiscount[npop, diffscen, discounte, standardnpop];

		(* GRAPHICAL OUTPUT *)

		If[(graphicoutput == 1),

printbug["4.4.1"];

			If[(outputscreen == 1), plotpop[npop, outputnames[[1]], diffscen]];

			If[(outputnotebook == 1),
				addcellnb[plotpopnb[npop, outputnames[[1]], diffscen]];
				If[(cumulative == 1),
					hnpop = If[(agespecres <= 1),
							Table[npop[[scen, g, nstap]], {scen, Length[npop]}, {g, ng}],
							Table[Plus@@npop[[scen, g, nstap]], {scen, Length[npop]}, {g, ng}]
							];
					addcellnb[Cell[BoxData[ToBoxes[hnpop]], "Subsection"]]
					]
				]
			];

		(* TABEL OUTPUT *)

		If[(tabeloutput == 1), 

printbug["4.4.2"];

			If[(outputfile == 1), WriteString[resmodelfile, outputnames[[1]] <> "\n\n"]];
			printrespop[npop, diffscen]]

		];

	(* DISCRETELY DISTRIBUTED RISK FACTOR CLASS PREVALENCE NUMBERS *)

	If[(nrd > 0) && (outputsel[[2]] == 1),

printbug["4.5"];

		nrisk 	= If[(diffscen == 0),
				hnrisk0,
				makenrisk[resmodel[[2]], diffscen]
				];

		If[(rates == 0) && (diffscen == 0), nrisk = nrisk[[{1}]]];
		If[(rates == 1) && (diffscen == 0), nrisk = hprisk0[[{1}]]];
		If[(rates == 1) && (diffscen == 1), nrisk = Drop[hprisk0, 1] - Table[hprisk0[[1]], {nscen0 - 1}]];

		If[(standardized == 1),
			nrisk = Table[nrisk[[scen, r, g, ri, n]] / standardnrisk[[scen, r, g, ri]],
					{scen, Length[nrisk]}, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}, {n, nstap}]];

		If[(discounte > eps),
			nrisk = Table[nrisk[[scen, r, g, ri, n]] / (1 + discounte)^(n - 1),
					{scen, Length[nrisk]}, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}, {n, nstap}]];

		If[(cumulative == 1),
			nrisk = Table[Plus@@nrisk[[scen, r, g, ri, Range[n]]],
					{scen, Length[nrisk]}, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}, {n, nstap}]];

		(* GRAPHICAL OUTPUT *)

		If[(graphicoutput == 1),
	
			If[(outputscreen == 1), plotrisk[nrisk, outputnames[[2]], diffscen]];
			If[(outputnotebook == 1), addcellnb[plotrisknb[nrisk, outputnames[[2]], diffscen]]]];

		(* TABEL OUTPUT *)

		If[(tabeloutput == 1),

			If[(outputfile == 1), WriteString[resmodelfile, outputnames[[2]] <> ratesstr <> "\n\n"]];
			printresrisk[nrisk, diffscen]]		

		];

	(* CONTINUOUSLY DISTRIBUTED RISK FACTOR DISTRIBUTION CHARACTERISTICS *)

	If[(riskcontind == 1) && (nrc > 0) && (outputsel[[3]] == 1),

printbug["4.6"];

		dist	= makedist[resmodel[[3]], 0];

		dist	= Table[dist[[scen, r, g, ri]] / (hnpop0[[scen, g]] + eps), {scen, nscen0}, {r, nrc}, {g, ng}, {ri, 2}];

		If[(diffscen == 0), dist = dist[[{1}]]];

		If[(diffscen == 1), dist = Drop[dist, 1] - Table[dist[[1]], {nscen0 - 1}]];

		(* GRAPHICAL OUTPUT *)

		If[(graphicoutput == 1), If[(outputnotebook == 1), addcellnb[plotdistnb[dist, outputnames[[3]], diffscen]]]];

		(* TABEL OUTPUT *)

		If[(tabeloutput == 1),

			If[(outputfile == 1), WriteString[resmodelfile, outputnames[[3]] <> "\n\n"]];
			printresdist[dist, diffscen]]

		];

	(* DISEASE DATA *)

	hmakendis[outputnr_, ndis0_, pdis0_] := Block[{},

printbug["4.7"];

		ndis = If[(diffscen == 0),
				ndis0,
				makendis[resmodel[[outputnr]], diffscen]
				];

		If[(rates == 0) && (diffscen == 0), ndis = ndis[[{1}]]];
		If[(rates == 1) && (diffscen == 0), ndis = pdis0[[{1}]]];
		If[(rates == 1) && (diffscen == 1), ndis = Drop[pdis0, 1] - Table[pdis0[[1]], {nscen0 - 1}]];

		If[(standardized == 1),
			ndis = Table[ndis[[scen, d, g, n]] / standardnpop[[scen, g]],
					{scen, Length[ndis]}, {d, Length[ndis[[1]]]}, {g, ng}, {n, nstap}]];

		If[(discounte > eps),
			ndis = Table[ndis[[scen, d, g, n]] / (1 + discounte)^(n - 1),
					{scen, Length[ndis]}, {d, Length[ndis[[1]]]}, {g, ng}, {n, nstap}]];

		If[(cumulative == 1),
			ndis = Table[Plus@@ndis[[scen, d, g, Range[n]]],
					{scen, Length[ndis]}, {d, Length[ndis[[1]]]}, {g, ng}, {n, nstap}]];

		(* GRAPHICAL OUTPUT *)

		If[(graphicoutput == 1),

			If[(outputscreen == 1), plotdis[ndis, outputnames[[outputnr]], diffscen]];
			If[(outputnotebook == 1), addcellnb[plotdisnb[ndis, outputnames[[outputnr]], diffscen]]]];

		(* TABEL OUTPUT *)

		If[(tabeloutput == 1),

			If[(outputfile == 1), WriteString[resmodelfile, outputnames[[outputnr]] <> ratesstr <> "\n\n"]];
			printresdis[ndis, diffscen]]		

		];

	(* DISEASE PREVALENCE NUMBERS *)

	If[(nd > 0) && (outputsel[[4]] == 1),

printbug["4.8"];

		hpdis0 = Table[hndis0[[scen, d]] / (hnpop0[[scen]] + eps), {scen, nscen0}, {d, nd}];

		hmakendis[4, hndis0, hpdis0]];
		
	(* DISEASE INCIDENCE NUMBERS *)

	If[(nd > 0) && (outputsel[[5]] == 1),

printbug["4.9"];

		hninc0 = makendis[resmodel[[5]], 0];

		hpinc0 = Table[hninc0[[scen, d]] / (hnpop0[[scen]] + eps), {scen, nscen0}, {d, nd}];

		hmakendis[5, hninc0, hpinc0]];

	(* DISEASE MORTALITY NUMBERS *)

	If[(outputsel[[6]] == 1),

printbug["4.10"];

		hnmort0 = makendis[resmodel[[6]], 0];

		hpmort0 = Table[hnmort0[[scen, d]] / (hnpop0[[scen]] + eps), {scen, nscen0}, {d, nd + 2}];

		hmakendis[6, hnmort0, hpmort0]];
	
	(* MEAN AGE AT DISEASE ONSET *)

	If[(nd > 0) && (outputsel[[7]] == 1),

printbug["4.11"];

		onsetage = makendis[resmodel[[7]], 0] / hndis0;

		onsetage = makeresdiff[onsetage];

		If[(diffscen == 0), onsetage = onsetage[[{1}]]];

		If[(graphicoutput == 1),

			If[(outputscreen == 1), plotdis[onsetage, outputnames[[7]], diffscen]];
			If[(outputnotebook == 1), addcellnb[plotdisnb[onsetage, outputnames[[7]], diffscen]]]];

		If[(tabeloutput == 1),

			If[(outputfile == 1), WriteString[resmodelfile, outputnames[[7]] <> "\n\n"]];
			printresdis[onsetage, diffscen]]	

		];
	
	(* MEAN TIME SINCE SMOKING CESSATION *)

	If[(RRsmokduurind == 1) && (outputsel[[8]] == 1),

printbug["4.12"];

		duurstop = makenpopagg[resmodel[[8]], 0] / (hnrisk0[[Range[nscen0], 1, Range[ng], 3]] + eps);

		duurstop = makeresdiff[duurstop, diffscen];

		If[(diffscen == 0), duurstop = duurstop[[{1}]]];

		(* GRAPHICAL OUTPUT *)
		
		If[(graphicoutput == 1),

			If[(outputscreen == 1), plotpop[duurstop, outputnames[[8]], diffscen]];
			If[(outputnotebook == 1), addcellnb[plotpopnb[duurstop, outputnames[[8]], diffscen]]]];

		(* TABEL OUTPUT *)

		If[(tabeloutput == 1),

			If[(outputfile == 1), WriteString[resmodelfile, outputnames[[8]] <> "\n\n"]];
			printrespop[duurstop, diffscen]];

		];

	(* CURRENT COSTS *)

	If[(outputsel[[9]] == 1),

printbug["4.13"];
		
		ncosts 	= makencosts[resmodel];

		ncosts	= ncostsdiscount[ncosts, discounte, standardnpop];		

		plusncosts = If[(agespecres <= 1),

			(* AGGREGATED OVER AGE *)

			Table[Plus@@ncosts[[scen, d, g, n]], {scen, nscen0}, {d, nd + 2}, {g, ng}, {n, nstap}],

			(* SPECIFIED BY AGE CLASS *)

			Table[aggregc[ncosts[[scen, d, g, n]], 1, 7], {scen, nscen0}, {d, nd + 2}, {g, ng}, {n, nstap}]];
	
		plusncosts = makeresdiff[plusncosts, diffscen];

		If[(diffscen == 0), plusncosts = plusncosts[[{1}]]];

		(* GRAPHICAL OUTPUT *)

		If[(graphicoutput == 1),

			If[(outputscreen == 1), plotdis[plusncosts, outputnames[[9]], diffscen]];
			If[(outputnotebook == 1), addcellnb[plotdisnb[plusncosts, outputnames[[9]], diffscen]]]];

		(* TABEL OUTPUT *)

		If[(tabeloutput == 1),

			If[(outputfile == 1), WriteString[resmodelfile, outputnames[[9]] <> "\n\n"]];
			printresdis[plusncosts, diffscen]];

		];
	
]; (* END PRESENTNUMBERS *)


(*-------------------------------------------------
	PLOTTING ROUTINE FOR EVENT NUMBERS (EXCL LE) FOR COMPARING MODEL TYPES 
---------------------------------------------------*)

printbug["5."];


absname[t_] := "absolute differences for " <> outputnames[[t]];
relname[t_] := "relative differences for " <> outputnames[[t]];


presentdiffnumbers[resmodel_, diffscen_] := Block[{},

	(* TOTAL POPULATION NUMBERS *)

printbug["5.1"];

	npop10	= Table[makenpopagg[resmodel[[m, 1]], 0], {m, Plus@@modelsel}];
	standardnpop1 = Table[Plus@@npop10[[m, scen, g, 1]], {m, Plus@@modelsel}, {scen, nscen0}, {g, ng}];

	(* DISCRETELY DISTRIBUTED RISK FACTOR CLASS PREVALENCE NUMBERS *)

printbug["5.2"];

	nrisk10	= Table[makenrisk[resmodel[[m, 2]], 0], {m, Plus@@modelsel}];
	prisk10	= Table[nrisk10[[m, scen, r, g, ri]] / (Plus@@nrisk10[[m, scen, r, g]] + eps),
				{m, Plus@@modelsel}, {scen, nscen0}, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}];
	standardnrisk1 = Table[Plus@@nrisk10[[m, scen, r, g, ri, 1]],
				{m, Plus@@modelsel}, {scen, nscen0}, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}];

	(* DISEASE PREVALENCE NUMBERS *)

printbug["5.3"];

	ndis10	= Table[makendis[resmodel[[m, 4]], 0], {m, Plus@@modelsel}];
	
	(* TOTAL POPULATION NUMBERS *)

	If[(outputsel[[1]] == 1),

printbug["5.4"];

		npop1	= Table[makenpop[resmodel[[m]], diffscen], {m, Plus@@modelsel}];

printbug["5.4.1"];
		
		npop1	= Table[npopdiscount[npop1[[m]], diffscen, discounte, standardnpop1[[m]]], {m, Plus@@modelsel}];

printbug["5.4.2"];
		
		(* GRAPHICAL OUTPUT *)

		If[(graphicoutput == 1),

			If[(outputnotebook == 1), addcellnb[plotpopnb1[npop1, outputnames[[1]], diffscen]]]]

		];

	(* DISCRETELY DISTRIBUTED RISK FACTOR CLASS PREVALENCE NUMBERS *)

	If[(nrd > 0) && (outputsel[[2]] == 1),

printbug["5.5"];

		nrisk1 	= If[(diffscen == 0), nrisk10, Table[makenrisk[resmodel[[m, 2]], diffscen], {m, Plus@@modelsel}]];

printbug["5.5.1"];
		
		If[(rates == 0) && (diffscen == 0), nrisk1 = Table[nrisk1[[m, {1}]], {m, Plus@@modelsel}]];
printbug["5.5.1.1"];
		If[(rates == 1) && (diffscen == 0), nrisk1 = Table[prisk10[[m, {1}]], {m, Plus@@modelsel}]];
printbug["5.5.1.2"];
		If[(rates == 1) && (diffscen == 1),
			nrisk1 = Table[prisk10[[m, scen]] - prisk10[[m, 1]], {m, Plus@@modelsel}, {scen, 2, nscen0}]];

printbug["5.5.2"];
			
		If[(standardized == 1),
			nrisk1 = Table[nrisk1[[m, scen, r, g, ri, n]] / standardnrisk1[[m, scen, r, g, ri]],
					{m, Plus@@modelsel}, {scen, Length[nrisk1[[m]]]}, {r, nrd}, {g, ng},
					{ri, ncrsel[[r]]}, {n, nstap}]];

printbug["5.5.3"];			

		If[(discounte > eps),
			nrisk1 = Table[nrisk1[[m, scen, r, g, ri, n]] / (1 + discounte)^(n - 1),
					{m, Plus@@modelsel}, {scen, Length[nrisk1[[m]]]}, {r, nrd}, {g, ng},
					{ri, ncrsel[[r]]}, {n, nstap}]];

printbug["5.5.4"];			

		If[(cumulative == 1),
			nrisk1 = Table[Plus@@nrisk1[[m, scen, r, g, ri, Range[n]]],
					{m, Plus@@modelsel}, {scen, Length[nrisk1[[m]]]}, {r, nrd}, {g, ng},
					{ri, ncrsel[[r]]}, {n, nstap}]];

printbug["5.5.5"];			

		(* GRAPHICAL OUTPUT *)

		If[(graphicoutput == 1),

			If[(outputnotebook == 1), addcellnb[plotrisknb1[nrisk1, outputnames[[2]], diffscen]]]]

		];

	(* CONTINUOUSLY DISTRIBUTED RISK FACTOR DISTRIBUTION CHARACTERISTICS *)

printbug["5.6"];

	If[(riskcontind == 1) && (nrc > 0) && (outputsel[[3]] == 1), _];

	(* DISEASE DATA *)

	hmakendis[outputnr_, ndis10_, pdis10_] := Block[{},

printbug["5.7"];

		ndis1 = If[(diffscen == 0), ndis10, Table[makendis[resmodel[[m, outputnr]], diffscen], {m, Plus@@modelsel}]];

printbug["5.7.1"];	

		If[(rates == 0) && (diffscen == 0), ndis1 = Table[ndis1[[m, {1}]], {m, Plus@@modelsel}]];
		If[(rates == 1) && (diffscen == 0), ndis1 = Table[pdis10[[m, {1}]], {m, Plus@@modelsel}]];
		If[(rates == 1) && (diffscen == 1),
			ndis1 = Table[pdis10[[m, scen]] - pdis10[[m, 1]], {m, Plus@@modelsel}, {scen, 2, nscen0}]];

printbug["5.7.2"];
			
		If[(standardized == 1),
			ndis1 = Table[ndis1[[m, scen, d, g, n]] / standardnpop1[[m, scen, g]],
					{m, Plus@@modelsel}, {scen, Length[ndis1[[1]]]}, {d, Length[ndis1[[1, 1]]]}, {g, ng}, {n, nstap}]];

printbug["5.7.3"];
			
		If[(discounte > eps),
			ndis1 = Table[ndis1[[m, scen, d, g, n]] / (1 + discounte)^(n - 1),
					{m, Plus@@modelsel}, {scen, Length[ndis1[[1]]]}, {d, Length[ndis1[[1, 1]]]}, {g, ng}, {n, nstap}]];

printbug["5.7.4"];

		If[(cumulative == 1),
			ndis1 = Table[Plus@@ndis1[[m, scen, d, g, Range[n]]],
					{m, Plus@@modelsel}, {scen, Length[ndis1[[1]]]}, {d, Length[ndis1[[1, 1]]]}, {g, ng}, {n, nstap}]];

printbug["5.7.5"];			

		(* GRAPHICAL OUTPUT *)

		If[(graphicoutput == 1),

			If[(outputnotebook == 1), addcellnb[plotdisnb1[ndis1, outputnames[[outputnr]], diffscen]]]]
				
		];

	(* DISEASE PREVALENCE NUMBERS *)

	If[(nd > 0) && (outputsel[[4]] == 1),

printbug["5.8"];
		pdis10 = Table[ndis10[[m, scen, d]] / (npop10[[m, scen]] + eps), {m, Plus@@modelsel}, {scen, nscen0}, {d, nd}];
			
		hmakendis[4, ndis10, pdis10]];
		
	(* DISEASE INCIDENCE NUMBERS *)

	If[(nd > 0) && (outputsel[[5]] == 1),

printbug["5.9"];

		ninc10 = Table[makendis[resmodel[[m, 5]], 0], {m, Plus@@modelsel}];
		pinc10 = Table[ninc10[[m, scen, d]] / (npop10[[m, scen]] + eps), {m, Plus@@modelsel}, {scen, nscen0}, {d, nd}];

		hmakendis[5, ninc10, pinc10]];

	(* DISEASE MORTALITY NUMBERS *)

	If[(outputsel[[6]] == 1),

printbug["5.10"];

		nmort10 = Table[makendis[resmodel[[m, 6]], 0], {m, Plus@@modelsel}];
		pmort10 = Table[nmort10[[m, scen, d]] / (npop10[[m, scen]] + eps), {m, Plus@@modelsel}, {scen, nscen0}, {d, nd + 2}];

		hmakendis[6, nmort10, pmort10]];
	
	(* MEAN AGE AT DISEASE ONSET *)

	If[(nd > 0) && (outputsel[[7]] == 1),

printbug["5.11"];

		onsetage1 = Table[makendis[resmodel[[m, 7]], 0], {m, Plus@@modelsel}] / ndis10;
		
		onsetage1 = Table[makeresdiff[onsetage1[[m]]], {m, Plus@@modelsel}];
		
		If[(diffscen == 0), onsetage1 = Table[onsetage1[[m, {1}]], {m, Plus@@modelsel}]];

		(* GRAPHICAL OUTPUT *)

		If[(graphicoutput == 1),

			If[(outputnotebook == 1), addcellnb[plotdisnb1[onsetage, outputnames[[7]], diffscen]]]]

		];
	
	(* MEAN TIME SINCE SMOKING CESSATION *)

	If[(RRsmokduurind == 1) && (outputsel[[8]] == 1),

printbug["5.12"];

		duurstop1 = Table[makenpop0[resmodel[[m, 8]], 0] / (nrisk10[[m, Range[nscen0], 1, Range[ng], 3]] + eps), {m, Plus@@modelsel}];
		
		duurstop1 = Table[makeresdiff[duurstop1[[m]], diffscen], {m, Plus@@modelsel}];
		
		If[(diffscen == 0), duurstop1 = Table[duurstop1[[m, {1}]], {m, Plus@@modelsel}]];
				
		(* GRAPHICAL OUTPUT *)

		If[(graphicoutput == 1),

			If[(outputnotebook == 1), addcellnb[plotpopnb1[duurstop, outputnames[[8]], diffscen]]]];

		];

]; (* END PRESENTDIFFNUMBERS *)


(* --------------------------------------------------
	PLOTTING RESULTS FOR EACH CZM MODEL VERSION SELECTED
----------------------------------------------------*)

printbug["6."];

eachname1[m_] 	:= Block[{},

			str = modelnames[[m]] <> basescenstr;
			If[(outputscreen == 1), 			headingprint1[str]];
			If[(outputnotebook == 1), 			addcellnb[headingprint1nb[str]]];
			If[(outputfile ==1) && (tabeloutput == 1),	WriteString[resmodelfile, str <> "\n\n"]]];

diffname1[m_] 	:= Block[{},

			str = modelnames[[m]] <> compscenstr;
			If[(outputscreen == 1), 			headingprint1[str]];
			If[(outputnotebook == 1), 			addcellnb[headingprint1nb[str]]];
			If[(outputfile ==1) && (tabeloutput == 1),	WriteString[resmodelfile, str <> "\n\n"]]];


(* --------------------------------------------------
	PLOTTING RESULTS FOR EACH PAIR OF CZM MODEL VERSIONS SELECTED
----------------------------------------------------*)

eachname2[m1_, m2_] := Block[{},

			str = "differences between " <> modelnames[[m1]] <> " and " <> modelnames[[m2]] <>
				" for baseline scenario";
			If[(outputscreen == 1),				headingprint1[str]];
			If[(outputnotebook == 1),			addcellnb[headingprint1nb[str]]];
			If[(outputfile ==1) && (tabeloutput == 1),	WriteString[resmodelfile, str <> "\n\n"]]];
	
diffname2[m1_, m2_] := Block[{},

			str = "differences between " <> modelnames[[m1]] <> " and " <> modelnames[[m2]] <>
				"differences with baseline scenario";
			If[(outputscreen == 1),				headingprint1[str]];
			If[(outputnotebook == 1),			addcellnb[headingprint1nb[str]]];
			If[(outputfile ==1) && (tabeloutput == 1),	WriteString[resmodelfile, str <> "\n\n"]]];


(* --------------------------------------------------
	CONCATENATION OF NOTEBOOK CELLS
----------------------------------------------------*)

addcellnb[cell_] := Block[{}, cellnb = Flatten[{cellnb, cell}]];


(* --------------------------------------------------
	RISK FACTOR CLASS AND DISEASE PREVALENCE NUMBERS CONDITIONAL ON DISEASE
----------------------------------------------------*)

printbug["7."];
(* GENERATES RISK FACTOR CLASS PREVALENCE RATES WITHIN DISEASED PATIENTS FROM MARGINAL MODEL ON TOTAL POPULATION *)

makeresriskdis0[dat_] := Block[{},

printbug["7.1"];

	(* POPULATION NUMBERS TOTAL AND SPECIFIED BY AGE CLASS *)

printbug["7.1.1"];

	hnpop		= Table[Plus@@dat[[1, scenlist[[scen]], n, g]], {scen, nscen0}, {g, ng}, {n, nstap}];

	meanhnpop	= Table[aggregc[hnpop[[scen, g, n]], 1, 7], {scen, nscen0}, {g, ng}, {n, nstap}];


	(* CALCULATED RISK FACTOR CLASS PREVALENCE NUMBERS AND DATA FOR HBA1C *)

printbug["7.1.2"];

	hprisk 		= Table[Plus@@dat[[2, scenlist[[scen]], n, r, g, ri]] /
					(Plus@@(Plus@@dat[[2, scenlist[[scen]], n, r, g]]) + eps),
				{scen, nscen0}, {n, nstap}, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}];

	hprisksel 	= Table[meanaggreg[prisksel[[r, g, ri]]],
				{r, nrdpop + 1, nrdpop + nrddis}, {g, ng}, {ri, ncrsel[[r]]}];

	(* CALCULATED DISEASE PREVALENE RATES *)

printbug["7.1.3"];

	hpdis		= Table[Plus@@dat[[4, scenlist[[scen]], n, d, g]] / (Plus@@dat[[1, scenlist[[scen]], n, g]] + eps),
				{scen, nscen0}, {n, nstap}, {d, nd}, {g, ng}];

	(* RELATIVE RISK VALUES *)

printbug["7.1.4"];

	meanRRrisk	= Table[meanaggreg[RRriskseladj[[r, RRriskindsel[[r, d + 1]], g, ri]]],
				{r, nrd}, {d, nd}, {g, ng}, {ri, ncrsel[[r]]}];

	meanRRdis	= Table[meanaggreg[RRdisadj[[RRdisindsel[[d, d1]], g]]], {d, nd}, {d1, nd}, {g, ng}];

	meanERRrisk	= Table[Plus@@(meanRRrisk[[r, d, g]] hprisk[[scen, n, r, g]]),
				{scen, nscen0}, {n, nstap}, {r, nrd}, {d, nd}, {g, ng}];

	(* PAIRS OF RISK FACTORS AND DISEASES RELATED, SUCH AS HBA1C AND DIABETES *)

printbug["7.1.5"];

	hriskdispair	= Transpose[{riskindddis, disindinv[[disriskindddis]]}];

	resrisk		= Table[0, {nd}, {nscen0}, {r, nrd}, {ng}, {ncrsel[[r]]}, {nstap}];

	(* ADJUSTMENT OF RISK FACTOR VALUES *)

printbug["7.1.6"];
	
	Do[	(* RISK FACTORS WORKING IN TOTAL POPULATION *)
			
		If[Not[MemberQ[riskindddis, r]],

			(* ADJUSTMENT FOR CAUSAL RELATION BETWEEN RISK FACTOR AND DISEASE *)

			hpriskadj	= hprisk[[Range[nscen0], Range[nstap], r]];

			Do[	hadj	= meanRRrisk[[r, d, g, ri]];

				Do[hpriskadj[[scen, n, g, ri]] *= hadj, {scen, nscen0}, {n, nstap}],

				{g, ng}, {ri, 1,ncrsel[[r]]}];

			(* ADJUSTMENT FOR INTERMEDIATE DISEASES *)

			hadj = Times@@Table[1 + (meanRRdis[[d1, d, g]] - 1) (meanRRrisk[[r, d, g, ri]] - 1) hpdis[[scen, n, d1, g]] /
						(meanERRrisk[[scen, n, r, d1, g]] + (meanRRdis[[d1, d, g]] - 1) hpdis[[scen, n, d1, g]] +
							eps),
						{d1, nd}, {scen, nscen0}, {n, nstap}, {g, ng}, {ri, ncrsel[[r]]}];

			Do[hpriskadj[[scen, n, g, ri]] *= hadj[[scen, n, g, ri]], {scen, nscen0}, {n, nstap}, {g, ng}, {ri, ncrsel[[r]]}];
			(* SCALING *)

	        	hpriskadj = Table[hpriskadj[[scen, n, g, ri]] / (Plus@@hpriskadj[[scen, n, g]] + eps),
					{scen, nscen0}, {g, ng}, {ri, ncrsel[[r]]}, {n, nstap}];

			(* VALUE AVERAGED OVER TOTAL POPULATION OR SPECIFIED BY AGE CLASS *)

			If[(agespecres <= 1),

				(* VALUES AVERAGED OVER TOTAL POPULATION *)

				Do[resrisk[[d, scen, r, g, ri, n]] = Plus@@(hpriskadj[[scen, g, ri, n]] hnpop[[scen, g, n]]) /
										Plus@@hnpop[[scen, g, n]],
					{scen, nscen0}, {g, ng}, {ri, ncrsel[[r]]}, {n, nstap}],

				(* VALUES SPECIFIED BY AGE CLASS *)

				Do[resrisk[[d, scen, r, g, ri, n]] = aggregc[hpriskadj[[scen, g, ri, n]] hnpop[[scen, g, n]], 1, 7] /
										(meanhnpop[[scen, g, n]] + eps),
					{scen, nscen0}, {g, ng}, {ri, ncrsel[[r]]}, {n, nstap}]

				]

			];

		(* RISK FACTOR DISTRIBUTION WITHIN RELATED DISEASE, E.G. HBA1C WITHIN DIABETICS *)			

		If[MemberQ[hriskdispair, {r, d}],

			If[(agespecres <= 1),

				(* VALUES AVERAGED OVER TOTAL POPULATION *)

				Do[resrisk[[d, scen, r, g, ri, n]] =
					Plus@@Flatten[dat[[2, scenlist[[scen]], n, r, g, ri]]] /
						(Plus@@Flatten[dat[[2, scenlist[[scen]], n, r, g]]] + eps),
					{scen, nscen0}, {g, ng}, {ri, ncrsel[[r]]}, {n, nstap}],

				(* VALUES SPECIFIED BY AGE CLASS *)

				Do[resrisk[[d, scen, r, g, ri, n]] =
					aggregc[Plus@@dat[[2, scenlist[[scen]], n, r, g, ri]], 1, 7] /
						(aggregc[Plus@@(Plus@@dat[[2, scenlist[[scen]], n, r, g]]), 1, 7] + eps),
					{scen, nscen0}, {g, ng}, {ri, ncrsel[[r]]}, {n, nstap}]

				]];

		(* NO RESULTS PRESENTED FOR DISEASE-SPECIFIC RISK FACTORS WITHIN DISEASES OTHER THAN RELATED ONE *)

		If[MemberQ[riskindddis, r] && Not[MemberQ[hriskdispair, {r, d}]] && (agespecres > 1),

			Do[resrisk[[d, scen, r, g, ri, n]] = Table[0, {nac[[7]]}],
				{scen, nscen0}, {g, ng}, {ri, ncrsel[[r]]}, {n, nstap}]],

		{r, nrd}, {d, nd}];

	(* RELATIVE RISK VALUES OF ONE DISEASE ON ANOTHER DISEASE INCIDENCE *)

printbug["7.1.7"];

	hRRdis 	= Table[meanRRdis, {nscen0}, {nstap}];

	(* ADJUSTMENT FOR JOINT RISK FACTORS WORKING ON TOTAL POPULATION *)

printbug["7.1.8"];

	meanRMrisk 	= Table[meanERRrisk[[scen, n, r, d, g]] meanRRrisk[[r, d, g, ri]] / (meanERRrisk[[scen, n, r, d, g]]^2 + eps),
				{scen, nscen0}, {n, nstap}, {r, nrdpop}, {d, nd}, {g, ng}, {ri, ncrsel[[r]]}];

	Do[hRRdis[[scen, n, d, d1, g]] *= Times@@Table[Plus@@(meanRMrisk[[scen, n, r, d, g]] meanRMrisk[[scen, n, r, d1, g]] *
								hprisk[[scen, n, r, g]]),
							{r, nrdpop}],
		{scen, nscen0}, {n, nstap}, {d, nd}, {d1, nd}, {g, ng}];

	(* ADJUSTMENT FOR JOINT RISK FACTORS WORKING WITHIN DISEASE, E.G. HBA1C WITHIN DIABETICS *)

printbug["7.1.8"];

	meanRMrisk = Table[Plus@@(meanRRrisk[[nrdpop + r, d, g]] hprisk[[scen, n, nrdpop + r, g]]) /
					Plus@@(meanRRrisk[[nrdpop + r, d, g]] hprisksel[[r, g]]),
				 {scen, nscen0}, {n, nstap}, {r, nrddis}, {d, nd}, {g, ng}];

printbug["7.1.9"];

	Do[If[(d1 != disindinv[[disriskindddis[[r]]]]),
 
       			Do[hRRdis[[scen, n, disindinv[[disriskindddis[[r]]]], d1, g]] *=
					(1 + hpdis[[scen, n, disindinv[[disriskindddis, r]], g]] (meanRMrisk[[scen, n, r, d1, g]] - 1)),
				{scen, nscen0}, {n, nstap}, {g, ng}]],

		{r, nrddis}];

	If[(agespecres <= 1),

		(* VALUES AVERAGED OVER TOTAL POPULATION *)

printbug["7.1.10"];

		resdis = Table[Plus@@(hpdis[[scen, n, d1, g]] hnpop[[scen, g, n]] *
				If[(d1 == d),
					1,
					hRRdis[[scen, n, d, d1, g]] / (1 + hpdis[[scen, n, d, g]] (hRRdis[[scen, n, d, d1, g]] - 1))
					]) /
					Plus@@hnpop[[scen, g, n]],
				{d, nd}, {scen, nscen0}, {d1, nd}, {g, ng}, {n, nstap}],

		(* VALUES SPECIFIED BY AGE CLASS *)

printbug["7.1.11"];

		resdis = Table[aggregc[hpdis[[scen, n, d1, g]] hnpop[[scen, g, n]] *
					If[(d1 == d),
						1,
						hRRdis[[scen, n, d, d1, g]] / (1 + hpdis[[scen, n, d, g]] (hRRdis[[scen, n, d, d1, g]] - 1))
						] , 1, 7] /
					aggregc[hnpop[[scen, g, n]], 1, 7],
				{d, nd}, {scen, nscen0}, {d1, nd}, {g, ng}, {n, nstap}]

		];

	(* DISEASE PREVALENCE RATES WITHIN SAME DISEASE EQUALS VALUE 1 *)

printbug["7.1.12"];

	Do[resdis[[d, Range[nscen0], d]] = 1 + 0 resdis[[d, Range[nscen0], d]], {d, nd}];

	{resrisk, resdis}

	]; (* END MAKERESRISKDIS0 *)

(* GENERATES RISK FACTOR CLASS PREVALENCE RATES WITHIN DISEASED PATIENTS FROM JOINT MODELS ON TOTAL POPULATION *)

makeresriskdis1[dat_] := Block[{},

printbug["7.2"];

	resrisk	= Table[0, {nd}, {nscen0}, {r, nrd}, {ng}, {ncrsel[[r]]}, {nstap}];

printbug["7.2.1"];

	Do[	(* STATES OF PERSONS WITH DISEASE d *)

		disset 	= zinddis[[d, 2]];

printbug["7.2.2"];

		Do[	(* STATES OF PERSONS WITH DISEASE d AND IN CLASS ri OF RISK FACTOR r *)

			currdis	= Intersection[zindrisk[[r, ri]], disset];

			Do[	resdis	= If[(agespecres <= 1),

					Plus@@Flatten[dat[[scenlist[[scen]], n, g, disset]]],

					aggregc[Plus@@(Plus@@dat[[scenlist[[scen]], n, g, disset]]), 1, 7]];

				(* PROPORTION OF DISEASED PERSONS IN RISK FACTOR CLASS *)

				resrisk[[d, scen, r, g, ri, n]] = If[(agespecres <= 1),

					Plus@@Flatten[dat[[scenlist[[scen]], n, g, currdis]]],

					aggregc[Plus@@(Plus@@dat[[scenlist[[scen]], n, g, currdis]]), 1, 7]] / (resdis + eps),

				{scen, nscen0}, {g, ng}, {n, nstap}],

			{r, nrd}, {ri, ncrsel[[r]]}],
				
		{d, nd}];

	resrisk

	];

(* GENERATES DISEASE PREVALENCE RATES WITHIN DISEASED PATIENTS FROM JOINT MODELS ON TOTAL POPULATION *)

makeresdisdis1[dat_] := Block[{},

printbug["7.3"];

	resdis	= Table[0, {nd}, {nscen0}, {nd}, {ng}, {nstap}];

printbug["7.3.1"];

	Do[	(* STATES OF PERSONS WITH DISEASE d *)

		disset 	= zinddis[[d, 2]];

printbug["7.3.2"];

		Do[	(* STATES OF PERSONS WITH DISEASE d AND IN DISEASE d1 *)

			currdis	= Intersection[zinddis[[d1, 2]], disset];

			Do[	resdis1	= If[(agespecres <= 1),

					Plus@@Flatten[dat[[scenlist[[scen]], n, g, disset]]],

					aggregc[Plus@@(Plus@@dat[[scenlist[[scen]], n, g, disset]]), 1, 7]];

				(* PROPORTION OF DISEASED PERSONS IN RISK FACTOR CLASS *)

				resdis[[d, scen, d1, g, n]] = If[(agespecres <= 1),

					Plus@@Flatten[dat[[scenlist[[scen]], n, g, currdis]]],

					aggregc[Plus@@(Plus@@dat[[scenlist[[scen]], n, g, currdis]]), 1, 7]] / (resdis1 + eps),

				{scen, nscen0}, {g, ng}, {n, nstap}],

			{d1, nd}],
				
		{d, nd}];

	resdis

	];

(* GENERATES RISK FACTOR CLASS PREVALENCE RATES WITHIN DISEASED PATIENTS FROM JOINT MODELS STRATIFIED BY AGE *)

makeresriskdis2[dat_] := Block[{},

printbug["7.4"];

	(* MARGINAL DISEASE PREVALENCE NUMBERS *)

	resdis	= Table[0, {nd}, {nscen}, {ng}, {nstap}, {na2}];

printbug["7.4.1"];

	Do[	disset	= zinddis[[d, 2]];

		Do[resdis[[d, scen, g, n, agesel[[a1]] + n - 1]] += Plus@@Flatten[dat[[scen, g, a1, n, disset]]],
			{scen, nscen}, {g, ng}, {n, nstap}, {a1, Length[agesel]}],

		{d, nd}];

	resdis	= Table[Plus@@resdis[[d, scenlist[[scen]]]], {d, nd}, {scen, nscen0}];

	resdis	= Table[Flatten[{resdis[[d, scen, g, n, Range[na]]], Plus@@Drop[resdis[[d, scen, g, n]], na]}],
			{d, nd}, {scen, nscen0}, {g, ng}, {n, nstap}];

	(* RISK FACTOR CLASS PREVALENCE NUMBERS WITHIN DISEASED POPULATION *)

printbug["7.4.2"];

	resrisk	= Table[0, {nd}, {nscen}, {r, nrd}, {ng}, {ncrsel[[r]]}, {nstap}, {na2}];

	Do[	disset = Intersection[zinddis[[d, 2]], zindrisk[[r, ri]]];

		Do[resrisk[[d, scen, r, g, ri, n, agesel[[a1]] + n - 1]] += Plus@@Flatten[dat[[scen, g, a1, n, disset]]],
			{scen, nscen0}, {g, ng}, {n, nstap}, {a1, Length[agesel]}],

		{d, nd}, {r, nrd}, {ri, ncrsel[[r]]}];

	resrisk	= Table[Plus@@resrisk[[d, scenlist[[scen]]]], {d, nd}, {scen, nscen0}];

	resrisk	= Table[Flatten[{resrisk[[d, scen, r, g, ri, n, Range[na]]], Plus@@Drop[resrisk[[d, scen, r, g, ri, n]], na]}],
			{d, nd}, {scen, nscen0}, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}, {n, nstap}];

	(* TRANSFORMED TO PROPORTIONS *)

printbug["7.4.3"];

	resrisk = If[(agespecres <= 1),

			Table[Plus@@resrisk[[d, scen, r, g, ri, n]] / (Plus@@resdis[[d, scen, g, n]] + eps),
				{d, nd}, {scen, nscen0}, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}, {n, nstap}],


			Table[aggregc[resrisk[[d, scen, r, g, ri, n]], 1, 7] / (aggregc[resdis[[d, scen, g, n]], 1, 7] + eps),
				{d, nd}, {scen, nscen0}, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}, {n, nstap}]]
		
	];

(* GENERATES DISEASE PREVALENCE RATES WITHIN DISEASED PATIENTS FROM JOINT MODELS STRATIFIED BY AGE *)

makeresdisdis2[dat_] := Block[{},

printbug["7.5"];

	(* MARGINAL DISEASE PREVALENCE NUMBERS *)

printbug["7.5.1"];

	resdis	= Table[0, {nd}, {nscen}, {ng}, {nstap}, {na2}];

	Do[	disset	= zinddis[[d, 2]];

		Do[resdis[[d, scen, g, n, agesel[[a1]] + n - 1]] += Plus@@Flatten[dat[[scen, g, a1, n, disset]]],
			{scen, nscen}, {g, ng}, {n, nstap}, {a1, Length[agesel]}],

		{d, nd}];

	resdis	= Table[Plus@@resdis[[d, scenlist[[scen]]]], {d, nd}, {scen, nscen0}];

	resdis	= Table[Flatten[{resdis[[d, scen, g, n, Range[na]]], Plus@@Drop[resdis[[d, scen, g, n]], na]}],
			{d, nd}, {scen, nscen0}, {g, ng}, {n, nstap}];

	(* DISEASE PREVALENCE NUMBERS WITHIN DISEASED POPULATION *)

printbug["7.5.2"];

	resdis1	= Table[0, {nd}, {nscen}, {nd}, {ng}, {nstap}, {na2}];

	Do[	disset = Intersection[zinddis[[d, 2]], zinddis[[d1, 2]]];

		Do[resdis1[[d, scen, d1, g, n, agesel[[a1]] + n - 1]] += Plus@@Flatten[dat[[scen, g, a1, n, disset]]],
			{scen, nscen0}, {g, ng}, {n, nstap}, {a1, Length[agesel]}],

		{d, nd}, {d1, nd}];

	resdis1	= Table[Plus@@resdis1[[d, scenlist[[scen]]]], {d, nd}, {scen, nscen0}];

	resdis1	= Table[Flatten[{resdis1[[d, scen, d1, g, n, Range[na]]], Plus@@Drop[resdis1[[d, scen, d1, g, n]], na]}],
			{d, nd}, {scen, nscen0}, {d1, nd}, {g, ng}, {n, nstap}];

	(* TRANSFORMED TO PROPORTIONS *)

printbug["7.5.3"];

	resdis1 = If[(agespecres <= 1),

			Table[Plus@@resdis1[[d, scen, d1, g, n]] / (Plus@@resdis[[d, scen, g, n]] + eps),
				{d, nd}, {scen, nscen0}, {d1, nd}, {g, ng}, {n, nstap}],


			Table[aggregc[resdis1[[d, scen, d1, g, n]], 1, 7] / (aggregc[resdis[[d, scen, g, n]], 1, 7] + eps),
				{d, nd}, {scen, nscen0}, {d1, nd}, {g, ng}, {n, nstap}]]
		
	];

(* GENERATES RISK FACTOR CLASS PREVALENCE RATES WITHIN DISEASED PATIENTS FROM JOINT MODELS STRATIFIED BY INDIVIDUALS *)

makeresriskdis3[dat_] := Block[{},

printbug["7.6"];

	(* MARGINAL DISEASE PREVALENCE NUMBERS *)

printbug["7.6.1"];

	nstap1 	= Table[Plus@@Flatten[Sign[dat[[scen, g, a1, b, 4]]]],
			{scen, nscen}, {g, ng}, {a1, Length[agesel]}, {b, ndraw}] / nz;

	resdis	= Table[0, {nd}, {nscen}, {ng}, {nstap}, {na2}];

	Do[If[(dat[[scen, g, a1, b, 4, n, nrd + d]] == 2), ++resdis[[d, scen, g, n, agesel[[a1]] + n - 1]]],
			{scen, nscen0}, {g, ng}, {a1, Length[agesel]}, {b, ndraw}, {n, nstap1[[scen, g, a1, b]]}, {d, nd}];

	resdis	= Table[Plus@@resdis[[d, scenlist[[scen]]]], {d, nd}, {scen, nscen0}];

	resdis	= Table[Flatten[{resdis[[d, scen, g, n, Range[na]]], Plus@@Drop[resdis[[d, scen, g, n]], na]}],
			{d, nd}, {scen, nscen0}, {g, ng}, {n, nstap}];

	(* RISK FACTOR CLASS PREVALENCE NUMBERS WITHIN DISEASED POPULATION *)

printbug["7.6.2"];

	resrisk	= Table[0, {nd}, {nscen}, {r, nrd}, {ng}, {ncrsel[[r]]}, {nstap}, {na2}];

	Do[If[(dat[[scen, g, a1, b, 4, n, r]] == ri) && (dat[[scen, g, a1, b, 4, n, nrd + d]] == 2),
				++resrisk[[d, scen, r, g, ri, n, agesel[[a1]] + n - 1]]],
			{scen, nscen}, {g, ng}, {a1, Length[agesel]}, {b, ndraw}, {n, nstap1[[scen, g, a1, b]]},
			{r, nrd}, {ri, ncrsel[[r]]}, {d, nd}];

	resrisk	= Table[Plus@@resrisk[[d, scenlist[[scen]]]], {d, nd}, {scen, nscen0}];
 
	resrisk	= Table[Flatten[{resrisk[[d, scen, r, g, ri, n, Range[na]]], Plus@@Drop[resrisk[[d, scen, r, g, ri, n]], na]}],
			{d, nd}, {scen, nscen0}, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}, {n, nstap}];

	(* TRANSFORMED TO PROPORTIONS *)

printbug["7.6.3"];

	resrisk = If[(agespecres <= 1),

			Table[Plus@@resrisk[[d, scen, r, g, ri, n]] / (Plus@@resdis[[d, scen, g, n]] + eps),
				{d, nd}, {scen, nscen0}, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}, {n, nstap}],

			Table[aggregc[resrisk[[d, scen, r, g, ri, n]], 1, 7] / (aggregc[resdis[[d, scen, g, n]], 1, 7] + eps),
				{d, nd}, {scen, nscen0}, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}, {n, nstap}]]
		
	];

(* GENERATES DISEASE PREVALENCE RATES WITHIN DISEASED PATIENTS FROM JOINT MODELS STRATIFIED BY INDIVIDUALS *)

makeresdisdis3[dat_] := Block[{},

printbug["7.7"];

	(* MARGINAL DISEASE PREVALENCE NUMBERS *)

printbug["7.7.1"];

	nstap1 	= Table[Plus@@Flatten[Sign[dat[[scen, g, a1, b, 4]]]],
			{scen, nscen}, {g, ng}, {a1, Length[agesel]}, {b, ndraw}] / nz;

	resdis	= Table[0, {nd}, {nscen}, {ng}, {nstap}, {na2}];

	Do[If[(dat[[scen, g, a1, b, 4, n, nrd + d]] == 2), ++resdis[[d, scen, g, n, agesel[[a1]] + n - 1]]],
			{scen, nscen0}, {g, ng}, {a1, Length[agesel]}, {b, ndraw}, {n, nstap1[[scen, g, a1, b]]}, {d, nd}];

	resdis	= Table[Plus@@resdis[[d, scenlist[[scen]]]], {d, nd}, {scen, nscen0}];

	resdis	= Table[Flatten[{resdis[[d, scen, g, n, Range[na]]], Plus@@Drop[resdis[[d, scen, g, n]], na]}],
			{d, nd}, {scen, nscen0}, {g, ng}, {n, nstap}];

	(* RISK FACTOR CLASS PREVALENCE NUMBERS WITHIN DISEASED POPULATION *)

printbug["7.7.2"];

	resdis1	= Table[0, {nd}, {nscen}, {nd}, {ng}, {nstap}, {na2}];

	Do[If[(dat[[scen, g, a1, b, 4, n, nrd + d1]] == 2) && (dat[[scen, g, a1, b, 4, n, nrd + d]] == 2),
				++resdis1[[d, scen, d1, g, n, agesel[[a1]] + n - 1]]],
			{scen, nscen}, {g, ng}, {a1, Length[agesel]}, {b, ndraw}, {n, nstap1[[scen, g, a1, b]]}, {d1, nd}, {d, nd}];

	resdis1	= Table[Plus@@resdis1[[d, scenlist[[scen]]]], {d, nd}, {scen, nscen0}];
 
	resdis1	= Table[Flatten[{resdis1[[d, scen, d1, g, n, Range[na]]], Plus@@Drop[resdis1[[d, scen, d1, g, n]], na]}],
			{d, nd}, {scen, nscen0}, {d1, nd}, {g, ng}, {n, nstap}];
 
	(* TRANSFORMED TO PROPORTIONS *)

printbug["7.7.3"];

	resdis1 = If[(agespecres <= 1),

			Table[Plus@@resdis1[[d, scen, d1, g, n]] / (Plus@@resdis[[d, scen, g, n]] + eps),
				{d, nd}, {scen, nscen0}, {d1, nd}, {g, ng}, {n, nstap}],

			Table[aggregc[resdis1[[d, scen, d1, g, n]], 1, 7] / (aggregc[resdis[[d, scen, g, n]], 1, 7] + eps),
				{d, nd}, {scen, nscen0}, {d1, nd}, {g, ng}, {n, nstap}]]
		
	];

(* RISK FACTOR AND DISEASE RESULTS FOR ANY MODEL *)

makeresriskdis[m_] := Block[{},

printbug["7.8"];

	(* MODEL RESULTS *)

	dat = Switch[m,
			1, resmarginalmodeldetermpop,
			2, Drop[ReadList[Global`outputpath <> "jointmodeldetermpopprev.m"], 1],
			3, Drop[ReadList[Global`outputpath <> "jointmodeldetermageprev.m"], 1],
			4, Drop[ReadList[Global`outputpath <> "jointmodelstochindprev.m"], 1],
			_, {}
			];

	(* RESULTS FROM MODELS ON TOTAL POPULATION *)

	If[(MemberQ[{1}, m]),

printbug["7.8.1"];

		hres	= makeresriskdis0[dat];
		resrisk	= hres[[1]];
		resdis	= hres[[2]]];
		
	If[(MemberQ[{2, 6}, m]),

printbug["7.8.2"];

		dat 	= Partition[dat, nstap];
		resrisk = makeresriskdis1[dat];
		resdis	= makeresdisdis1[dat]];
		
	If[(MemberQ[{3, 7}, m]),

printbug["7.8.3"];

		dat 	= Partition[Partition[Partition[dat, nstap], Length[agesel]], ng];
		resrisk = makeresriskdis2[dat];
		resdis	= makeresdisdis2[dat]];

	If[(MemberQ[{4}, m]),

printbug["7.8.4"];

		dat[[All, 4]] = makezvalinv[dat[[All, 4]]];
		dat 	= Partition[Partition[Partition[dat, ndraw], Length[agesel]], ng];
		resrisk	= makeresriskdis3[dat];
		resdis	= makeresdisdis3[dat]];

	{resrisk, resdis}
			
	];


(* --------------------------------------------------
	CONSTRUCTION OF GRAPHICAL OUTPUT
----------------------------------------------------*)

If[((graphicoutput == 1) || (tabeloutput == 1)) && MemberQ[{0, 3, 4}, analyse],

printbug["9."];

	If[(outputfile == 1),

printbug["9.1"];

		date 		= ToString[Date[][[3]]] <> "-" <> ToString[Date[][[2]]] <> "-" <> ToString[Date[][[1]]];

		time 		= ToString[Date[][[4]]] <> "h" <> ToString[Date[][[5]]];

		resmodeltxt	= Global`outputpath <> "results" <> date <> "_" <> time <> ".txt";

		resmodelfile	= OpenWrite[resmodeltxt]];

	

	If[(outputnotebook == 1), cellnb = {headingprintnb["graphical & tabular results of one model run"]}];

	(* PRESENTING RESULTS FOR EACH CZM MODEL VERSION SELECTED *)

	Do[	If[(modelsel[[m]] == 1),

printbug["9.2"];

			(* RESULTS FOR BASELINE SCENARIO *)

			eachname1[m];
			presentnumbers[resmodel[[m]], 0];

			(* DIFFERENCES WITH BASELINE SCENARIO *)

			If[(nscen0 > 1),
				diffname1[m];
				presentnumbers[resmodel[[m]], 1]]
			],

		{m, nmodel}];
	
	(* PRESENTING RESULTS FOR ALL CZM MODEL VERSIONS SELECTED *)

	hmodelsel = Select[modelsel Range[Length[modelsel]], Positive];

	If[(Length[hmodelsel] > 1),

printbug["9.3"];

			(* RESULTS FOR BASELINE SCENARIO *)
	
			presentdiffnumbers[resmodel[[hmodelsel]], 0];

			(* DIFFERENCES WITH BASELINE SCENARIO *)

			If[(nscen0 > 1), presentdiffnumbers[resmodel[[hmodelsel]], 1]]

		];

	If[(withindisease == 1),

printbug["9.4"];

		Do[	If[(modelsel[[m]] == 1) && (MemberQ[{1, 2, 3, 4}, m]),

printbug["9.4.1"];

				str 	= modelnames[[m]];
				str1[d_] := " within " <> disnames[[disind[[d]]]];
				hres	= makeresriskdis[m];
				resrisk	= hres[[1]];
				resdis 	= hres[[2]];

				(* RESULTS FOR BASELINE SCENARIO *)

				(* GRAPHICAL OUTPUT IN NOTEBOOK *)
				
				If[(outputnotebook == 1),
printbug["9.4.2"];
					addcellnb[headingprint1nb[str]];			
					Do[addcellnb[plotrisknb[resrisk[[d, {1}]], outputnames[[2]] <> str1[d], 0]],	{d, nd}];
					Do[addcellnb[plotdisnb[resdis[[d, {1}]], outputnames[[4]] <> str1[d], 0]], {d, nd}]];

				(* TABEL OUTPUT IN OUTPUTFILE *)

				If[(outputfile == 1) && (tabeloutput == 1),
printbug["9.4.3"];
					WriteString[resmodelfile, str <> "\n\n"];
					Do[	WriteString[resmodelfile, outputnames[[2]] <> str1[d] <> basescenstr <> "\n\n"];
						Do[	WriteString[resmodelfile, risknames[[riskind[[r]]]] <> gennames[[g]] <> "\n\n"];
							Export[resmodelfile, resrisk[[d, 1, r, g]], "Table"];
							WriteString[resmodelfile, "\n\n"],
							{r, nrd}, {g, ng}],
						{d, nd}];

					WriteString[resmodelfile, "\n\n"];
printbug["9.4.4"];
					Do[	WriteString[resmodelfile, outputnames[[4]] <> str1[d] <> basescenstr <> "\n\n"];
						Do[	WriteString[resmodelfile, disnames[[disind[[d1]]]] <> "\n\n"];				
							Export[resmodelfile, resdis[[d, 1, d1]], "Table"];
							WriteString[resmodelfile, "\n\n"],
							{d1, nd}],
						{d, nd}];

					WriteString[resmodelfile, "\n\n"]];
					
				If[(nscen0 > 1),
printbug["9.4.5"];
					(* DIFFERENCES WITH BASELINE SCENARIO *)

					resrisk	= Table[resrisk[[d, scen]] - resrisk[[d, 1]], {d, nd}, {scen, 2, nscen0}];			
					resdis	= Table[resdis[[d, scen]] - resdis[[d, 1]], {d, nd}, {scen, 2, nscen0}];			

					(* GRAPHICAL OUTPUT IN NOTEBOOK *)

					If[(outputnotebook == 1),
printbug["9.4.6"];	
						Do[addcellnb[plotrisknb[resrisk[[d]], outputnames[[2]] <> str1[d], 1]], {d, nd}];
						Do[addcellnb[plotdisnb[resdis[[d]], outputnames[[4]] <> str1[d], 1]], {d, nd}]];

					(* TABEL OUTPUT IN OUTPUTFILE *)

					If[(outputfile == 1) && (tabeloutput == 1),
printbug["9.4.7"];
						Do[	WriteString[resmodelfile, outputnames[[2]] <> str1[d] <> compscenstr <> "\n\n"];
							Do[	WriteString[resmodelfile, risknames[[riskind[[r]]]] <> gennames[[g]] <>
										"\n\n"];
								Export[resmodelfile, resrisk[[d, scen, r, g]], "Table"];
								WriteString[resmodelfile, "\n\n"],
								{r, nrd}, {scen, nscen0 - 1}, {g, ng}],
							{d, nd}];

						WriteString[resmodelfile, "\n\n"];
printbug["9.4.8"];
						Do[	WriteString[resmodelfile, outputnames[[4]] <> str1[d] <> compscenstr <> "\n\n"];
							Do[	WriteString[resmodelfile, disnames[[disind[[d1]]]] <> "\n\n"];
								Export[resmodelfile, resdis[[d, scen, d1]], "Table"];
								WriteString[resmodelfile, "\n\n"],
								{d1, nd}, {scen, nscen0 - 1}],
							{d, nd}];

						WriteString[resmodelfile, "\n\n"]]
						
					] (* NSCEN0>1*)

				],

			{m, nmodel}];

		Do[	If[(modelsel[[m1]] == 1) && (modelsel[[m2]] == 1) && (MemberQ[{1, 2, 3, 4}, m1]) && (MemberQ[{2, 3, 4}, m2]),
printbug["9.4.9"];
				hres 	= makeresriskdis[m2] - makeresriskdis[m1];
				resrisk	= hres[[1]];
				resdis	= hres[[2]];

				(* RESULTS FOR BASELINE SCENARIO *)

				(* GRAPHICAL OUTPUT IN NOTEBOOK *)

				If[(outputnotebook == 1),
printbug["9.4.10"];
					str = modelnames[[m1]] <> " compared to " <> modelnames[[m2]];
					addcellnb[headingprint1nb[str]];			
	
					Do[addcellnb[plotrisknb[resrisk[[d, {1}]],
								outputnames[[2]] <> " within " <> disnames[[disind[[d]]]], 0]],
						{d, nd}]];

				If[(nscen0 > 1),
printbug["9.4.11"];
					(* DIFFERENCES WITH BASELINE SCENARIO *)

					resrisk = Table[resrisk[[d, scen]] - resrisk[[d, 1]], {d, nd}, {scen, 2, nscen0}];

					(* GRAPHICAL OUTPUT IN NOTEBOOK *)
					
					If[(outputnotebook == 1),
	
						Do[addcellnb[plotrisknb[resrisk[[d]],
									outputnames[[2]] <> " within " <> disnames[[disind[[d]]]], 1]],
							{d, nd}]]					

					] (* NSCEN0>1*)

				],

			{m1, nmodel - 1}, {m2, m1 + 1, nmodel}]
		];
	
	If[(outputnotebook == 1), NotebookWrite[nbout, Flatten[cellnb]]]

	];


(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];

End[]


Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMSensitivityAnalyses *)

(* :Context: CZMPostProcessing` *)

(* :Author: Rudolf T. Hoogenveen, Roel G.M. Breuls, Maiwenn Al *)

(* :Summary:
   CZM postprocessing routine presents results from sensitivity analyses *)

(* :Copyright: © 2004 by Rudolf Hoogenveen *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	2.0 first release CZM 2005, version March
		3.0 version november 2005 
		3.1 version March 2007 *)

(* :Keywords: postprocessing, plots *)


BeginPackage["CZMPostProcessing`CZMSensitivityAnalyses`",
	{"CZMInitialization`CZMLogFile`",
	"CZMInitialization`CZMConstants`",
	"CZMInitialization`CZMFunctions`", 
	"CZMImportData`CZMImportUserSelections`",
	"CZMImportData`CZMImportCosts`",
	"CZMImportData`CZMImportDALYs`",
	"CZMAdjustData`CZMMakeSelections`",
	"CZMSimulation`CZMSimulationFunctions`",
	"CZMDefineScenarios`CZMDefineScenarios`",
	"CZMSimulation`CZMSimulationMarginalModelDetermPop`",
	"CZMSimulation`CZMSimulationJointModelDetermPop`",
	"CZMSimulation`CZMSimulationJointModelDetermAge`",
	"CZMSimulation`CZMSimulationJointModelStochInd`",
	"CZMPostProcessing`CZMExportUserSelections`",
	"CZMPostProcessing`CZMCalcResults`"}]


Begin["`Private`"]


Print["CZMSensitivityAnalyses package is evaluated"];
printtijd;

printbug[c_] := If[(bugind == 1), Print[{"CZMSensitivityAnalyses", c}]];


(* --------------------------------------------------
	GENERAL ROUTINES
----------------------------------------------------*)

printbug["1."];

(* PLOTTING SETUP VALUES *)

printbug["1.1"];

imagesize	= 175;
stdaxislabel 	= {"time", ""};
stdlabel[r_, ri_] := risknames[[riskindd]][[r]] <> "class " <> ToString[ri];

(* NAMES OF SENSITIVITY INPUT PARAMETERS *)

printbug["1.2"];

riskclasstrans 	= Table[Plus@@Flatten[

				Table[If[(transriskindsel[[r, ri, rj]] == trs),
						{ri, rj},
						{0, 0}],
					{ri, ncrsel[[r]]}, {rj, ncrsel[[r]]}],
				1],
			{r, nrd}, {trs, 2, Max[transriskindsel[[r]]]}];

printbug["1.3"];

scennames = {};

If[(sensparameters[[1]] == 1),

	scennames = Flatten[{scennames,
			Table[risknames[[riskindd[[r]]]] <> " prev " <>	ToString[ri], {r, nrd}, {ri, ncrsel[[r]]}]}]];

If[(sensparameters[[2]] == 1),

	scennames = Flatten[{scennames, Table[risknames[[riskindd[[r]]]] <> ToString[riskclasstrans[[r, ri, 1]]] <> "->" <>
							ToString[riskclasstrans[[r, ri, 2]]],
			 			{r, nrd}, {ri, Length[riskclasstrans[[r]]]}]}]]; 

If[(sensparameters[[3]] == 1),

	scennames = Flatten[{scennames, Table[risknames[[riskindc[[r]]]] <> " mu", {r, nrc}],
						Table[risknames[[riskindc[[r]]]] <> " sigma", {r, nrc}]}]];

If[(sensparameters[[4]] == 1),

	scennames = Flatten[{scennames, Table[risknames[[riskindc[[r]]]] <> " deterministic change (intercept)", {r, nrc}],
						Table[risknames[[riskindc[[r]]]] <> " deterministic change (regression)", {r, nrc}]}]];

If[(sensparameters[[5]] == 1), 

	scennames = Flatten[{scennames, Table[disnames[[disind[[d]]]] <> " incidence", {d, nd}]}]];

If[(sensparameters[[6]] == 1), 

	scennames = Flatten[{scennames, Table[disnames[[disind[[d]]]] <> " excess mort", {d, nd}]}]];

If[(sensparameters[[7]] == 1), 

	scennames = Flatten[{scennames, Table[disnames[[disind[[d]]]] <> " case fatality", {d, nd}]}]];

If[(sensparameters[[8]] == 1),

	scennames = Flatten[{scennames, Table["(discrete) RR" <> risknames[[riskindd[[r]]]], {r, nrd}]}]];

If[(sensparameters[[9]] == 1), 

	scennames = Flatten[{scennames, Table["(continuous) RR" <> risknames[[riskindc[[r]]]], {r, nrc}]}]];

If[(sensparameters[[10]] == 1),	

	scennames = Flatten[{scennames, "tracking of risk factors"}]];

If[(sensparameters[[11]] == 1),	

	scennames = Flatten[{scennames, "RR's one dis on another dis incidence"}]];

If[(sensparameters[[12]] == 1), 

	scennames = Flatten[{scennames,	"RR's one dis on another dis case fatality"}]];	
		
If[(sensparameters[[13]] == 1), 

	scennames = Flatten[{scennames,	"relapsecoef 1", "relapsecoef 2"}]];

If[(sensparameters[[14]] == 1), 

	scennames = Flatten[{scennames,	"event regression coef 1", "event regression coef 2"}]];


(* --------------------------------------------------
	PRINTING ROUTINES FOR EVENT NUMBERS (EXCL LE) FOR EACH MODEL TYPE: SUB-ROUTINES
----------------------------------------------------*)

printbug["2."];

(* PRINTS NAME OF OUTPUT VARIABLE AND SCENARIO SPECIFICATIONS *)

resname[t_, diffscen_] := Block[{},

	str = outputnames[[t]] <> " differences with baseline input value " <>
		If[(diffscen == 0), "for baseline scenario", "difference with baseline scenario"];

	addcellnb[headingprint2nb[str]]];


(* PRINTS RESULTS: TOTAL POPULATION NUMBERS *)

printrespop[respop_, diffscen_] :=
	
	Do[	str = "input " <> scennames[[draw]] <>
			If[(diffscen == 0), " for baseline scenario", " difference with baseline scenario"];

		addcellnb[headingprint3nb[str]];			

		addcellnb[Cell[BoxData[ToBoxes[respop[[draw]] // TableForm]], "Subsection"]],

		{draw, Length[respop]}];


(* PRINTS RESULTS: RISK FACTOR CLASS PREVALENCE NUMBERS *)

printresrisk[resrisk_, diffscen_] :=

	Do[	str = "input "<> scennames[[draw]] <> " on " <> risknames[[riskindd[[r]]]] <> " "<> gennames[[g]] <>
			If[(diffscen == 0), "for baseline scenario", "difference with baseline scenario"];

		addcellnb[headingprint3nb[str]];					
			
		addcellnb[Cell[BoxData[ToBoxes[resrisk[[draw, r, g]] // TableForm]], "Subsection"]],

		{draw, Length[resrisk]}, {r, nrd}, {g, ng}];


(* PRINTS RESULTS: DISEASE (PREVALENCE, INCIDENCE, MORTALITY) NUMBERS *)

printresdis[resdis_, diffscen_] :=

	Do[	str = "input "<> scennames[[draw]] <> " on " <> mortnames[[d]] <>
			If[(diffscen == 0), "for baseline scenario", "difference with baseline scenario"];

		addcellnb[headingprint3nb[str]];					

		addcellnb[Cell[BoxData[ToBoxes[resdis[[draw, d]] // TableForm]], "Subsection"]],

		{draw, Length[resdis]}, {d, Length[resdis[[1]]]}];


(* --------------------------------------------------
	PLOTTING RESULTS IN POPULATION NUMBER FORMAT
----------------------------------------------------*)

printbug["3."];
		
plotpopnb[respop_, names_] := Block[{},

	hndraw 	= Length[respop];

	{
	Table[	{
		headingprint3nb[" gender " <> gennames[[g]]],
		Table[	Cell[	GraphicsData[
					"PostScript",
					DisplayString[
						GraphicsArray[
							Table[	ListPlot[respop[[draw2, g]],
									DisplayFunction -> Identity, 
									PlotLabel 	-> names[[draw2]], 
									PlotJoined 	-> True,  
									TextStyle 	-> stdtextstyle,
									AxesLabel 	-> stdaxislabel],
							     	{draw2, 4 draw1 + 1, Min[{4 draw1 + 4, hndraw}]}]
							]
						]
					],
				"Subsection",
				ImageSize -> ( Min[{4 draw1 + 4, hndraw}] - (4 draw1) ) imagesize
				],
			{draw1, 0, Floor[(hndraw - 1) / 4]}]
		},
	{g, ng}]
	}

	];


(* --------------------------------------------------
	PLOTTING RESULTS IN RISK FACTOR CLASS PREVALENCE NUMBER FORMAT
----------------------------------------------------*)

plotrisknb[resrisk_, names_]:= Block[{},

	hndraw 	= Length[resrisk];

	{
	Table[	{
		headingprint3nb[" gender " <> gennames[[g]] <> " risk factor " <> risknames[[riskindd[[r]]]] <>
			" class  " <> ToString[ri]],

		Table[	Cell[	GraphicsData[
						"PostScript",
						DisplayString[
							GraphicsArray[
								Table[	ListPlot[resrisk[[draw2, r, g, ri]],
										DisplayFunction -> Identity, 
										PlotLabel 	-> names[[draw2]],
										PlotJoined 	-> True,
										TextStyle 	-> stdtextstyle,
										AxesLabel 	-> stdaxislabel],
									{draw2, 4 draw1 + 1, Min[{4 draw1 + 4, hndraw}]}]
								]
							]
						],
				"Subsection",
				ImageSize -> ( Min[{4 draw1 + 4, hndraw}] - (4 draw1) ) imagesize
				],
			{draw1, 0, Floor[(hndraw - 1) / 4]}]
		},
	{g, ng}, {r, nrd}, {ri, ncrsel[[r]]}]
	}

	];


(* --------------------------------------------------
	PLOTTING RESULTS IN DISEASE PREVALENFCE NUMBER FORMAT
----------------------------------------------------*)

plotdisnb[resdis_, names_]:= Block[{},

	hndraw 	= Length[resdis];
	nd1 	= Length[resdis[[1]]];

	{
	Table[	{
		headingprint3nb[" gender " <> gennames[[g]] <> " disease " <> mortnames[[d]]],
		Table[	Cell[	GraphicsData[
					"PostScript",
					DisplayString[
   						GraphicsArray[
							Table[	ListPlot[resdis[[draw2, d, g]],
									DisplayFunction -> Identity, 
									PlotLabel 	-> names[[draw2]], 
									PlotJoined 	-> True, 
									TextStyle 	-> stdtextstyle,
									AxesLabel 	-> stdaxislabel],
								{draw2, 4 draw1 + 1, Min[{4 draw1 + 4, hndraw}]}]
								]
							]
						],
				"Subsection",
				ImageSize -> ( Min[{4 draw1 + 4, hndraw}] - (4 draw1) ) imagesize
				],
			{draw1, 0, Floor[(hndraw - 1) / 4]}]
		},

	{g, ng}, {d, Length[resdis[[1]]]}] 
	}

	];


(* --------------------------------------------------
	PRINTING ROUTINES FOR EVENT NUMBERS: GENERIC ROUTINES
----------------------------------------------------*)

printbug["4."];

makedis[resmodel_, outputind_, nd_] := Block[{},

printbug["4.1"];

	ndis	= If[(rates == 0),

				If[(cumulative == 0),

					Table[Plus@@Flatten[resmodel[[outputind, draw, n, d, g]]],
						{draw, ndrawinput}, {d, nd}, {g, ng}, {n, nstap}],

					Table[Plus@@Flatten[resmodel[[outputind, draw, Range[n], d, g]]],
						{draw, ndrawinput}, {d, nd}, {g, ng}, {n, nstap}]],

				Table[Plus@@Flatten[resmodel[[outputind, draw, n, d, g]]] / Plus@@Flatten[resmodel[[1, draw, n, g]]],
					{draw, ndrawinput}, {d, nd}, {g, ng}, {n, nstap}]

			];

printbug["4.1.1"];

	ndis	= Table[(ndis[[draw]] - ndis[[1]]) / (ndis[[1]] + eps) , {draw, 2, ndrawinput}] / deltasens;
	
printbug["4.1.2"];

	resname[outputind, 0];	

	If[(graphicoutput == 1),	

		addcellnb[plotdisnb[ndis, scennames]]];

	If[(tabeloutput == 1),		

		ndis 	= roundoff[ndis, 1000];
		printresdis[ndis, 0]];

printbug["4.1.3"]
		
	];

makedisdiff[resmodel_, scen_, outputind_, nd_] := Block[{},

printbug["4.2"];

	ndis	= If[(rates == 0),

				If[(cumulative == 0),

					Table[Plus@@Flatten[resmodel[[outputind, draw + ndrawinput scen, n, d, g]]] -
							Plus@@Flatten[resmodel[[outputind, draw, n, d, g]]],
						{draw, ndrawinput}, {d, nd}, {g, ng}, {n, nstap}],

					Table[Plus@@Flatten[resmodel[[outputind, draw + ndrawinput scen, Range[n], d, g]]] -
							Plus@@Flatten[resmodel[[outputind, draw, Range[n], d, g]]],
						{draw, ndrawinput}, {d, nd}, {g, ng}, {n, nstap}]],

				Table[Plus@@Flatten[resmodel[[outputind, draw + ndrawinput scen, n, d, g]]] /
						Plus@@Flatten[resmodel[[1, draw + ndrawinput scen, n, g]]] -
						Plus@@Flatten[resmodel[[outputind, draw, n, d, g]]] /
						Plus@@Flatten[resmodel[[1, draw, n, g]]],
					{draw, ndrawinput}, {d, nd}, {g, ng}, {n, nstap}]

			];

printbug["4.2.1"];

	ndis	= Table[(ndis[[draw]] - ndis[[1]]) / (ndis[[1]] + eps) , {draw, 2, ndrawinput}] / deltasens;

printbug["4.2.2"];

	resname[outputind, 1];	

	If[(graphicoutput == 1),
	
		addcellnb[plotdisnb[ndis, scennames]]];

	If[(tabeloutput == 1),		

		ndis 	= roundoff[ndis, 1000];
		printresdis[ndis, 1]];

printbug["4.2.3"]
	
	];
(* --------------------------------------------------
	PRINTING ROUTINES FOR EVENT NUMBERS FOR EACH MODEL TYPE FOR BASELINE SCENARIO: MAIN ROUTINE
----------------------------------------------------*)

printnumbers[resmodel_] := Block[{},

	(* TOTAL POPULATION NUMBERS *)

printbug["4.3"];

	If[(outputsel[[1]] == 1),
					
		npop	= If[(cumulative == 0),

				Table[Plus@@Flatten[resmodel[[1, draw, n, g]]],	{draw, ndrawinput}, {g, ng}, {n, nstap}],
				Table[Plus@@Flatten[resmodel[[1, draw, Range[n], g]]],
					{draw, ndrawinput}, {g, ng}, {n, nstap}]];

printbug["4.3.1"];

		npop	= Table[(npop[[draw]] - npop[[1]]) / (npop[[1]] + eps) , {draw, 2, ndrawinput}] / deltasens;

printbug["4.3.2"];		

		resname[1, 0];	

		If[(graphicoutput == 1),	

			addcellnb[plotpopnb[npop, scennames]]];

		If[(tabeloutput == 1),		

			npop 	= roundoff[npop, 1000];
			printrespop[npop, 0]];

printbug["4.3.3"]

		];

	(* DISCRETELY DISTRIBUTED RISK FACTOR CLASS PREVALENCE NUMBERS OR RATES *)

	If[(nrd > 0) && (outputsel[[2]] == 1),	

printbug["4.4"];

		nrisk = If[(rates == 0),
				
				Table[Plus@@Flatten[resmodel[[2, draw, n, r, g, ri]]],
					{draw, ndrawinput}, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}, {n, nstap}],

				Table[Plus@@Flatten[resmodel[[2, draw, n, r, g, ri]]] /
						Plus@@Flatten[resmodel[[1, draw, n, g]]],
					{draw, ndrawinput}, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}, {n, nstap}]
				];

printbug["4.4.1"];

		nrisk	= Table[(nrisk[[draw]] - nrisk[[1]]) / (nrisk[[1]] + eps) , {draw, 2, ndrawinput}] / deltasens;

printbug["4.4.2"];		

		resname[2, 0];	

		If[(graphicoutput == 1),	

			addcellnb[plotrisknb[nrisk, scennames]]];

		If[(tabeloutput == 1),		

			nrisk 	= roundoff[nrisk, 1000];
			printresrisk[nrisk, 0]];

printbug["4.4.3"]

		];

	(* DISEASE PREVALENCE NUMBERS OR RATES*)

printbug["4.5"];

	If[(nd > 0) && (outputsel[[4]] == 1), 	makedis[resmodel, 4, nd]];					
		
	(* DISEASE INCIDENCE NUMBERS *)

printbug["4.6"];

	If[(nd > 0) && (outputsel[[5]] == 1), 	makedis[resmodel, 5, nd]];

	(* DISEASE MORTALITY NUMBERS *)

printbug["4.7"];

	If[(outputsel[[6]] == 1), 		makedis[resmodel, 6, nd]];

	(* MEAN AGE AT DISEASE ONSET *)

	If[(nd > 0) && (outputsel[[7]] == 1),

printbug["4.8"];

		onsetage = Table[Plus@@Flatten[resmodel[[7, draw, n, d, g]]] / Plus@@Flatten[resmodel[[4, draw, n, d, g]]],
					{draw, ndrawinput}, {d, nd}, {g, ng}, {n, nstap}];

printbug["4.8.1"];

		onsetage = Table[(onsetage[[draw]] - onsetage[[1]]) / (onsetage[[1]] + eps) , {draw, 2, ndrawinput}] /
				deltasens;

printbug["4.8.2"];

		resname[7, 0];	
		
		If[(graphicoutput == 1),	

			addcellnb[plotdisnb[onsetage, scennames]]];

		If[(tabeloutput == 1),		

			onsetage = roundoff[onsetage, 1000];
			printresdis[onsetage, 0]];

printbug["4.8.3"]

		];

	(* MEAN TIME SINCE SMOKING CESSATION *)

	If[(RRsmokduurind == 1) && (outputsel[[8]] == 1),

printbug["4.9"];

		duurstop = Table[Plus@@Flatten[resmodel[[8, draw, n, g]]] / Plus@@Flatten[resmodel[[2, draw, n, 1, g, 3]]],
				{draw, ndrawinput}, {g, ng}, {n, nstap}];

printbug["4.9.1"];

		duurstop = Table[(duurstop[[draw]] - duurstop[[1]]) / (duurstop[[1]] + eps) , {draw, 2, ndrawinput}] /
				deltasens;

printbug["4.9.2"];

		resname[8, 0];
		
		If[(graphicoutput == 1),	

			addcellnb[plotpopnb[duurstop, scennames]]];

		If[(tabeloutput == 1),		

			duurstop = roundoff[duurstop, 1000];
			printrespop[duurstop, 0]];

printbug["4.9.3"]
		
		];	

]; (* END PRINTNUMBERS *)

(* --------------------------------------------------
	PRINTING ROUTINES FOR EVENT NUMBERS FOR EACH MODEL TYPE COMPARED TO BASELINE SCENARIO: MAIN ROUTINE
----------------------------------------------------*)

printdiffnumbers[resmodel_, scen_] := Block[{},

	(* TOTAL POPULATION NUMBERS *)

	If[(outputsel[[1]] == 1),

printbug["4.10"];

		npop	= If[(cumulative == 0),

				Table[Plus@@Flatten[resmodel[[1, draw + ndrawinput scen, n, g]]] -
						Plus@@Flatten[resmodel[[1, draw, n, g]]],
					{draw, ndrawinput}, {g, ng}, {n, nstap}],

				Table[Plus@@Flatten[resmodel[[1, draw + ndrawinput scen, Range[n], g]]] -
						Plus@@Flatten[resmodel[[1, draw, Range[n], g]]],
					{draw, ndrawinput}, {g, ng}, {n, nstap}]];

printbug["4.10.1"];

		npop	= Table[(npop[[draw]] - npop[[1]]) / (npop[[1]] + eps) , {draw, 2, ndrawinput}] / deltasens;


printbug["4.10.2"];

		resname[1, 1];
		
		If[(graphicoutput == 1),

			addcellnb[plotpopnb[npop, scennames]]];

		If[(tabeloutput == 1),		

			npop 	= roundoff[npop, 1000];
			printrespop[npop, 1]];

printbug["4.10.3"]
		
		];

	(* DISCRETELY DISTRIBUTED RISK FACTOR CLASS PREVALENCE NUMBERS AND RATES *)

	If[(nrd > 0) && (outputsel[[2]] == 1),	

printbug["4.11"];
				
		nrisk	= If[(rates == 0),

				Table[Plus@@Flatten[resmodel[[2, draw + ndrawinput scen, n, r, g, ri]]] -
						Plus@@Flatten[resmodel[[2, draw, n, r, g, ri]]],
					{draw, ndrawinput}, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}, {n, nstap}],

				Table[Plus@@Flatten[resmodel[[2, draw + ndrawinput scen, n, r, g, ri]]] /
						Plus@@Flatten[resmodel[[1, draw + ndrawinput scen, n, g]]] -
						Plus@@Flatten[resmodel[[2, draw, n, r, g, ri]]] /
						Plus@@Flatten[resmodel[[1, draw, n, g]]],
					{draw, ndrawinput}, {r, nrd}, {g, ng}, {ri, ncrsel[[r]]}, {n, nstap}]];

printbug["4.11.1"];

		nrisk	= Table[(nrisk[[draw]] - nrisk[[1]]) / (nrisk[[1]] + eps) , {draw, 2, ndrawinput}] / deltasens;

printbug["4.11.2"];

		resname[2, 1];	

		If[(graphicoutput == 1),	

			addcellnb[plotrisknb[nrisk, scennames]]];

		If[(tabeloutput == 1),		

			nrisk 	= roundoff[nrisk, 1000];
			printresrisk[nrisk, 1]];

printbug["4.11.3"]

		];

	(* DISEASE PREVALENCE NUMBERS AND RATES *)

printbug["4.12"];

	If[(nd > 0) && (outputsel[[4]] == 1), 	makedisdiff[resmodel, scen, 4, nd]];
				
	(* DISEASE INCIDENCE NUMBERS *)

printbug["4.13"];

	If[(nd > 0) && (outputsel[[5]] == 1), 	makedisdiff[resmodel, scen, 5, nd]];

	(* DISEASE MORTALITY NUMBERS *)

printbug["4.14"];

	If[(outputsel[[6]] == 1), 		makedisdiff[resmodel, scen, 6, nd + 2]];

	(* MEAN AGE AT DISEASE ONSET *)

	If[(nd > 0) && (outputsel[[7]] == 1),

printbug["4.15"];

		onsetage	= Table[Plus@@Flatten[resmodel[[7, draw + ndrawinput scen, n, d, g]]] /
					Plus@@Flatten[resmodel[[4, draw + ndrawinput scen, n, d, g]]] -
					Plus@@Flatten[resmodel[[7, draw, n, d, g]]] /
					Plus@@Flatten[resmodel[[4, draw, n, d, g]]],
					{draw, ndrawinput}, {d, nd}, {g, ng}, {n, nstap}];

printbug["4.15.1"];

		onsetage	= Table[(onsetage[[draw]] - onsetage[[1]]) / (onsetage[[1]] + eps) , {draw, 2, ndrawinput}] / deltasens;

printbug["4.15.2"];
		
		resname[7, 1];	

		If[(graphicoutput == 1),	

			addcellnb[plotdisnb[nmort, scennames]]];

		If[(tabeloutput == 1),		

			onsetage = roundoff[onsetage, 1000];
			printresdis[onsetage, 1]];

printbug["4.15.3"]
		
		];

	(* MEAN TIME SINCE SMOKING CESSATION *)

	If[(RRsmokduurind == 1) && (outputsel[[8]] == 1),

printbug["4.16"];

		duurstop	= Table[Plus@@Flatten[resmodel[[8, draw + ndrawinput scen, n, g]]] /
					Plus@@Flatten[resmodel[[2, draw + ndrawinput scen, n, 1, g, 3]]] -
					Plus@@Flatten[resmodel[[8, draw, n, g]]] /
					Plus@@Flatten[resmodel[[2, draw, n, 1, g, 3]]],
				{draw, ndrawinput}, {g, ng}, {n, nstap}];

printbug["4.16.1"];

		duurstop = Table[(duurstop[[draw]] - duurstop[[1]]) / (duurstop[[1]] + eps) , {draw, 2, ndrawinput}] / deltasens;

printbug["4.16.2"];
		
		resname[8, 1];	

		If[(graphicoutput == 1),	

			addcellnb[plotpopnb[duurstop, scennames]]];

		If[(tabeloutput == 1),		

			duurstop = roundoff[duurstop, 1000];
			printrespop[duurstop, 1]];

printbug["4.16.3"]
		
		]

	]; (* END PRINTDIFFNUMBERS *)

(* --------------------------------------------------
	SENSITIVITY OF LIFE EXPECTANCY BASED OUTPUT NUMBERS FOR BASELINE SCENARIO
----------------------------------------------------*)

printbug["5."];

(* INDICATOR FUNCTION *)

EqInd[d_, d1_]	:= 1 + If[(d == d1), deltasens, 0];

(* DISCOUNTING FUTURE NUMBERS *)

makediscount[npop_, disc_, delta_] := Table[npop[[g, n]] / (1 + (1 + delta) disc)^(n - 1), {g, ng}, {n, nstap}];

(* DISCOUNTING FUTURE NUMBERS AND PRESENTATION *)

makepopcosts[npop_, names_, poptype_, cumul_] := Block[{},

printbug["5.1"];

	npop1	= npop;

	If[(cumul == 1), npop1 = Table[Plus@@npop1[[scen, g, Range[n]]], {scen, Length[npop1]}, {g, ng}, {n, nstap}]];

printbug["5.1.1"];

	npop1	= Table[(npop1[[scen]] - npop1[[1]]) / (npop1[[1]] + eps), {scen, 2, Length[npop1]}] / deltasens;

printbug["5.1.2"];
	
	If[(graphicoutput == 1),

		addcellnb[headingprint3nb[poptype]];
		addcellnb[plotpopnb[npop1, names]]];
	
	If[(tabeloutput == 1),

		npop1 	= roundoff[npop1, 1000];
 		printrespop[npop1, 0]];

printbug["5.1.3"]

	]; (* MAKEPOPCOSTS *)
		
printpopcosts[resmodel_] := Block[{},

	(* TOTAL POPULATION NUMBERS & COSTS *)

	If[(outputsel[[1]] == 1) && (outputsel[[9]] == 1),

		(* MEAN AGECLASS DISABILITY WEIGHTS AND COSTS *)

		meanDALYwgt	= Table[meanaggreg[DALYwgtsel[[d, g]]], {d, nd}, {g, ng}];

		meanDALYwgt	= Table[Plus@@(meanDALYwgt[[d, g]] resmodel[[4, 1, n, d, g]]) /	(Plus@@resmodel[[4, 1, n, d, g]] + eps),
					{n, nstap}, {d, nd}, {g, ng}];

		meancostspatient = Table[meanaggreg[costspatientsel[[d, g]]], {d, nd}, {g, ng}];
		
		meancostspatient = Table[Plus@@(meancostspatient[[d, g]] resmodel[[4, 1, n, d, g]]) / (Plus@@resmodel[[4, 1, n, d, g]] + eps),
					{n, nstap}, {d, nd}, {g, ng}];

		meancostspersonoth = Table[meanaggreg[costspersonothsel[[g]]], {g, ng}];
		
		meancostspersonoth = Table[Plus@@(meancostspersonoth[[g]] resmodel[[1, 1, n, g]]) / (Plus@@resmodel[[1, 1, n, g]] + eps),
					{n, nstap}, {g, ng}];

printbug["5.2"];

		resname[1, 0];
		
		(* TOTAL POPULATION NUMBERS *)

printbug["5.2.1"];
		
		npop	= Table[Plus@@resmodel[[1, 1, n, g]], {g, ng}, {n, nstap}];

		npop1	= makediscount[npop, discounte, 0];

		npop2	= makediscount[npop, discounte, deltasens];

printbug["5.2.2"];

		makepopcosts[{npop1, npop2}, {"discounting"}, "total population", cumulative];

		(* DISEASE-FREE POPULATION NUMBERS *)

printbug["5.3"];

		pdis	= Table[Plus@@resmodel[[4, 1, n, d, g]] / (Plus@@Flatten[resmodel[[1, 1, n, g]]] + eps),
					{n, nstap}, {d, nd}, {g, ng}];

		nfree	= Table[npop[[g, n]] Times@@(1 - pdis[[n, Range[nd], g]]), {g, ng}, {n, nstap}];

		nfree1	= makediscount[nfree, discounte, 0];

		nfree2	= makediscount[nfree, discounte, deltasens];

		nfree3	= Table[npop[[g, n]] *
					Times@@Table[1 - EqInd[d, d1] pdis[[n, d1, g]], {d1, nd}] /
					(1 + discounte)^(n - 1),
				{d, nd}, {g, ng}, {n, nstap}];

printbug["5.3.1"];

		makepopcosts[Join[{nfree1, nfree2}, nfree3], Join[{"discounting"}, disnames[[disind]]],
				"disease-free population", cumulative];

		(* DALY-WEIGHTED POPULATION NUMBERS *)

printbug["5.4"];

		nDALY	= Table[npop[[g, n]] Times@@Table[1 - meanDALYwgt[[n, d, g]] pdis[[n, d, g]], {d, nd}],
				{g, ng}, {n, nstap}];

		nDALY1	= makediscount[nDALY, discounte, 0];

		nDALY2	= makediscount[nDALY, discounte, deltasens];

		nDALY3	= Table[npop[[g, n]] *
				Times@@Table[1 - EqInd[d, d1] meanDALYwgt[[n, d1, g]] pdis[[n, d1, g]], {d1, nd}] /
				(1 + discounte)^(n - 1),
				{d, nd}, {g, ng}, {n, nstap}];

printbug["5.4.1"];

		makepopcosts[Join[{nDALY1, nDALY2}, nDALY3], Join[{"discounting"}, disnames[[disind]]],
				"DALY weighted population", cumulative];

		(* COSTS EXCL. OTHER COSTS *)

printbug["5.5"];

		ncosts 	= Table[Plus@@Table[Plus@@(meancostspatient[[n, d, g]] resmodel[[4, 1, n, d, g]]), {d, nd}],
				{g, ng}, {n, nstap}];

		ncosts1	= makediscount[ncosts, discountc, 0];

		ncosts2	= makediscount[ncosts, discountc, deltasens];

		ncosts3	= Table[Plus@@Table[EqInd[d, d1] Plus@@(meancostspatient[[n, d1, g]] resmodel[[4, 1, n, d1, g]]),
						{d1, nd}] /
				(1 + discountc)^(n - 1),
				{d, nd}, {g, ng}, {n, nstap}];	

printbug["5.5.1"];

		makepopcosts[Join[{ncosts1, ncosts2}, ncosts3], Join[{"discounting"}, disnames[[disind]]],
					"total costs excl. other", cumulative];

		(* COSTS INCL. OTHER COSTS *)

printbug["5.5.2"];

		othcosts = Table[Plus@@(meancostspersonoth[[n, g]] resmodel[[1, 1, n, g]]), {g, ng}, {n, nstap}];

		ncosts4	= makediscount[ncosts + othcosts, discountc, 0];

		ncosts5	= makediscount[ncosts + othcosts, discountc, deltasens];

		ncosts6	= ncosts3 + Table[makediscount[othcosts, discountc, 0], {nd}];	

printbug["5.5.3"];

		makepopcosts[Join[{ncosts4, ncosts5}, ncosts6], Join[{"discounting"}, disnames[[disind]]],
					"total costs incl. other", cumulative];

		(* COSTS (EXCL. OTHER) PER DALY *)

printbug["5.6"];

		If[(cumulative == 1),

			costsDALY1 = Table[Plus@@ncosts1[[g, Range[n]]] / (Plus@@nDALY1[[g, Range[n]]] + eps),
						{g, ng}, {n, nstap}];

			costsDALY2 = Table[Plus@@ncosts2[[g, Range[n]]] / (Plus@@nDALY2[[g, Range[n]]] + eps),
						{g, ng}, {n, nstap}];

			costsDALY3 = Table[Plus@@ncosts3[[d, g, Range[n]]] / (Plus@@nDALY3[[d, g, Range[n]]] + eps),
						{d, nd}, {g, ng}, {n, nstap}];

printbug["5.6.1"];

			makepopcosts[Join[{costsDALY1, costsDALY2}, costsDALY3],
				Join[{"discounting"}, disnames[[disind]]], "costs(excl.other)/DALY", 0];

		(* COSTS (INCL. OTHER) PER DALY *)

printbug["5.6.2"];

			costsDALY1 = Table[Plus@@ncosts4[[g, Range[n]]] / (Plus@@nDALY1[[g, Range[n]]] + eps),
						{g, ng}, {n, nstap}];

			costsDALY2 = Table[Plus@@ncosts5[[g, Range[n]]] / (Plus@@nDALY2[[g, Range[n]]] + eps),
						{g, ng}, {n, nstap}];

			costsDALY3 = Table[Plus@@ncosts6[[d, g, Range[n]]] / (Plus@@nDALY3[[d, g, Range[n]]] + eps),
						{d, nd}, {g, ng}, {n, nstap}];

printbug["5.6.3"];

			makepopcosts[Join[{costsDALY1, costsDALY2}, costsDALY3],
				Join[{"discounting"}, disnames[[disind]]], "costs(incl.other)/DALY", 0];


			];
			
		];

]; (* END PRINTPOPCOSTS *)


(* --------------------------------------------------
	SENSITIVITY OF LIFE EXPECTANCY BASED OUTPUT NUMBERS COMPARED TO BASELINE SCENARIO
----------------------------------------------------*)

printbug["6."];
		
printdiffpopcosts[resmodel_, hscen_] := Block[{},

	scenr = 1 + ndrawinput {0, hscen};

	(* TOTAL POPULATION NUMBERS & COSTS *)

	If[(outputsel[[1]] == 1) && (outputsel[[9]] == 1),

		(* MEAN AGECLASS DISABILITY WEIGHTS AND COSTS *)

		meanDALYwgt	= Table[meanaggreg[DALYwgtsel[[d, g]]], {d, nd}, {g, ng}];

		meanDALYwgt	= Table[Plus@@(meanDALYwgt[[d, g]] resmodel[[4, 1, n, d, g]]) /	(Plus@@resmodel[[4, 1, n, d, g]] + eps),
					{n, nstap}, {d, nd}, {g, ng}];

		meancostspatient = Table[meanaggreg[costspatientsel[[d, g]]], {d, nd}, {g, ng}];
		
		meancostspatient = Table[Plus@@(meancostspatient[[d, g]] resmodel[[4, 1, n, d, g]]) / (Plus@@resmodel[[4, 1, n, d, g]] + eps),
					{n, nstap}, {d, nd}, {g, ng}];

		meancostspersonoth = Table[meanaggreg[costspersonothsel[[g]]], {g, ng}];
		
		meancostspersonoth = Table[Plus@@(meancostspersonoth[[g]] resmodel[[1, 1, n, g]]) / (Plus@@resmodel[[1, 1, n, g]] + eps),
					{n, nstap}, {g, ng}];

printbug["6.2"];

		resname[1, 1];
		
		(* TOTAL POPULATION NUMBERS *)

printbug["6.2.1"];

		npop	= Table[Plus@@resmodel[[1, scenr[[scen]], n, g]], {scen, 2}, {g, ng}, {n, nstap}];

		dnpop	= npop[[2]] - npop[[1]];

		npop1	= makediscount[dnpop, discounte, 0];

		npop2	= makediscount[dnpop, discounte, deltasens];

printbug["6.2.2"];

		makepopcosts[{npop1, npop2}, {"discounting"}, "total population", cumulative];

		(* DISEASE-FREE POPULATION NUMBERS *)

printbug["6.3"];

		pdis	= Table[Plus@@resmodel[[4, scenr[[scen]], n, d, g]] /
					(Plus@@Flatten[resmodel[[1, scenr[[scen]], n, g]]] + eps),
				{scen, 2}, {n, nstap}, {d, nd}, {g, ng}];

printbug["6.3.1"];

		nfree	= Table[npop[[scen, g, n]] Times@@(1 - pdis[[scen, n, Range[nd], g]]),
				{scen, 2}, {g, ng}, {n, nstap}];

printbug["6.3.2"];

		nfree	= nfree[[2]] - nfree[[1]];

		nfree1	= makediscount[nfree, discounte, 0];

		nfree2	= makediscount[nfree, discounte, deltasens];

		nfree3	= Table[npop[[scen, g, n]] *
					Times@@Table[1 - EqInd[d, d1] pdis[[scen, n, d1, g]], {d1, nd}] /
					(1 + discounte)^(n - 1),
				{scen, 2}, {d, nd}, {g, ng}, {n, nstap}];

		nfree3	= nfree3[[2]] - nfree3[[1]];

printbug["6.3.3"];

		makepopcosts[Join[{nfree1, nfree2}, nfree3], Join[{"discounting"}, disnames[[disind]]],
					"disease-free population", cumulative];

		(* DALY-WEIGHTED POPULATION NUMBERS *)

printbug["6.4"];

		nDALY	= Table[npop[[scen, g, n]] Times@@Table[1 - meanDALYwgt[[n, d, g]] pdis[[scen, n, d, g]], {d, nd}],
				{scen, 2}, {g, ng}, {n, nstap}];

		nDALY	= nDALY[[2]] - nDALY[[1]];

		nDALY1	= makediscount[nDALY, discounte, 0];

		nDALY2	= makediscount[nDALY, discounte, deltasens];

printbug["6.4.1"];

		nDALY3	= Table[npop[[scen, g, n]] *
				Times@@Table[1 - EqInd[d, d1] meanDALYwgt[[n, d1, g]] pdis[[scen, n, d1, g]], {d1, nd}] /
				(1 + discounte)^(n - 1),
				{scen, 2}, {d, nd}, {g, ng}, {n, nstap}];

		nDALY3	= nDALY3[[2]] - nDALY3[[1]];

printbug["6.4.2"];

		makepopcosts[Join[{nDALY1, nDALY2}, nDALY3], Join[{"discounting"}, disnames[[disind]]],
					"DALY weighted population", cumulative];

		(* COSTS (EXCL. OTHER) *)

printbug["6.5"];

		ncosts 	= Table[Plus@@Table[Plus@@(meancostspatient[[n, d, g]] resmodel[[4, scenr[[scen]], n, d, g]]),
						{d, nd}],
				{scen, 2}, {g, ng}, {n, nstap}];

		dncosts	= ncosts[[2]] - ncosts[[1]];

		ncosts1	= makediscount[dncosts, discountc, 0];
	
		ncosts2	= makediscount[dncosts, discountc, deltasens];
	
printbug["6.5.1"];

		ncosts3	= Table[Plus@@Table[EqInd[d, d1] *
						Plus@@(meancostspatient[[n, d1, g]] resmodel[[4, scenr[[scen]], n, d1, g]]),
						{d1, nd}] /
				(1 + discountc)^(n - 1),
				{scen, 2}, {d, nd}, {g, ng}, {n, nstap}];

		ncosts3	= ncosts3[[2]] - ncosts3[[1]];

printbug["6.5.2"];

		makepopcosts[Join[{ncosts1, ncosts2}, ncosts3], Join[{"discounting"}, disnames[[disind]]],
					"total costs excl. other", cumulative];

		(* COSTS (INCL. OTHER) *)

printbug["6.5.3"];

		othcosts = Table[Plus@@(meancostspersonoth[[n, g]] resmodel[[1, scenr[[scen]], n, g]]),
				{scen, 2}, {g, ng}, {n, nstap}];

		othcosts = othcosts[[2]] - othcosts[[1]];

		ncosts4	= makediscount[dncosts + othcosts, discountc, 0];
	
		ncosts5	= makediscount[dncosts + othcosts, discountc, deltasens];
	
printbug["6.5.4"];

		ncosts6	= ncosts3 + Table[makediscount[othcosts, discountc, 0], {nd}];

printbug["6.5.5"];

		makepopcosts[Join[{ncosts4, ncosts5}, ncosts6], Join[{"discounting"}, disnames[[disind]]],
					"total costs incl. other", cumulative];

		(* COSTS PER DALY *)

printbug["6.6"];

		If[(cumulative == 1),

			costsDALY1 = Table[Plus@@ncosts1[[g, Range[n]]] / (Plus@@nDALY1[[g, Range[n]]] + eps),
						{g, ng}, {n, nstap}];

			costsDALY2 = Table[Plus@@ncosts2[[g, Range[n]]] / (Plus@@nDALY2[[g, Range[n]]] + eps),
						{g, ng}, {n, nstap}];

			costsDALY3 = Table[Plus@@ncosts3[[d, g, Range[n]]] / (Plus@@nDALY3[[d, g, Range[n]]] + eps),
					{d, nd}, {g, ng}, {n, nstap}];

printbug["6.6.1"];

			makepopcosts[Join[{costsDALY1, costsDALY2}, costsDALY3],
					Join[{"discounting"}, disnames[[disind]]], "costs excl. other/DALY", 0];

printbug["6.6.2"];

			costsDALY1 = Table[Plus@@ncosts4[[g, Range[n]]] / (Plus@@nDALY1[[g, Range[n]]] + eps),
						{g, ng}, {n, nstap}];

			costsDALY2 = Table[Plus@@ncosts5[[g, Range[n]]] / (Plus@@nDALY2[[g, Range[n]]] + eps),
						{g, ng}, {n, nstap}];

			costsDALY3 = Table[Plus@@ncosts6[[d, g, Range[n]]] / (Plus@@nDALY3[[d, g, Range[n]]] + eps),
					{d, nd}, {g, ng}, {n, nstap}];

printbug["6.6.3"];

			makepopcosts[Join[{costsDALY1, costsDALY2}, costsDALY3],
					Join[{"discounting"}, disnames[[disind]]], "costs incl. other/DALY", 0]

			];
			
		];

]; (* END PRINTDIFFPOPCOSTS *)


(* --------------------------------------------------
	PRINTING ROUTINE FOR RESULTS FROM ONE CZM MODEL VERSION
----------------------------------------------------*)

printbug["7."];

printresmodel[resmodel_, naam1_] := Block[{},

	(* DIFFERENCES WITH BASELINE INPUT VALUE FOR BASELINE SCENARIO *)

printbug["7.1"];

	str = naam1 <> "differences with baseline input value, baseline scenario";
	
	addcellnb[headingprint1nb[str]];						

	printnumbers[resmodel];

	printpopcosts[resmodel];

	(* DIFFERENCES WITH BASELINE INPUT VALUE FOR DIFFERENCE WITH BASELINE SCENARIO *)

printbug["7.2"];

	Do[	str = naam1 <> "differences with baseline input value, scenario " <> ToString[scen] <>
			" compared to baseline scenario";
	
		addcellnb[headingprint1nb[str]];						

		printdiffnumbers[resmodel, scen - 1];

		printdiffpopcosts[resmodel, scen - 1],

		{scen, 2, nscen0}];
	
	]; (* END PRINTRESMODEL *)


(* --------------------------------------------------
	CONCATENATION OF NOTEBOOK CELLS
----------------------------------------------------*)

addcellnb[cell_] := Block[{}, cellnb = Flatten[{cellnb, cell}]];


(* --------------------------------------------------
	CONCATENATION OF RESULTS OVER CZM MODEL VERSIONS SELECTED
----------------------------------------------------*)

printbug["8."];

If[(analyse == 1),

printbug["8.1"];

	resmodel	= {resmarginalmodeldetermpop, resjointmodeldetermpop, resjointmodeldetermage, resjointmodelstochind,
	 			resjointmodelstochindcourse, resjointmodelstochpop, resjointmodelstochage};

	cellnb		= {headingprintnb["sensitivity analyses results"]};

	(* PRINTING RESULTS FOR EACH CZM MODEL VERSION SELECTED *)

	Do[If[(modelsel[[m]] == 1), printresmodel[resmodel[[m]], modelnames[[m]]]], {m, nmodel}];

	NotebookWrite[nbout, Flatten[cellnb]]

	];


(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];

End[]


Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMCompareRuns *)

(* :Context: CZMPostProcessing` *)

(* :Author: Rudolf T. Hoogenveen, Maiwenn Al *)

(* :Summary:
   CZM postprocessing routine compares results from different CZM model runs *)

(* :Copyright: © 2004 by Rudolf Hoogenveen/Roel Breuls *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM July 2004
		2.0 first release CZM 2005, version March
		3.0 version November 2005 
		3.1 version March 2007 *)

(* :Keywords: postprocessing, model versions *)


BeginPackage["CZMPostProcessing`CZMCompareRuns`",
	{"CZMInitialization`CZMLogFile`",
	"CZMInitialization`CZMConstants`",
	"CZMInitialization`CZMFunctions`",
	"CZMImportData`CZMImportUserSelections`",
	"CZMImportData`CZMImportDemography`",
	"CZMImportData`CZMImportRiskFactors`",
	"CZMImportData`CZMImportRelativeRisks`",
	"CZMImportData`CZMImportDiseaseData`",
	"CZMAdjustData`CZMDataSmoothing`",
	"CZMAdjustData`CZMAdjustBeforeSelection`",
	"CZMAdjustData`CZMMakeSelections`",
	"CZMAdjustData`CZMAdjustAfterSelection`",
	"CZMSimulation`CZMSimulationFunctions`",
	"CZMSimulation`CZMSimulationMarginalModelDetermPop`",
	"CZMSimulation`CZMSimulationJointModelDetermPop`",
	"CZMSimulation`CZMSimulationJointModelDetermAge`",
	"CZMSimulation`CZMSimulationJointModelStochInd`",
	"CZMPostProcessing`CZMExportUserSelections`",
	"CZMPostProcessing`CZMCalcResults`",
	"CZMPostProcessing`CZMPresentResults`",
	"Graphics`Legend`",
	"Graphics`MultipleListPlot`"}]


Begin["`Private`"]


Print["CZMCompareRuns package is evaluated"];
printtijd;

printbug[c_] := If[(bugind == 1), Print[{"CZMCompareRuns", c}]];

himagesize	= 240;
graphind	= 1;
tabind		= 0;
figsize		= 900;


If[(analyse == 3),

(* --------------------------------------------------
	INITIALIZATIONS
----------------------------------------------------*)

printbug["1."];

	(* READS INPUT FILE CONTAINING RESULTS FROM ALL MODEL RUNS *)

	dat 		= Global`outputpath <> "outfileresmodelrun.m";
	hnrun		= (Read[dat])[[1]];
	resmodel 	= Table[Read[dat], {2 hnrun}];
	Close[dat];

printbug["1.1"];

	(* SIMULATION TIME PERIOD, ASSSUMED EQUAL FOR ALL RUNS; #SCENARIOS *)

	hnstap 	= resmodel[[1, 8]];
	hnscen	= resmodel[[1, 9]];

printbug["1.2"];

	(* # DISEASES, # RISK FACTORS AND CLASSES SELECTED IN BASELINE RUN *)

	hnd 	= Length[resmodel[[1, 2]]];
	hnrd	= Length[resmodel[[1, 1]]];
	hncr 	= ncr0[[resmodel[[1, 1]]]];

printbug["1.3"];

	(* FOR EACH RISK FACTOR IN BASELINE RUN POINTER TO RISK FACTOR IN OTHER RUNS *)

	pointerrisk = Table[0, {hnrun - 1}, {hnrd}];

	Do[If[(resmodel[[2 s - 1, 1, r1]] == resmodel[[1, 1, r]]), pointerrisk[[s - 1, r]] = r1],
		{s, 2, hnrun}, {r, hnrd}, {r1, Length[resmodel[[2 s - 1, 1]]]}];

printbug["1.4"];

	(* FOR EACH RISK FACTOR IN BASELINE RUN POINTER TO RISK FACTOR IN OTHER RUNS *)

	pointerdis = Table[0, {hnrun - 1}, {hnd}];

	Do[If[(resmodel[[2 s - 1, 2, d1]] == resmodel[[1, 2, d]]), pointerdis[[s - 1, d]] = d1],
		{s, 2, hnrun}, {d, hnd}, {d1, Length[resmodel[[2 s - 1, 2]]]}];

printbug["1.5"];

	(* MODEL SELECTIONS *)

	hmodelsel = Select[Range[7] resmodel[[1, 7]], Positive];

printbug["1.6"];

	(* MID AGE CLASSES *)

	midage = initageclass[[1, Range[nac[[1]]]]] + .5 lengthageclass[[1, Range[nac[[1]]]]];

printbug["1.7"];

	(* GRAPHICAL CONSTANTS *)

	stdruncolor1	= Table[{RGBColor[1 - s / hnrun, 0, s / hnrun]}, {s, hnrun}];
	stdrunlegend1	= Table["run" <> ToString[s], {s, hnrun}];
	stdruncolor2	= Table[{RGBColor[1 - s / hnrun, 0, s / hnrun]}, {s, 0, hnrun}];
	stdrunlegend2	= Flatten[{"data", Table["run" <> ToString[s], {s, hnrun}]}];

printbug["1.8"];

	plotset1	= {	PlotRange	-> All,
				PlotJoined 	-> True,
				DisplayFunction	-> Identity,
				SymbolShape 	-> None,
				LegendPosition 	-> {.5, .0},
				LegendSize 	-> {.65, .5}};	

printbug["1.9"];

	(* AGE PER YEAR OF COHORT, POPULATION NUMBERS, AND RISK-FACTOR RELATED DISEASES *)

	agen	= Minc[resmodel[[1, 5]] + Range[hnstap] - 1, na1];
	hnpop	= Table[Plus@@resmodel[[2 s, hmodelsel[[m]], 1, scen, n, g]],
			{m, Length[hmodelsel]}, {scen, hnscen}, {s, hnrun}, {g, ng}, {n, hnstap}];

	hdisrisk = Table[0, {hnrd}];

printbug["1.10"];

	Do[If[(riskdispair[[d1, 1]] == resmodel[[1, 1, r]]) && (riskdispair[[d1, 2]] == resmodel[[1, 2, d]]), hdisrisk[[r]] = d],
		{r, hnrd}, {d, Length[resmodel[[1, 2]]]}, {d1, Length[riskdispair]}];
	
	];


(* --------------------------------------------------
	NOTEBOOK OPERATIONS
---------------------------------------------------*)

If[(analyse == 3),

printbug["2."];

	addcellnb[cell_] := Block[{}, cellnb = Flatten[{cellnb, cell}]];

	hnbout 	= NotebookCreate[];

	tekst	= "";

	applnumber = ToExpression[StringDrop[ToString[Global`application], 11]];

	If[(Global`riskfactor > 0), tekst = " for " <> risknames[[Global`riskfactor]]];

	If[(Global`disease > 0), tekst = " for " <> disnames[[Global`disease]]];

	tekst = tekst <> ", test " <> ToString[applnumber];

	cellnb = {headingprintnb["comparison of model runs" <> tekst]}

	];


(* --------------------------------------------------
	COMPARING RESULTS AT BASELINE
----------------------------------------------------*)

printbug["3."];

(* GENERIC PROCEDURES FOR DISEASE OUTPUT VARIABLES *)

printdis1[res_] := Block[{},

printbug["3.1"];

	Do[	Print[{"run", s}];

		Do[	Print[{"disease", disnames[[resmodel[[1, 2, d]]]]}];
			Print[MatrixForm[res[[s, d]]]],

			{d, Length[res[[s]]]}],

		{s, Length[res]}]

	];

printdis1nb[res_] := Block[{},

printbug["3.2"];

	Do[	addcellnb[headingprint2nb["run" <> ToString[s + 1]]];

		Do[	addcellnb[headingprint3nb["disease" <> disnames[[resmodel[[1, 2, d]]]]]];
			addcellnb[Cell[BoxData[ToBoxes[res[[s, d]] // MatrixForm]], "Subsection"]],

			{d, Length[res[[s]]]}],

		{s, Length[res]}]

	];

plotdis1[prev_] := Block[{},

printbug["3.3"];

	plot1 = Table[MultipleListPlot[
				Table[prev[[s, d, g]], {s, Length[prev]}],
				plotset1,
				PlotStyle 	-> stdruncolor1,
				PlotLabel 	-> disnames[[resmodel[[1, 2, d]]]],
				AxesLabel	-> {"ageclass", ""},
				PlotLegend 	-> stdrunlegend1],
			{g, ng}, {d, hnd}];

	Do[	addcellnb[headingprint3nb[gennames[[g]]]];

		Do[addcellnb[Cell[GraphicsData["PostScript",
			DisplayString[GraphicsArray[Table[Show[plot1[[g, d]]], {d, 4 di + 1, Min[{4 di + 4, hnd}]}]]]],
			"Subsection", ImageSize -> Min[{(Min[{4 di + 4, hnd}] - 4 di) himagesize, figsize}]]],
			{di, 0, Floor[(hnd - 1) / 4]}],

		{g, ng}]

	];

makeresdis1[o_, scen_] := Block[{},

printbug["3.4"];

	prev = Table[0, {hnrun}, {hnd}, {ng}, {nac[[1]]}];

	Do[prev[[1, d]] = resmodel[[2, hmodelsel[[m]], o, scen, 1, d]], {d, hnd}];

	Do[prev[[s, d]] = If[(pointerdis[[s - 1, d]] > 0),
					resmodel[[2 s, hmodelsel[[m]], o, scen, 1, pointerdis[[s - 1, d]]]],
					prev[[1, d]]],
		{s, 2, hnrun}, {d, hnd}];

	If[(tabind == 1), 	printdis1nb[prev]];
	If[(graphind == 1),	plotdis1[prev]];

	];

If[(hnstap == 1) && (hnrun > 1) && (analyse == 3),

printbug["3.5"];

	Do[	tekst	= "Results at baseline, specified by ageclass, " <> modelnames[[hmodelsel[[m]]]];
		addcellnb[headingprint1nb[tekst]];

		(* TOTAL POPULATION NUMBERS *)
printbug["3.6"];
		pop	= Table[resmodel[[2 s, hmodelsel[[m]], 1, 1, scen]], {s, hnrun}];

		tekst	= "Total population numbers" <> ", scenario " <> ToString[scen];
		addcellnb[headingprint2nb[tekst]];
	
		If[(tabind == 1),

 			Do[	addcellnb[headingprint3nb["run" <> ToString[s]]];
				addcellnb[Cell[BoxData[ToBoxes[pop[[s]] // MatrixForm]], "Subsection"]],

				{s, hnrun}]];

		If[(graphind == 1),	

			plot1 	= Table[MultipleListPlot[
						Table[pop[[s, g]], {s, hnrun}],
						plotset1,
						PlotStyle	-> stdruncolor1,
						PlotLabel	-> gennames[[g]],
						AxesLabel	-> {"ageclass", ""},
						PlotLegend 	-> stdrunlegend1],
					{g, ng}];

			addcellnb[Cell[GraphicsData["PostScript",
					DisplayString[GraphicsArray[Table[Show[plot1[[g]]], {g, ng}]]]],
					"Subsection", ImageSize -> Min[{ng himagesize, figsize}]]]];
	
		(* RISK FACTOR CLASS PREVALENCE NUMBERS *)
printbug["3.7"];

		risk	= Table[0, {hnrun}, {r, hnrd}, {ng}, {hncr[[r]]}, {nac[[1]]}];	

		Do[risk[[1, r]] = resmodel[[2, hmodelsel[[m]], 2, scen, 1, r]], {r, hnrd}];

		Do[risk[[s, r]] = If[(pointerrisk[[s - 1, r]] > 0),
						resmodel[[2 s, hmodelsel[[m]], 2, scen, 1, pointerrisk[[s - 1, r]]]],
						risk[[1, r]]],
			{s, 2, hnrun}, {r, hnrd}];

		tekst	= "Risk factor class prevalence numbers" <> ", scenario " <> ToString[scen];
		addcellnb[headingprint2nb[tekst]];

		If[(tabind == 1),

			Do[	addcellnb[headingprint3nb["run" <> ToString[s]]];

				Do[	addcellnb[headingprint3nb["risk factor" <> risknames[[resmodel[[1, 1, r]]]] <> "gender" <>
						gennames[[g]]]];
					addcellnb[Cell[BoxData[ToBoxes[risk[[s, r, g]] // MatrixForm]], "Subsection"]],

					{r, Length[risk[[s]]]}, {g, ng}],

				{s, hnrun}]];

		If[(graphind == 1),	

			plot1 = Table[MultipleListPlot[
						Table[risk[[s, r, g, ri]], {s, hnrun}],
						plotset1,
						PlotStyle 	-> stdruncolor1,
						PlotLabel 	-> gennames[[g]] <> ToString[ri],
						AxesLabel	-> {"ageclass", ""},
						PlotLegend 	-> stdrunlegend1],
					{r, hnrd}, {g, ng}, {ri, hncr[[r]]}];

			Do[	addcellnb[headingprint3nb[risknames[[resmodel[[1, 1, r]]]] <> gennames[[g]]]];
			    	addcellnb[Cell[GraphicsData["PostScript",
					DisplayString[GraphicsArray[
						Table[Show[plot1[[r, g, rj]]], {rj, 4 ri + 1, Min[{4 ri + 4, hncr[[r]]}]}]]]],
					"Subsection", ImageSize -> Min[{(Min[{4 ri + 4, hncr[[r]]}] - 4 ri) himagesize, figsize}]]],
				{r, hnrd}, {g, ng}, {ri, 0, Floor[(hncr[[r]] - 1) / 4]}]];

		(* DISEASE PREVALENCE NUMBERS *)
printbug["3.8"];
		tekst	= "Disease prevalence numbers" <> ", scenario " <> ToString[scen];
		addcellnb[headingprint2nb[tekst]];

		makeresdis1[4, scen];

		(* DISEASE INCIDENCE NUMBERS *)
printbug["3.9"];
		tekst	= "Disease incidence numbers" <> ", scenario " <> ToString[scen];
		addcellnb[headingprint2nb[tekst]];

		makeresdis1[5, scen];

		(* DISEASE-RELATED MORTALITY NUMBERS *)
printbug["3.10"];
		tekst	= "Mortality numbers" <> ", scenario " <> ToString[scen];
		addcellnb[headingprint2nb[tekst]];

		makeresdis1[6, scen];

		(* ALL CAUSE MORTALITY NUMBERS *)
printbug["3.11"];
		prev	= Table[resmodel[[2 s, hmodelsel[[m]], 6, scen, 1, Length[resmodel[[2 s, hmodelsel[[m]], 6, 1, 1]]]]], {s, hnrun}];

		If[(tabind == 1),	

			Do[	addcellnb[headingprint3nb["run" <> ToString[s]]];
				addcellnb[Cell[BoxData[ToBoxes[prev[[s]] // MatrixForm]], "Subsection"]],

				{s, hnrun}]];

		If[(graphind == 1),	

			plot1 	= Table[MultipleListPlot[
						Table[prev[[s, g]], {s, hnrun}],
						plotset1,
						PlotStyle 	-> stdruncolor1,
						PlotLabel 	-> gennames[[g]],
						AxesLabel	-> {"ageclass", ""},
						PlotLegend 	-> stdrunlegend1],
					{g, ng}];

			addcellnb[headingprint3nb["all cause"]];

			addcellnb[Cell[GraphicsData["PostScript",
						DisplayString[GraphicsArray[Table[Show[plot1[[g]]], {g, ng}]]]],
						"Subsection", ImageSize -> Min[{ng himagesize, figsize}]]]],

		{m, Length[hmodelsel]}, {scen, hnscen}];

	Do[
		(* ADJUSTED DISEASE-RELATED EXCESS MORTALITY RATES *)
printbug["3.12"];
		excessmort = Table[0, {hnrun}, {hnd}, {ng}, {nac[[1]]}];

		Do[excessmort[[1, d, g]] = meanaggreg[resmodel[[2, 8, d, g]]], {d, hnd}, {g, ng}];

		Do[excessmort[[s, d]] = If[(pointerdis[[s - 1, d]] > 0),

							Table[meanaggreg[resmodel[[2 s, 8, pointerdis[[s - 1, d]], g]]], {g, ng}],
							excessmort[[1, d]]],
			{s, 2, hnrun}, {d, hnd}];

		tekst	= "Excess mortality rates";
		addcellnb[headingprint2nb[tekst]];

		If[(tabind == 1),	printdis1nb[excessmort]];
		If[(graphind == 1),	plotdis1[excessmort]],

		{m, Length[hmodelsel]}];

	];(* COMPARING RESULTS AT BASELINE *)


(* --------------------------------------------------
	COMPARING RESULTS OVER SIMULATION TIME, AGGREGATED OVER AGE
----------------------------------------------------*)

printbug["4."];

makeresdis2[o_, scen_] := Block[{},

printbug["4.1"];

	prev 	= Table[0, {hnrun}, {hnd}, {ng}, {hnstap}];

	Do[prev[[1, d, g, n]] = Plus@@resmodel[[2, hmodelsel[[m]], o, scen, n, d, g]], {d, hnd}, {g, ng}, {n, hnstap}];

	Do[prev[[s, d]] = If[(pointerdis[[s - 1, d]] > 0),
						Table[Plus@@resmodel[[2 s, hmodelsel[[m]], o, 1, n, pointerdis[[s - 1, d]], g]],
							{g, ng}, {n, hnstap}],
						prev[[1, d]]],
		{s, 2, hnrun}, {d, hnd}];

	If[(tabind == 1),	

		Do[	addcellnb[headingprint3nb["run" <> ToString[s]]];

			Do[	headingprint3nb["disease" <> disnames[[resmodel[[1, 2, d]]]]];
				addcellnb[Cell[BoxData[ToBoxes[prev[[s, d]] // MatrixForm]], "Subsection"]],

				{d, Length[prev[[s]]]}],

			{s, hnrun}]];

	If[(graphind == 1),	

		plot1 = Table[MultipleListPlot[
					Table[prev[[s, d, g]], {s, hnrun}],
					plotset1,
					PlotStyle 	-> stdruncolor1,
					PlotLabel 	-> disnames[[resmodel[[1, 2, d]]]],
					AxesLabel	-> {"time", ""},
					PlotLegend 	-> stdrunlegend1],
				{g, ng}, {d, hnd}];

		Do[	addcellnb[headingprint3nb[gennames[[g]]]];

			Do[addcellnb[Cell[GraphicsData["PostScript",
					DisplayString[GraphicsArray[Table[Show[plot1[[g, d]]], {d, 4 di + 1, Min[{4 di + 4, hnd}]}]]]],
					"Subsection", ImageSize -> Min[{(Min[{4 di + 4, hnd}] - 4 di) himagesize, figsize}]]],
				{di, 0, Floor[(Length[prev[[1]]] - 1) / 4]}],

			{g, ng}]];

	];

If[(hnstap > 1) && (hnrun > 1) && (analyse == 3),

printbug["4.2"];

	Do[	tekst	= "Results over time, aggregated over age, " <> modelnames[[hmodelsel[[m]]]];
		addcellnb[headingprint1nb[tekst]];

		(* TOTAL POPULATION NUMBERS *)
printbug["4.3"];
		pop	= Table[Plus@@resmodel[[2 s, hmodelsel[[m]], 1, scen, n, g]], {s, hnrun}, {g, ng}, {n, hnstap}];

		tekst	= "Total population numbers" <> ", scenario " <> ToString[scen];
		addcellnb[headingprint2nb[tekst]];

		If[(tabind == 1),	

			Do[	addcellnb[headingprint3nb["run" <> ToString[s]]];
				addcellnb[Cell[BoxData[ToBoxes[pop[[s]] // MatrixForm]], "Subsection"]],

				{s, hnrun}]];

		If[(graphind == 1),	

			plot1 	= Table[MultipleListPlot[
						Table[pop[[s, g]], {s, hnrun}],
						plotset1,
						PlotStyle 	-> stdruncolor1,
						PlotLabel 	-> gennames[[g]],
						AxesLabel	-> {"time", ""},
						PlotLegend 	-> stdrunlegend1],
					{g, ng}];

			addcellnb[Cell[GraphicsData["PostScript",
						DisplayString[GraphicsArray[Table[Show[plot1[[g]]], {g, ng}]]]],
						"Subsection", ImageSize -> Min[{ng himagesize, figsize}]]]];

		(* RISK FACTOR CLASS PREVALENCE NUMBERS *)
printbug["4.4"];
		risk	= Table[0, {hnrun}, {r, hnrd}, {ng}, {hncr[[r]]}, {hnstap}];

		Do[risk[[1, r, g, ri, n]] = Plus@@resmodel[[2, hmodelsel[[m]], 2, scen, n, r, g, ri]],
			{r, hnrd}, {g, ng}, {ri, hncr[[r]]}, {n, hnstap}];
	
		Do[risk[[s, r]] = If[(pointerrisk[[s - 1, r]] > 0),
							Table[Plus@@resmodel[[2 s, hmodelsel[[m]], 2, 1, n, pointerrisk[[s - 1, r]], g, ri]],
								{g, ng}, {ri, hncr[[r]]}, {n, hnstap}],
							risk[[1, r]]],
			{s, 2, hnrun}, {r, hnrd}];

		tekst	= "Risk factor class prevalence numbers" <> ", scenario " <> ToString[scen];
		addcellnb[headingprint2nb[tekst]];

		If[(tabind == 1),	

			Do[	addcellnb[headingprint3nb["run" <> ToString[s]]];
		
				Do[	headingprint3nb["risk factor" <> risknames[[resmodel[[1, 1, r]]]] <> "gender" <> gennames[[g]]];
					addcellnb[Cell[BoxData[ToBoxes[risk[[s, r, g]] // MatrixForm]], "Subsection"]],

					{r, Length[risk[[s]]]}, {g, ng}],

				{s, hnrun}]];

		If[(graphind == 1),	

			plot1 	= Table[MultipleListPlot[
						Table[risk[[s, r, g, ri]], {s, hnrun}],
						plotset1,
						PlotStyle 	-> stdruncolor1,
						PlotLabel 	-> risknames[[resmodel[[1, 1, r]]]] <> ToString[ri],
						AxesLabel	-> {"time", ""},
						PlotLegend 	-> stdrunlegend1],
					{r, hnrd}, {g, ng}, {ri, hncr[[r]]}];

			Do[	addcellnb[headingprint3nb[risknames[[resmodel[[1, 1, r]]]] <> gennames[[g]]]];
			    	addcellnb[Cell[GraphicsData["PostScript",
					DisplayString[GraphicsArray[
						Table[Show[plot1[[r, g, rj]]], {rj, 4 ri + 1, Min[{4 ri + 4, hncr[[r]]}]}]]]],
					"Subsection", ImageSize -> Min[{(Min[{4 ri + 4, hncr[[r]]}] - 4 ri) himagesize, figsize}]]],
				{r, hnrd}, {g, ng}, {ri, 0, Floor[(hncr[[r]] - 1) / 4]}]];

		(* DISEASE PREVALENCE NUMBERS *)
printbug["4.5"];
		tekst	= "Disease prevalence numbers" <> ", scenario " <> ToString[scen];
		addcellnb[headingprint2nb[tekst]];

		makeresdis2[4, scen];

		(* DISEASE INCIDENCE NUMBERS *)
printbug["4.6"];
		tekst	= "Disease incidence numbers" <> ", scenario " <> ToString[scen];
		addcellnb[headingprint2nb[tekst]];

		makeresdis2[5, scen];

		(* DISEASE-RELATED MORTALITY NUMBERS *)
printbug["4.7"];
		tekst	= "Mortality numbers" <> ", scenario " <> ToString[scen];
		addcellnb[headingprint2nb[tekst]];

		makeresdis2[6, scen];

		(* OTHER CAUSES AND ALL CAUSE MORTALITY NUMBERS *)
printbug["4.8"];
		prev	= Table[Plus@@resmodel[[2 s, hmodelsel[[m]], 6, scen, n, Length[resmodel[[2 s, hmodelsel[[m]], 6, 1, 1]]] - 2 + d, g]],
				{s, hnrun}, {d, 2}, {g, ng}, {n, hnstap}];

		hmortnames = {"other causes", "all cause"};

		If[(tabind == 1),

			Do[	addcellnb[headingprint3nb["run" <> ToString[s] <> hmortnames[[d]]]];
				addcellnb[Cell[BoxData[ToBoxes[prev[[s, d]] // MatrixForm]], "Subsection"]],

				{s, hnrun}, {d, 2}]];

		If[(graphind == 1),

			plot1 = Table[MultipleListPlot[
						Table[prev[[s, d, g]], {s, hnrun}],
						plotset1,
						PlotStyle 	-> stdruncolor1,
						PlotLabel 	-> hmortnames[[d]],
						AxesLabel	-> {"time", ""},
						PlotLegend 	-> stdrunlegend1],
					{g, ng}, {d, 2}];

			Do[	addcellnb[headingprint3nb[gennames[[g]]]];
	
				addcellnb[Cell[GraphicsData["PostScript",
						DisplayString[GraphicsArray[Table[Show[plot1[[g, d]]], {d, 2}]]]],
						"Subsection", ImageSize -> Min[{2 himagesize, figsize}]]],
			
				{g, ng}]];

	(* LIFE EXPECTANCY NUMBERS *)
printbug["4.9"];
		pop = Table[Plus@@Flatten[resmodel[[2 s, hmodelsel[[m]], 1, scen, Range[hnstap], g]]] /
					(Plus@@resmodel[[2 s, hmodelsel[[m]], 1, scen, 1, g]] + eps),
				{s, hnrun}, {g, ng}];

		addcellnb[headingprint3nb["life expectancy"]];

		addcellnb[Cell[BoxData[ToBoxes[pop // MatrixForm]], "Subsection"]],

		{m, Length[hmodelsel]}, {scen, hnscen}];

	]; (* COMPARING RESULTS OVER SIMULATION TIME, AGGREGATED OVER AGE *)


(* --------------------------------------------------
	COMPARING RESULTS WITH DATA OVER SIMULATION TIME, AGGREGATED OVER AGE
----------------------------------------------------*)

printbug["5."];

makeresdis3[o_, disdat_, scen_] := Block[{},

printbug["5.1"];

	prev	= Table[0, {hnrun + 1}, {hnd}, {ng}, {hnstap}];

	Do[prev[[1, d, g, n]] = disdat[[resmodel[[1, 2, d]], g, Min[{resmodel[[1, 5]] + n - 1, na1}]]],
		{d, hnd}, {g, ng}, {n, hnstap}];

	Do[prev[[2, d, g, n]] = Plus@@resmodel[[2, hmodelsel[[m]], o, scen, n, d, g]] / hnpop[[m, scen, 1, g, n]],
		{d, hnd}, {g, ng}, {n, hnstap}];

	Do[prev[[s + 1, d]] = If[(pointerdis[[s - 1, d]] > 0),

					Table[Plus@@resmodel[[2 s, hmodelsel[[m]], o, scen, n, pointerdis[[s - 1, d]], g]],
						{g, ng}, {n, hnstap}] /
						hnpop[[m, scen, s]],
					prev[[1, d]]],
		{s, 2, hnrun}, {d, hnd}];

	If[(graphind == 1),

		plot1 	= Table[MultipleListPlot[
					Table[prev[[s, d, g]], {s, hnrun + 1}],
					plotset1,
					PlotStyle 	-> stdruncolor2,
					PlotLabel 	-> disnames[[resmodel[[1, 2, d]]]],
					AxesLabel	-> {"time", ""},
					PlotLegend 	-> stdrunlegend2],
				{g, ng}, {d, hnd}];

		Do[	addcellnb[headingprint3nb[gennames[[g]]]];

			Do[addcellnb[Cell[GraphicsData["PostScript",
					DisplayString[GraphicsArray[Table[Show[plot1[[g, d]]], {d, 4 di + 1, Min[{4 di + 4, hnd}]}]]]],
					"Subsection", ImageSize -> Min[{(Min[{4 di + 4, hnd}] - 4 di) himagesize, figsize}]]],
				{di, 0, Floor[(hnd - 1) / 4]}],

			{g, ng}]

		];

	]; 

If[(hnstap >= 1) && (hnrun >= 1) && (analyse == 3) && (resmodel[[1, 5]] == resmodel[[1, 6]]),

printbug["5.2"];

	Do[	tekst	= "Comparison with cohort data specified by year, " <> modelnames[[hmodelsel[[m]]]] <> ", age " <>
				ToString[resmodel[[1, 5]] - 1];
		addcellnb[headingprint1nb[tekst]];

		(* RISK FACTOR CLASS PREVALENCE RATES *)
printbug["5.3"];
		risk = Table[0, {hnrun + 1}, {r, hnrd}, {ng}, {hncr[[r]]}, {hnstap}];

printbug["5.3.1"];

		Do[risk[[1, r, g, ri]] = prisk1[[resmodel[[1, 1, r]], g, ri, agen]], {r, hnrd}, {g, ng}, {ri, hncr[[r]]}];

printbug["5.3.2"];

		Do[	If[(hdisrisk[[r]] == 0),		

			Do[risk[[2, r, g, ri, n]] = Plus@@resmodel[[2, hmodelsel[[m]], 2, scen, n, r, g, ri]] / hnpop[[m, scen, 1, g, n]],
				{g, ng}, {ri, hncr[[r]]}, {n, hnstap}];

			Do[If[(pointerrisk[[s - 1, r]] > 0),
				risk[[s + 1, r]] =
					Table[Plus@@resmodel[[2 s, hmodelsel[[m]], 2, scen, n, pointerrisk[[s - 1, r]], g, ri]] /
						hnpop[[m, scen, s, g, n]],
						{g, ng}, {ri, hncr[[r]]}, {n, hnstap}],
					risk[[1, r]]],
				{s, 2, hnrun}],

			Do[risk[[2, r, g, ri, n]] = Plus@@resmodel[[2, hmodelsel[[m]], 2, scen, n, r, g, ri]] /
								Plus@@resmodel[[2, hmodelsel[[m]], 4, scen, n, hdisrisk[[r]], g]],
				{g, ng}, {ri, hncr[[r]]}, {n, hnstap}];

			Do[If[(pointerrisk[[s - 1, r]] > 0),
				risk[[s + 1, r]] =
					Table[Plus@@resmodel[[2 s, hmodelsel[[m]], 2, scen, n, pointerrisk[[s - 1, r]], g, ri]] /
						Plus@@resmodel[[2, hmodelsel[[m]], 4, scen, n, hdisrisk[[pointerrisk[[s - 1, r]]]], g]],
						{g, ng}, {ri, hncr[[r]]}, {n, hnstap}],
					risk[[1, r]]],
				{s, 2, hnrun}]],

			{r, hnrd}];

		tekst	= "Risk factor class prevalence rates" <> ", scenario " <> ToString[scen];
		addcellnb[headingprint2nb[tekst]];

		If[(graphind == 1),

			plot1 	= Table[MultipleListPlot[
						Table[risk[[s, r, g, ri]], {s, hnrun + 1}],
						plotset1,
						PlotStyle 	-> stdruncolor2,
						PlotLabel 	-> risknames[[resmodel[[1, 1, r]]]] <> ToString[ri],
						AxesLabel	-> {"time", ""},
						PlotLegend 	-> stdrunlegend2],
					{r, hnrd}, {g, ng}, {ri, hncr[[r]]}];


			Do[	addcellnb[headingprint3nb[risknames[[resmodel[[1, 1, r]]]] <> gennames[[g]]]];
			    	addcellnb[Cell[GraphicsData["PostScript",
					DisplayString[GraphicsArray[
						Table[Show[plot1[[r, g, rj]]], {rj, 4 ri + 1, Min[{4 ri + 4, hncr[[r]]}]}]]]],
					"Subsection", ImageSize -> Min[{(Min[{4 ri + 4, hncr[[r]]}] - 4 ri) himagesize, figsize}]]],
				{r, hnrd}, {g, ng}, {ri, 0, Floor[(hncr[[r]] - 1) / 4]}]];

		(* DISEASE PREVALENCE RATES *)
printbug["5.4"];
		tekst	= "Disease prevalence rates" <> ", scenario " <> ToString[scen];
		addcellnb[headingprint2nb[tekst]];

		makeresdis3[4, pdis1, scen];

		(* DISEASE INCIDENCE RATES *)
printbug["5.5"];
		tekst	= "Disease incidence rates" <> ", scenario " <> ToString[scen];
		addcellnb[headingprint2nb[tekst]];

		makeresdis3[5, inc1, scen];

		(* DISEASE-RELATED MORTALITY RATES *)
printbug["5.6"];
		tekst	= "Mortality rates" <> ", scenario " <> ToString[scen];
		addcellnb[headingprint2nb[tekst]];

		If[(resmodel[[1, 3]] == 2), mortdat = causemort1];

		If[(resmodel[[1, 3]] == 1),

			hexcessmort = Min1[Max0[Table[Minc[
						excessmort1[[d, g]],
						(causemort1[[d, g]] -
							inc1[[d, g]] casefat1[[casefatind0[[d]], g]]) / (pdis1[[d, g]] + eps)],
						{d, nd0}, {g, ng}]]];

			mortdat = Table[pdis1[[d, g]] hexcessmort[[d, g]] +
					inc1[[d, g]] (casefat1[[casefatind0[[d]], g]] +
					(1 - casefat1[[casefatind0[[d]], g]]) .5 hexcessmort[[d, g]]),
					{d, nd0}, {g, ng}]

			];
 
		makeresdis3[6, mortdat, scen];

		(* ALL CAUSE MORTALITY RATES *)
printbug["5.7"];
		prev = Table[0, {hnrun + 1}, {ng}, {hnstap}];

		Do[prev[[1, g, n]] = morttot1[[g, Min[{resmodel[[1, 5]] + n - 1, na1}]]], {g, ng}, {n, hnstap}];

		Do[prev[[s + 1, g, n]] =
				Plus@@resmodel[[2 s, hmodelsel[[m]], 6, scen, n, Length[resmodel[[2 s, hmodelsel[[m]], 6, scen, 1]]], g]] /
					hnpop[[m, scen, s, g, n]],
				{s, hnrun}, {g, ng}, {n, hnstap}];

		If[(graphind == 1),

			plot1 = Table[MultipleListPlot[
						Table[prev[[s, g]], {s, hnrun + 1}],
						plotset1,
						PlotStyle 	-> stdruncolor2,
						PlotLabel 	-> gennames[[g]],
						AxesLabel	-> {"time", ""},
						PlotLegend 	-> stdrunlegend2],
					{g, ng}];

			addcellnb[headingprint3nb["all cause"]];

			addcellnb[Cell[GraphicsData["PostScript",
						DisplayString[GraphicsArray[Table[Show[plot1[[g]]], {g, ng}]]]],
						"Subsection", ImageSize -> Min[{ng himagesize, figsize}]]]],

		{m, Length[hmodelsel]}, {scen, hnscen}];

	]; (* COMPARING RESULTS OVER SIMULATION TIME, AGGREGATED OVER AGE *)


(* --------------------------------------------------
	COMPARING MODEL INPUT AND SUBSEQUENT PARAMETER VALUES
----------------------------------------------------*)

printbug["6."];

If[(hnstap == 1) && (hnrun == 1) && (analyse == 3),

	tekst	= "From input data to model parameter values";
	addcellnb[headingprint1nb[tekst]];

	(* RELATIVE RISKS FOR EACH RISK FACTOR AND DISEASE SELECTED IN BASELINE RUN *)

printbug["6.1"];

	RRA 	= Table[RRrisk0[[resmodel[[1, 1, r]], RRriskind0[[resmodel[[1, 1, r]], resmodel[[1, 2, d]] + 1]]]], {r, hnrd}, {d, hnd}];

printbug["6.1.1"];

	RRB 	= Table[meanaggreg[RRrisk1[[resmodel[[1, 1, r]], RRriskind0[[resmodel[[1, 1, r]], resmodel[[1, 2, d]] + 1]], g, ri]]],
			{r, hnrd}, {d, hnd}, {g, ng}, {ri, hncr[[r]]}];

printbug["6.1.2"];

	RRC 	= Table[meanaggreg[resmodel[[2, 10, r, RRriskind0[[resmodel[[1, 1, r]], resmodel[[1, 2, d]] + 1]], g, ri]]],
			{r, hnrd}, {d, hnd}, {g, ng}, {ri, hncr[[r]]}];

printbug["6.1.3"];

	RRABC	= Table[{RRA[[r, d, g, ri]], RRB[[r, d, g, ri]], RRC[[r, d, g, ri]]}, {r, hnrd}, {d, hnd}, {g, ng}, {ri, hncr[[r]]}];
				
printbug["6.1.4"];

	plot1 	= Table[MultipleListPlot[RRABC[[r, d, g, ri]],
				plotset1,
				PlotStyle 	-> Table[{RGBColor[s / 2, 0, 1 - s / 2]}, {s, 0, 2}],
				PlotLabel 	-> disnames[[resmodel[[1, 2, d]]]],
				AxesLabel	-> {"ageclass", ""},
				PlotLegend 	-> {"data", "smooth", "adj"}],
			{r, hnrd}, {g, ng}, {d, hnd}, {ri, hncr[[r]]}];
	
	tekst	= "RR's empirical and adjusted";
	addcellnb[headingprint2nb[tekst]];

printbug["6.1.5"];

	Do[	tekst	= risknames[[resmodel[[1, 1, r]]]] <> " class " <> ToString[ri] <> " " <> gennames[[g]];
		addcellnb[headingprint3nb[tekst]];

printbug["6.1.6"];

		If[(tabind == 1),

			Do[	addcellnb[headingprint3nb[disnames[[resmodel[[1, 2, d]]]]]];
				addcellnb[Cell[BoxData[ToBoxes[roundoff[RRABC[[r, d, g, ri]], 100] // MatrixForm]], "Subsection"]],

				{d, hnd}]];
printbug["6.1.7"];

		If[(graphind == 1),

			addcellnb[Table[Cell[GraphicsData["PostScript", DisplayString[GraphicsArray[
					Table[Show[plot1[[r, g, d, ri]]], {d, 4 di + 1, Min[{4 di + 4, hnd}]}]]]],
					"Subsection", ImageSize -> Min[{(Min[{4 di + 4, hnd}] - 4 di) himagesize, figsize}]],
				{di, 0, Floor[(hnd - 1) / 4]}]]],

		{r, hnrd}, {g, ng}, {ri, hncr[[r]]}];

	(* RELATIVE RISKS FOR SMOKING IN CASE OF DURATION-DEPENDENT *)

printbug["6.2"];

	If[(RRsmokduurind == 1),	

		RRC 	= Table[meanaggreg[resmodel[[2, 10, 1, RRriskind0[[resmodel[[1, 1, 1]], resmodel[[1, 2, d]] + 1]], g, 3]]],
				{d, hnd}, {g, ng}];
printbug["6.2.1"];	

		age1	= 5 Range[nac[[1]]] - 2.5;

printbug["6.2.3"];

		duurval	= Range[nstopduur] - .5;

printbug["6.2.4"];

		meanstopduur = Table[meanaggreg[stopduur[[g, ri]]], {g, ng}, {ri, nstopduur}];

printbug["6.2.5"];		

		RRform	= Max1[Table[Plus@@((1 + (RRrisk0[[1, d, g, 2, a]] - 1) Exp[-logRRsmokduur[[d, g, 1]] *
						Exp[-logRRsmokduur[[d, g, 2]] Max0[age1[[a]] - 51]] duurval]) *
						meanstopduur[[g, Range[nstopduur], a]]) /
					(Plus@@meanstopduur[[g, Range[nstopduur], a]] + eps),
				{d, Length[logRRsmokduur]}, {g, ng}, {a, nac[[1]]}]];

printbug["6.2.6"];

		RRD	= Table[RRform[[RRriskind0[[resmodel[[1, 1, 1]], resmodel[[1, 2, d]] + 1]], g]], {d, hnd}, {g, ng}];

printbug["6.2.7"];

		RRCD	= Table[{RRC[[d, g]], RRD[[d, g]]}, {d, hnd}, {g, ng}];		

printbug["6.2.8"];

		plot1 	= Table[MultipleListPlot[
					RRCD[[d, g]],
					plotset1,
					PlotStyle 	-> Table[{RGBColor[s, 0, 1 - s]}, {s, 0, 1}],
					PlotLabel 	-> disnames[[resmodel[[1, 2, d]]]],
					AxesLabel	-> {"ageclass", ""},
					PlotLegend 	-> {"age", "duration"}],
				{g, ng}, {d, hnd}];

printbug["6.2.9"];		

		tekst	= "smoking RR's empirical and adjusted";
		addcellnb[headingprint2nb[tekst]];
		
		Do[	tekst	= gennames[[g]];

			addcellnb[headingprint3nb[tekst]];

			If[(tabind == 1),

				Do[	addcellnb[headingprint3nb[disnames[[resmodel[[1, 2, d]]]]]];
					addcellnb[Cell[BoxData[ToBoxes[roundoff[RRCD[[d, g]], 100] // MatrixForm]], "Subsection"]],

					{d, hnd}]];

			If[(graphind == 1),

				addcellnb[Table[Cell[GraphicsData["PostScript", DisplayString[GraphicsArray[
						Table[Show[plot1[[g, d]]], {d, 4 di + 1, Min[{4 di + 4, hnd}]}]]]],
						"Subsection", ImageSize -> Min[{(Min[{4 di + 4, hnd}] - 4 di) himagesize, figsize}]],
					{di, 0, Floor[(hnd - 1) / 4]}]]],

			{g, ng}]

		];

	(* RELATIVE RISKS FOR ALL CAUSE MORTALITY *)

printbug["6.3"];

	tekst	= "all cause mortality RR's empirical and adjusted";
	addcellnb[headingprint2nb[tekst]];

printbug["6.3.1"];

	RRA	= Table[RRrisk0[[resmodel[[1, 1, r]], 2]], {r, hnrd}];

printbug["6.3.2"];

	RRB	= Table[meanaggreg[RRrisk1[[resmodel[[1, 1, r]], 2, g, ri]]], {r, hnrd}, {g, ng}, {ri, hncr[[r]]}];

printbug["6.3.3"];

	RRC	= Table[meanaggreg[RRriskpresel[[resmodel[[1, 1, r]], 2, g, ri]]], {r, hnrd}, {g, ng}, {ri, hncr[[r]]}];

printbug["6.3.4"];

	RRD	= Table[(resmodel[[2, hmodelsel[[m]], 9, 1, 1, r, g, ri]] /
						(resmodel[[2, hmodelsel[[m]], 2, 1, 1, r, g, ri]] + eps)) /
					((resmodel[[2, hmodelsel[[m]], 9, 1, 1, r, g, 1]] + eps) /
						(resmodel[[2, hmodelsel[[m]], 2, 1, 1, r, g, 1]] + eps)),
				{m, Length[hmodelsel]}, {r, hnrd}, {g, ng}, {ri, hncr[[r]]}];

printbug["6.3.5"];

	RRABCD	= Table[Join[	{RRA[[r, g, ri]], RRB[[r, g, ri]], RRC[[r, g, ri]]},
					Table[RRD[[m, r, g, ri]], {m, Length[hmodelsel]}]],
			{r, hnrd}, {g, ng}, {ri, hncr[[r]]}];

printbug["6.3.6"];

	hn	= 2 + Length[hmodelsel];

printbug["6.3.7"];

	hname	= Join[	{"data", "smooth", "presel"}, Table["model " <> ToString[m], {m, Length[hmodelsel]}]];

printbug["6.3.8"];

	plot1	= Table[MultipleListPlot[
				RRABCD[[r, g, ri]],
				plotset1,
				PlotStyle 	-> Table[{RGBColor[s / hn, 0, 1 - s / hn]}, {s, 0, hn}],
				PlotLabel 	-> gennames[[g]] <> " class " <> ToString[ri],
				AxesLabel	-> {"ageclass", ""},
				PlotLegend 	-> hname],
			{r, hnrd}, {g, ng}, {ri, hncr[[r]]}];

printbug["6.3.9"];

	Do[	tekst	= risknames[[resmodel[[1, 1, r]]]];
		addcellnb[headingprint3nb[tekst]];

printbug["6.3.10"];

		If[(tabind == 1),

			Do[	addcellnb[headingprint3nb[gennames[[g]] <> " class " <> ToString[ri]]];
				addcellnb[Cell[BoxData[ToBoxes[roundoff[RRABCD[[r, g, ri]], 100] // MatrixForm]], "Subsection"]],

				{g, ng}, {ri, hncr[[r]]}]];

printbug["6.3.11"];

		If[(graphind == 1),

			Do[	addcellnb[Cell[GraphicsData["PostScript",
						DisplayString[GraphicsArray[Table[Show[plot1[[r, g, ri]]], {ri, hncr[[r]]}]]]],
						"Subsection", ImageSize -> Min[{hncr[[r]] himagesize, figsize}]]],
				{g, ng}]],

		{r, hnrd}];

	(* DISEASE-RELATED EXCESS MORTALITY RATES IN BASELINE RUN *)

printbug["6.4"];

	emA 	= excessmort0[[resmodel[[1, 2]]]];

	emB 	= Table[meanaggreg[excessmort1[[resmodel[[1, 2, d]], g]]], {d, hnd}, {g, ng}];

	emC 	= Table[meanaggreg[resmodel[[2, 8, d, g]]], {d, hnd}, {g, ng}];

	plot1 	= Table[MultipleListPlot[
				{emA[[d, g]], emB[[d, g]], emC[[d, g]]},
				plotset1,
				PlotStyle 	-> Table[{RGBColor[s / 2, 0, 1 - s / 2]}, {s, 0, 2}],
				PlotLabel 	-> disnames[[resmodel[[1, 2, d]]]],
				AxesLabel	-> {"ageclass", ""},
				PlotRange 	-> All,
				PlotLegend 	-> {"data", "smoothed", "adjusted"}],
			{g, ng}, {d, hnd}];

	
	tekst	= "excess mortality rates";
	addcellnb[headingprint2nb[tekst]];

	Do[	addcellnb[headingprint3nb[gennames[[g]]]];

		If[(graphind == 1),

			addcellnb[Table[Cell[GraphicsData["PostScript",DisplayString[GraphicsArray[
				Table[Show[plot1[[g, d]]], {d, 4 di + 1, Min[{4 di + 4, hnd}]}]]]],
				"Subsection", ImageSize -> Min[{(Min[{4 di + 4, hnd}] - 4 di) himagesize, figsize}]],

				{di, 0, Floor[(hnd - 1) / 4]}]]], 

		{g, ng}];

	Do[	tekst	= "for " <> modelnames[[hmodelsel[[m]]]];
		addcellnb[headingprint2nb[tekst]];

		(* ALL CAUSE MORTALITY RATES *)

printbug["6.5"];

		morttotreal = resmodel[[2, hmodelsel[[m]], 6, 1, 1, Length[resmodel[[2, hmodelsel[[m]], 6, 1, 1]]]]] /
				(resmodel[[2, hmodelsel[[m]], 1, 1, 1]] + eps);

		plot1	= Table[MultipleListPlot[
					{morttot0[[g]], meanaggreg[morttot1[[g]]], morttotreal[[g]]},
					plotset1,
					PlotStyle 	-> Table[{RGBColor[s / 2, 0, 1 - s / 2]}, {s, 0, 2}],
					AxesLabel	-> {"ageclass", ""},
					PlotLabel 	-> gennames[[g]],
					PlotLegend 	-> {"data", "smoothed", "realised"}],
				{g, ng}];

		tekst	= "all cause mortality rates";
		addcellnb[headingprint2nb[tekst]];

		If[(graphind == 1),

			addcellnb[Cell[GraphicsData["PostScript",
					DisplayString[GraphicsArray[Table[Show[plot1[[g]]], {g, ng}]]]],
					"Subsection", ImageSize -> Min[{ng himagesize, figsize}]]]],		

		{m, Length[hmodelsel]}];

	(* RELATIVE RISKS FOR EACH RISK PAIR OF DISEASES SELECTED IN BASELINE RUN *)

printbug["6.6"];

	RRA	= Table[RRdis0[[RRdisind[[disind[[d]], disind[[d1]]]]]], {d, hnd}, {d1, hnd}];

	RRB 	= Table[meanaggreg[RRdispresel[[RRdisind[[ disind[[d]], disind[[d1]]]], g]]], {d, hnd}, {d1, hnd}, {g, ng}];

	RRC 	= Table[meanaggreg[RRdisadj[[RRdisind[[ disind[[d]], disind[[d1]]]], g]]], {d, hnd}, {d1, hnd}, {g, ng}];

	RRD 	= Table[meanaggreg[RRdisprev[[d, d1, g]]], {d, hnd}, {d1, hnd}, {g, ng}];

	plot1	= Table[MultipleListPlot[
				{RRA[[d, d1, g]], RRB[[d, d1, g]], RRC[[d, d1, g]], RRD[[d, d1, g]]},
				plotset1,
				PlotStyle 	-> Table[{RGBColor[s / 3, 0, 1 - s / 3]}, {s, 0, 3}],
				AxesLabel	-> {"ageclass", ""},
				PlotLabel 	-> disnames[[disind[[d1]]]],
				PlotLegend 	-> {"data", "unadjusted", "adjusted", "prevalence"}],
				{g, ng}, {d, hnd}, {d1, hnd}];

	tekst	= "co-morbidity RR's";
	addcellnb[headingprint2nb[tekst]];

	If[(graphind == 1),

		Do[	addcellnb[headingprint3nb[gennames[[g]] <> disnames[[disind[[d]]]] <> " on"]];

			Do[addcellnb[Table[Cell[GraphicsData["PostScript",DisplayString[GraphicsArray[
				Table[Show[plot1[[g, d, d1]]], {d1, 4 di + 1, Min[{4 di + 4, hnd}]}]]]],
				"Subsection", ImageSize -> Min[{(Min[{4 di + 4, hnd}] - 4 di) himagesize, figsize}]],

				{di, 0, Floor[(hnd - 1) / 4]}]]], 

		{g, ng}, {d, hnd}]]

	];


(* --------------------------------------------------
	COMPARING MODEL INPUT AND RESULTS OVER TIME FOR FIXED AGE CLASS
----------------------------------------------------*)

printbug["7."];

makeresdis4[o_, disdat_, scen_] := Block[{},

	prev = Table[0, {hnrun + 1}, {hnd}];

	Do[prev[[1, d]] = Table[(meanaggreg[disdat[[resmodel[[1, 2, d]], g]]])[[ageclssel]], {g, ng}, {hnstap}], {d, hnd}];

printbug["7.1"];

	Do[prev[[2, d]] = Table[resmodel[[2, hmodelsel[[m]], o, scen, Range[hnstap], d, g, ageclssel]] / (hnpop[[1, g]] + eps), {g, ng}],
				{d, hnd}];

printbug["7.2"];

	Do[prev[[s + 1, d]] = If[(pointerdis[[s - 1, d]] > 0),

					Table[resmodel[[2 s, hmodelsel[[m]], o, scen, Range[hnstap], pointerdis[[s - 1, d]], g, ageclssel]] /
						(hnpop[[s, g]] + eps),
						{g, ng}],
					prev[[1, d]]],

				{s, 2, hnrun}, {d, hnd}];

printbug["7.3"];

	If[(graphind == 1),

		plot1 	= Table[MultipleListPlot[
					Table[prev[[s, d, g]], {s, hnrun + 1}],
					plotset1,
					PlotStyle 	-> stdruncolor2,
					PlotLabel 	-> disnames[[resmodel[[1, 2, d]]]],
					AxesLabel	-> {"time", ""},
					PlotLegend 	-> stdrunlegend2],
				{g, ng}, {d, hnd}];

		Do[	addcellnb[headingprint3nb[gennames[[g]]]];

			Do[addcellnb[Cell[GraphicsData["PostScript",
					DisplayString[GraphicsArray[Table[Show[plot1[[g, d]]], {d, 4 di + 1, Min[{4 di + 4, hnd}]}]]]],
					"Subsection", ImageSize -> Min[{(Min[{4 di + 4, hnd}] - 4 di) himagesize, figsize}]]],
				{di, 0, Floor[(hnd - 1) / 4]}],

			{g, ng}]

		]

	];

If[(hnstap > 1) && (hnrun >= 1) && (analyse == 3) && (resmodel[[1, 5]] == 1) && (resmodel[[1, 6]] == na1),

	Do[	hnpop = Table[resmodel[[2 s, hmodelsel[[m]], 1, scen, n, g, ageclssel]], {s, hnrun}, {g, ng}, {n, hnstap}];

printbug["7.4"];
	
		tekst	= "Comparison with cross-sectional data specified by year, " <> modelnames[[hmodelsel[[m]]]] <> ", ageclass "<>
				ToString[initageclass[[1, ageclssel]]] <> " - " <> ToString[initageclass[[1, ageclssel + 1]] - 1];
		addcellnb[headingprint1nb[tekst]];

		(* POPULATION NUMBERS *)

printbug["7.5"];
		
		pop		= Table[0, {hnrun + 1}];
		pop[[1]] 	= Table[npop1[[g, ageclssel]], {g, ng}, {hnstap}];
		pop[[1 + Range[hnrun]]] = hnpop;

		tekst	= "Population numbers" <> ", scenario " <> ToString[scen];
		addcellnb[headingprint2nb[tekst]];

		If[(graphind == 1),

			plot1 	= Table[MultipleListPlot[
						Table[pop[[s, g]], {s, hnrun + 1}],
						plotset1,
						PlotStyle 	-> stdruncolor2,
						PlotLabel 	-> gennames[[g]],
						AxesLabel	-> {"time", ""},
						PlotLegend 	-> stdrunlegend2],
					{g, ng}];

			addcellnb[Cell[GraphicsData["PostScript",
					DisplayString[GraphicsArray[Table[Show[plot1[[g]]], {g, ng}]]]],
					"Subsection", ImageSize -> Min[{ng himagesize, figsize}]]]

			];

		(* RISK FACTOR CLASS PREVALENCE NUMBERS *)

printbug["7.5"]; 

		risk = Table[0, {hnrun + 1}, {r, hnrd}];

		Do[risk[[1, r]] = Table[(meanaggreg[prisk1[[resmodel[[1, 1, r]], g, ri]]])[[ageclssel]],
						{g, ng}, {ri, hncr[[r]]}, {hnstap}],
					{r, hnrd}];

		Do[	If[(hdisrisk[[r]] == 0),

			(* RISK FACTORS FOR TOTAL POPULATION *)

printbug["7.51"];

			risk[[2, r]] = Table[resmodel[[2, hmodelsel[[m]], 2, scen, n, r, g, ri, ageclssel]] / (hnpop[[1, g, n]] + eps),
						{g, ng}, {ri, hncr[[r]]}, {n, hnstap}];
printbug["7.52"];

			Do[risk[[s + 1, r]] = If[(pointerrisk[[s - 1, r]] > 0),

							Table[resmodel[[2 s, hmodelsel[[m]], 2, scen, n, r, g, ri, ageclssel]] /
								(hnpop[[s, g, n]] + eps),
								{g, ng}, {ri, hncr[[r]]}, {n, hnstap}],
							risk[[1, r]]],

						{s, 2, hnrun}],

			(* DISEASE-RELATED RISK FACTORS *)

printbug["7.53"];

			risk[[2, r]] = Table[resmodel[[2, hmodelsel[[m]], 2, scen, n, r, g, ri, ageclssel]] /
						(resmodel[[2, hmodelsel[[m]], 4, scen, n, hdisrisk[[r]], g, ageclssel]] + eps),
						{g, ng}, {ri, hncr[[r]]}, {n, hnstap}];

			Do[risk[[s + 1, r]] = Table[resmodel[[2, hmodelsel[[m]], 2, scen, n, r, g, ri, ageclssel]] /
							(resmodel[[2, hmodelsel[[m]], 4, scen, n, hdisrisk[[pointerrisk[[s - 1, r]]]], g,
								ageclssel]] + eps),
							{g, ng}, {ri, hncr[[r]]}, {n, hnstap}],
						{s, 2, hnrun}]],

			{r, hnrd}];

printbug["7.54"]; 

		tekst	= "Risk factor class prevalence rates" <> ", scenario " <> ToString[scen];
		addcellnb[headingprint2nb[tekst]];

		If[(graphind == 1),

			plot1 	= Table[MultipleListPlot[
						Table[risk[[s, r, g, ri]], {s, hnrun + 1}],
						plotset1,	
						PlotStyle 	-> stdruncolor2,
						PlotLabel 	-> risknames[[resmodel[[1, 1, r]]]] <> ToString[ri],
						AxesLabel	-> {"time", ""},
						PlotLegend 	-> stdrunlegend2],
					{r, hnrd}, {g, ng}, {ri, hncr[[r]]}];

			Do[	addcellnb[headingprint3nb[risknames[[resmodel[[1, 1, r]]]] <> gennames[[g]]]];
			    	addcellnb[Cell[GraphicsData["PostScript",
					DisplayString[GraphicsArray[
						Table[Show[plot1[[r, g, rj]]], {rj, 4 ri + 1, Min[{4 ri + 4, hncr[[r]]}]}]]]],
					"Subsection", ImageSize -> Min[{(Min[{4 ri + 4, hncr[[r]]}] - 4 ri) himagesize, figsize}]]],
				{r, hnrd}, {ri, 0, Floor[(hncr[[r]] - 1) / 4]}, {g, ng}]];

		(* DISEASE PREVALENCE NUMBERS *)

printbug["7.6"];

		tekst	= "Disease prevalence rates" <> ", scenario " <> ToString[scen];
		addcellnb[headingprint2nb[tekst]];

		makeresdis4[4, pdis1, scen];

		(* DISEASE INCIDENCE NUMBERS *)

printbug["7.7"];

		tekst	= "Disease incidence rates" <> ", scenario " <> ToString[scen];
		addcellnb[headingprint2nb[tekst]];

		makeresdis4[5, inc1, scen];

		(* ALL CAUSE MORTALITY NUMBERS *)

printbug["7.7"];

		tekst	= "All cause mortality rates" <> ", scenario " <> ToString[scen];
		addcellnb[headingprint2nb[tekst]];

		mort		= Table[0, {hnrun + 1}];
		mort[[1]]	= Table[morttot0[[g, ageclssel]], {g, ng}, {hnstap}];
		Do[mort[[s + 1]] = Table[resmodel[[2 s, hmodelsel[[m]], 6, scen, Range[hnstap],
						Length[resmodel[[2 s, hmodelsel[[m]], 6, scen, 1]]], g, ageclssel]] / (hnpop[[s, g]] + eps),
						{g, ng}],
					{s, hnrun}];
		
		If[(graphind == 1),

			plot1 	= Table[MultipleListPlot[
						Table[mort[[s, g]], {s, hnrun + 1}],
						plotset1,
						PlotStyle 	-> stdruncolor2,
						PlotLabel 	-> gennames[[g]],
						AxesLabel	-> {"time", ""},
						PlotLegend 	-> stdrunlegend2],
					{g, ng}];

			addcellnb[Cell[GraphicsData["PostScript",
					DisplayString[GraphicsArray[Table[Show[plot1[[g]]], {g, ng}]]]],
					"Subsection", ImageSize -> Min[{ng himagesize, figsize}]]]

			],

		{m, Length[hmodelsel]}, {scen, hnscen}]

	]; (* END COMPARING MODEL INPUT AND RESULTS OVER TIME FOR FIXED AGE CLASS *)


If[(analyse == 3), NotebookWrite[hnbout, Flatten[cellnb]]];
	

(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];

End[]


Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMMain *)

(* :Context: CZMMain` *)

(* :Author: Rudolf T. Hoogenveen *)

(* :Summary:
   CZM initialization routine contains the names of the default import data files *)

(* :Copyright: © 2004 by Roel G.M. Breuls/Rudolf Hoogenveen *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)


(* :History: 	2.1 first release CZM 2005, version March, *010305.txt input files
		3.0 release CZM, November 2005 
		3.1 release CZM, March 2007 *)

(* :Keywords: file names, import *)


BeginPackage["CZMMain`CZMMain`"]

CZMprogram::usage	= "CZMprogram runs CZM for different input selections"
run::usage		= "index on model runs"


Begin["`Private`"]


Print["CZMMain package is evaluated"];

printbug[c_] := Print[{"CZMMain", c}];


(* ALL CZM SIMULATION MODEL RUNS *)

CZMprogram := Block[{},

	(* # RUNS TO BE MADE *)

printbug["1"];

	appltype	= StringTake[ToString[Global`application], 4];

	applnumber	= ToExpression[StringDrop[ToString[Global`application], 4]];

printbug["1.1"];

	Switch[appltype,

		"stnd",	nrun = 1,

		"test",	nrun = Switch[applnumber,

					1,	8,
					2,	8,
					3,	8,
					4,	4,
					5,	4,
					6,	4,
					7,	4,
					8,	4,
					9,	4,
					10,	5,
					11,	2,
					12,	2,
					13,	4,
					29,	2,
					30,	2,
					31,	2,
					_,	1],

		"outp",	nrun = (Read[Global`resfile])[[1]],

		_,	1];
		
printbug["1.3"];

	If[(appltype != "outp"),

printbug["2"];

		Put[{nrun}, Global`outputpath <> "outfileresmodelrun.m"];

		Put[{}, Global`outputpath <> "outfilemarginalmodeldetermpop.m"];
		Put[{}, Global`outputpath <> "outfilejointmodelstochpop.m"];
		Put[{}, Global`outputpath <> "outfilejointmodelstochind.m"];
		Put[{}, Global`outputpath <> "outfilejointmodelstochage"];
		Put[{}, Global`outputpath <> "outfilejointmodeldetermpop.m"];
		Put[{}, Global`outputpath <> "outfilejointmodeldetermage.m"]

		];

	Do[	(* REMOVE CZM MEMORY CONTENTS *)

printbug["3"];

			Do[If[(StringTake[$ContextPath[[i]], 3] == "CZM") && (StringTake[$ContextPath[[i]], 7] != "CZMMain"),

				Unprotect[Evaluate[$ContextPath[[i]] <> "*"]]], {i, 1, Length[$ContextPath]}];
				Map[Close, Streams[][[Range[3, Length[Streams[]]]]]];

		Print["CZM run " <> ToString[run]];

		(* INITIALIZATION *)

printbug["3.1"];

			Get["CZMInitialization`CZMLogFile`"];

			Get["CZMInitialization`CZMDefaultFileNames`"];

			Get["CZMInitialization`CZMConstants`"];

			Get["CZMInitialization`CZMFunctions`"];

		(* IMPORT USER INPUT SELECTIONS *)

printbug["3.2"];

			Get["CZMImportData`CZMImportUserSelections`"];

		(* IMPORT MODEL DATA *)

printbug["3.3"];

			Get["CZMImportData`CZMImportDemography`"];

			Get["CZMImportData`CZMImportRiskFactors`"];

			Get["CZMImportData`CZMImportDiseaseData`"];

			Get["CZMImportData`CZMImportRelativeRisks`"];

			Get["CZMImportData`CZMImportDALYs`"];

			Get["CZMImportData`CZMImportCosts`"];

		(* PARAMETER ADJUSTMENTS BEFORE SELECTION OF RISK FACTORS AND DISEASES *)

printbug["3.4"];

			Get["CZMAdjustData`CZMDataSmoothing`"];

			Get["CZMAdjustData`CZMAdjustBeforeSelection`"];

		(* SELECTION OF RISK FACTORS AND DISEASES *)

printbug["3.5"];

			Get["CZMAdjustData`CZMMakeSelections`"];

			If[(appltype != "outp"),

		(* PARAMETER ADJUSTMENTS BEFORE SELECTION OF RISK FACTORS AND DISEASES *)

printbug["3.6"];

				Get["CZMAdjustData`CZMAdjustAfterSelection`"]; 

		(* GENERAL SIMULATION FUNCTIONS *)

printbug["3.7"];

		        	Get["CZMDefineScenarios`CZMDefineScenarios`"]; 

				Get["CZMSimulation`CZMSimulationFunctions`"];

		(* RUNNING CZM SIMULATION MODEL VERSIONS SELECTED *)

printbug["3.8"];

				Get["CZMSimulation`CZMSimulationMarginalModelDetermPop`"];

				Get["CZMSimulation`CZMSimulationJointModelDetermPop`"];

				Get["CZMSimulation`CZMSimulationJointModelDetermAge`"];

				Get["CZMSimulation`CZMSimulationJointModelStochInd`"];

				];(* IF[(appltype != "outp") *)

			Get["CZMSimulation`CZMStoreResults`"];

		(* REMOVE CZM OUTPUT MEMORY CONTENTS *)

printbug["3.9"];

			Do[If[(StringLength[$ContextPath[[i]]] > 16) && (StringTake[$ContextPath[[i]], 17] == "CZMPostProcessing"),
				Unprotect[Evaluate[$ContextPath[[i]] <> "*"]]], {i, 1, Length[$ContextPath]}];

			Map[Close, Streams[][[Range[3, Length[Streams[]]]]]];
	
		(* OUTPUT USER INPUT SELECTIONS *)

printbug["3.10"];

			Get["CZMPostProcessing`CZMExportUserSelections`"];

		(* RUNNING CZM OUTPUT PROCEDURES *)

printbug["3.11"];

			Get["CZMPostProcessing`CZMCalcResults`"];

			If[(appltype == "stnd") && (applnumber == 1), Get["CZMPostProcessing`CZMCalcResultsJoint`"]];

			Get["CZMPostProcessing`CZMPresentResults`"];
	
			If[(nrun == 1), Get["CZMPostProcessing`CZMSensitivityAnalyses`"]],

		{run, 1, nrun}]; (* END DO OVER CZM MODEL RUNS *)

		(* POST PROCESSING *)

			If[(appltype == "test") && (applnumber > 0), Get["CZMPostProcessing`CZMCompareRuns`"]];
			
	]; (* END CZMProgram *)


End[]

Protect[Evaluate[Context[] <> "*"]]

EndPackage[]

