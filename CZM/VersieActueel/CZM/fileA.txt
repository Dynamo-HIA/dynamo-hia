(* :Title: CZMDefaultFileNames *)

(* :Context: CZMInitialization` *)

(* :Author: Rudolf T. Hoogenveen, Roel G.M. Breuls *)

(* :Summary:
   CZM initialization routine contains the names of the default import data files *)

(* :Copyright: © 2004 by Roel G.M. Breuls/Rudolf Hoogenveen *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)


(* :History: 	1.0 July 2004 (Roel Breuls), First update new implementation CZM
		1.1 September 2004 (Pieter van Baal), Addition of new default file name: allcauseDALYinput 
        	2.0 first release CZM 2005, version March, *010305.txt input files
		3.0 version november 2005 
		3.1 version March 2007; risk factor class distributions within patients (riskdisinput.txt) *)

(* :Keywords: file names, import *)


BeginPackage["CZMInitialization`CZMDefaultFileNames`",
	"CZMInitialization`CZMLogFile`"]


deminput::usage  		= "Name of file containing data on demography"
smokinput::usage 		= "Name of file containing data on smoking prevalence and transition rates"
SBPinput::usage 	 	= "Name of file containing data on SBP prevalence and transition rates"
cholinput::usage  		= "Name of file containing data on cholesterol prevalence and transition rates"
BMIinput::usage 		= "Name of file containing data on BMI prevalence and transition rates"
lichactinput::usage 		= "Name of file containing data on physical activity prevalence and transition rates"
alcoinput::usage 		= "Name of file containing data on alcohol consumption prevalence and transition rates"
verzvetinput::usage 		= "Name of file containing data on satur fat consumption prevalence and transition rates"
transvetinput::usage 		= "Name of file containing data on trans fat consumption prevalence and transition rates"
fruitinput::usage 		= "Name of file containing data on fruit consumption prevalence and transition rates"
groenteinput::usage 		= "Name of file containing data on vegetables consumption prevalence and transition rates"
visinput::usage 		= "Name of file containing data on fish consumption prevalence and transition rates"
HbA1cinput::usage 		= "Name of file containing data on HbA1c prevalence and transition rates"

riskdisinput		::usage	= "name of file containing data on risk factor class distributions within patients"

RRsmokinput::usage 		= "Name of file containing relative risk data for smoking"
smokduurinput::usage		= "Name of file containing parameters values of decrease of former smokers RR's and relapse rate"
RRSBPinput::usage 		= "Name of file containing relative risk data for SBP"
RRcholinput::usage 		= "Name of file containing relative risk data for cholesterol"
RRBMIinput::usage 		= "Name of file containing relative risk data for BMI"
RRlichactinput::usage 		= "Name of file containing relative risk data for physical activity"
RRalcoinput::usage 		= "Name of file containing relative risk data for alcohol consumption"
RRverzvetinput::usage 		= "Name of file containing relative risk data for saturated fat consumption"
RRtransvetinput::usage 		= "Name of file containing relative risk data for trans fatty acid consumption"
RRfruitinput::usage 		= "Name of file containing relative risk data for fruit consumption"
RRgroenteinput::usage 		= "Name of file containing relative risk data for vegetables consumption"
RRvisinput::usage 		= "Name of file containing relative risk data for fish consumption"
RRHbA1cinput::usage 		= "Name of file containing relative risk data for HbA1c"
RRCVDinput::usage 		= "Name of file containing relative risk data for one disease on another disease incidence"
RRcasefatinput::usage		= "Name of file containing relative risk data for one diseasd on another disease case fatality"	

CHDinput::usage		 	= "Name of file containing incidence, prevalence, and excess mortality rates for CHD"
CHFinput::usage 		= "Name of file containing incidence, prevalence, and excess mortality rates for CHF"
CVAinput::usage 		= "Name of file containing incidence, prevalence, and excess mortality rates for CVA"
CARAinput::usage 		= "Name of file containing incidence, prevalence, and excess mortality rates for CARA"
DMinput::usage 			= "Name of file containing incidence, prevalence, and excess mortality rates for DM"
demeninput::usage 		= "Name of file containing incidence, prevalence, and excess mortality rates for dementia"
artrinput::usage 		= "Name of file containing incidence, prevalence, and excess mortality rates for arthritis"
dorsinput::usage 		= "Name of file containing incidence, prevalence, and excess mortality rates for dorsopathy"
osteinput::usage 		= "Name of file containing incidence, prevalence, and excess mortality rates for
					osteoporosis"
nonmodelprevinput ::usage	= "Name of file containing prevalence rates of diseases not modelled in CZM"

cancmortinput::usage 		= "Name of file containing mortality rates for types of cancer"
cancrelsurvinput::usage		= "Name of file containing relative survival rates for types of cancer"
cancincinput::usage 		= "Name of file containing incidence rates for types of cancer"
cancprevinput::usage 		= "Name of file containing prevalence rates for types of cancer"

DALYwgtinput::usage 		= "Name of file containing DALY weights pf diseases modelled in CZM"
nonmodelDALYwgtinput ::usage	= "Name of file containing DALY weights of diseases not modelled in CZM"

costspersoninput::usage	 	= "Name of file containing costs per person data"
costspatientinput::usage	= "Name of file containing costs per patient data"

userinput::usage	 	= "Name of file containing user selections of input"
useroutput::usage	 	= "Name of file containing user selections of output"


Begin["`Private`"]


Print["CZMDefaultFileNames package is evaluated"];

	userinput	= "userinput011205.txt"
	useroutput	= "useroutput011205.txt"

(* DEMOGRAPHY *)

	deminput  	= "demdata111005.txt"

(* RISK FACTORS *)

	smokinput 	= "smokinput010505.txt"
	SBPinput  	= "SBPinput240406.txt"
	cholinput 	= "cholinput240406.txt"
	BMIinput  	= "BMIinput011205.txt"
	lichactinput	= "lichactCBS011205.txt"
	alcoinput	= "alcoinput011205.txt"
	verzvetinput	= "verzvetinput221105.txt"
	transvetinput	= "transvetinput011205.txt"
	groenteinput	= "groenteinput011205.txt"
	fruitinput	= "fruitinput011205.txt"
	visinput	= "visinput011205.txt"
	HbA1cinput	= "HbA1cinput130106.txt"

(* DISCFRETELY DISTRIBUTED RISK FACTORS WITHIN PATIENTS *)

	riskdisinput			= "riskdisinput.txt";

(* RELATIVE RISKS *)

	RRsmokinput 	= "RRsmok090305.txt"
	smokduurinput 	= "smokinputduur010305.txt"
	RRSBPinput  	= "RRSBPinput240406.txt"
	RRcholinput 	= "RRcholinput240406.txt"
	RRBMIinput  	= "RRBMIinput260505.txt"
	RRlichactinput	= "RRlichactinput010305.txt"
	RRalcoinput	= "RRalcoinput010305.txt"
	RRverzvetinput	= "RRverzvetinput010305.txt"
	RRtransvetinput	= "RRtransvetinput010305.txt"
	RRgroenteinput	= "RRgroenteinput010305.txt"
	RRfruitinput	= "RRfruitinput010305.txt"
	RRvisinput	= "RRvisinput010305.txt"
	RRHbA1cinput	= "RRHbA1cinput120405.txt"
	RRCVDinput  	= "RRCVDinput130605.txt"
	RRcasefatinput	= "RRcasefat130605.txt"

(* NONCANCEROUS DISEASE DATA *)

	CHDinput 	= "CHDinput010305.txt"
	CHFinput	= "CHFinput010305.txt"
	CVAinput	= "CVAinput010305.txt"
	CARAinput	= "CARAinput010305.txt"
	DMinput		= "DMinput241105.txt"
	demeninput	= "demeninput010305.txt"
	artrinput	= "artrinput010305.txt"
	dorsinput	= "dorsinput010305.txt"
	osteinput	= "osteinput010305.txt"

	nonmodelprevinput = "nonmodelprev010305.txt"

(* CANCEROUS DISEASE DATA *)

	cancmortinput 	= "cancmort010305.txt" 
	cancrelsurvinput = "cancrelsurv010305.txt"
	cancincinput 	=  "cancinc010305.txt"
	cancprevinput 	= "cancprev010305.txt"

(* DALYS *)

	DALYwgtinput 	= "DALYwgt010305.txt"
	nonmodelDALYwgtinput = "nonmodelDALYwgt010305.txt" 

	
(* COSTS *)

	costspersoninput  = "costsperson180505.txt"
	costspatientinput = "costspatient180505.txt"
	

(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];


WriteString[logfile, "Summary of input files used for the simulation: \n\n"];

WriteString[logfile,

"Demography" <> "\n\n", 

	"\t" <> deminput 		<> "\n\n", 

"Risk Factors" <> "\n\n",

	"\t" <> smokinput 		<> "\n", 
	"\t" <> SBPinput 		<> "\n", 
	"\t" <> cholinput 		<> "\n", 
	"\t" <> BMIinput 		<> "\n", 
	"\t" <> lichactinput 		<> "\n", 
	"\t" <> alcoinput 		<> "\n", 
	"\t" <> verzvetinput 		<> "\n", 
	"\t" <> transvetinput 		<> "\n", 
	"\t" <> groenteinput 		<> "\n", 
	"\t" <> fruitinput 		<> "\n", 
	"\t" <> visinput 		<> "\n",
	"\t" <> HbA1cinput 		<> "\n\n", 


"Risk Factor distributions within patients" <> "\n\n",

	"\t" <> riskdisinput 		<> "\n\n",


"Relative Risks" <> "\n\n",

	"\t" <> RRsmokinput 		<> "\n", 
	"\t" <> smokduurinput 		<> "\n", 
	"\t" <> RRSBPinput 		<> "\n", 
	"\t" <> RRcholinput 		<> "\n", 
	"\t" <> RRBMIinput 		<> "\n", 
	"\t" <> RRlichactinput 		<> "\n", 
	"\t" <> RRalcoinput 		<> "\n", 
	"\t" <> RRverzvetinput 		<> "\n", 
	"\t" <> RRtransvetinput 	<> "\n", 
	"\t" <> RRgroenteinput 		<> "\n", 
	"\t" <> RRfruitinput 		<> "\n", 
	"\t" <> RRvisinput 		<> "\n", 
	"\t" <> RRHbA1cinput 		<> "\n", 
	"\t" <> RRCVDinput 		<> "\n",
	"\t" <> RRcasefatinput 		<> "\n\n",

"Diseases" <> "\n\n",

	"\t" <> CHDinput 		<> "\n", 
	"\t" <> CHFinput 		<> "\n", 
	"\t" <> CVAinput 		<> "\n", 
	"\t" <> CARAinput 		<> "\n", 
	"\t" <> DMinput 		<> "\n", 
	"\t" <> demeninput 		<> "\n", 
	"\t" <> artrinput 		<> "\n", 
	"\t" <> dorsinput 		<> "\n", 
	"\t" <> osteinput 		<> "\n", 

	"\t" <> cancmortinput 		<> "\n", 
	"\t" <> cancrelsurvinput 	<> "\n", 
	"\t" <> cancincinput 		<> "\n", 
	"\t" <> cancprevinput 		<> "\n", 

	"\t" <> nonmodelprevinput 	<> "\n\n",

"Costs and DALYs" <> "\n\n",

	"\t" <>	costspersoninput 	<> "\n",
	"\t" <>	costspatientinput 	<> "\n",
	"\t" <> DALYwgtinput 		<> "\n", 
	"\t" <> nonmodelDALYwgtinput 	<> "\n\n",

"User Selections" <> "\n\n",

	"\t" <> userinput 		<> "\n", 
	"\t" <> useroutput 		<> "\n\n"
]


End[]

Protect[Evaluate[Context[] <> "*"]]

EndPackage[]

(* :Title: CZMConstants *)

(* :Context: CZMInitialization` *)

(* :Author: Rudolf T. Hoogenveen, Roel G.M. Breuls *)

(* :Summary:
   CZM initialization routine defines age class distributions and
   several constants *)

(* :Copyright: © 2004 by Roel G.M. Breuls *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM July 2004
		2.0 first release CZM 2005, version March
		3.0 version november 2005 
		3.1 version March 2007 *)

(* :Keywords: initialization of age class distributions *)


BeginPackage["CZMInitialization`CZMConstants`",
	"CZMInitialization`CZMLogFile`"]

ng::usage 		= "number of genders (=2)"
gennames::usage		= "gennames[[g]]: gender names"
eps::usage 		= "small number used in the denominater of divisions to prevent dividing by zero" 
na::usage 		= "number of age years (= 85)"
na1::usage		= "number of age years ( = na+1 = 86) "
na2::usage 		= "age at which there are no survivers (120), which is used for life table calculations"
nac::usage 		= "nac[[c]]: number of ageclasses for each ageclass distribution defined"
initageclass::usage 	= "initageclass[[c,ai]]: 1st years per ageclass per ageclass distribution"
lengthageclass::usage 	= "lengthageclass[[c,ai]]: number of years per ageclass per ageclass distribution"
ageyearclass::usage 	= "ageyearclass[[c,a]]: for each age-year the ageclass to which it belongs"


Begin["`Private`"]


Print["CZMConstants package is evaluated"];

(* MISCELLANEOUS *)

ng	= 2;
gennames = {"males ", "females "}; 

eps	= 0.000000000001;

(* AGECLASS DISTRIBUTION DATA *)

na	= 85;
na1	= na + 1;
na2	= 120;
nac	= {18, 20, 9, 5, 8, 6, 4};

initageclass = Partition[Flatten[{
		{5 Range[nac[[1]]] - 5, Table[na1, {21 - nac[[1]]}]}, 
        	{0, 1, 2, 5 Range[17], na1},
		{10 Range[9] - 10, Table[na1, {21 - nac[[3]]}]}, 
		{0, 5, 15, 45, 60, Table[na1, {21 - nac[[4]]}]}, 
		{0, 1, 15, 25, 45, 65, 75, 85, Table[na1, {21 - nac[[5]]}]},
		{0, 30 + 10 Range[5], Table[na1, {21 - nac[[6]]}]},
		{0, 40, 60, 80, Table[na1, {21 - nac[[7]]}]}}],
		21]; 

lengthageclass = Table[Drop[initageclass[[c]], 1] - Drop[initageclass[[c]], -1], {c, Length[nac]}]; 

ageyearclass = Partition[	Flatten[Table[Range[nac[[c]]][[ai]], {c, Length[nac]}, {ai, nac[[c]]}, {lengthageclass[[c, ai]]}]],
				na1];


(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version: " <> ToString[version] <> "\n\n"];

End[]

Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
(* :Title: CZMFunctions *)

(* :Context: CZMInitialization` *)

(* :Author: Rudolf T. Hoogenveen, Roel G.M. Breuls *)

(* :Summary:
   CZM initialization routine defines a number of general functions and unit vectors *)

(* :Copyright: © 2004 by Roel G.M. Breuls *)

(* :Package Version: 3.1 *)

(* :Mathematica Version: 5.1 *)

(* :History: 	1.0 first update new implementation CZM July 2004
		2.0 first release CZM 2005, version March, *010305.txt input files
		3.0 version novermber 2005 
		3.1 version March 2007; input file reading routines *)

(* :Keywords: help functions, smoothing functions, unit vectors *)


BeginPackage["CZMInitialization`CZMFunctions`",
	{"CZMInitialization`CZMLogFile`",
	"CZMInitialization`CZMConstants`",
	"Statistics`NormalDistribution`",
	"Statistics`ContinuousDistributions`"}]


skipcomment	::usage	= "skips comment lines in data file"

Min1::usage 	= "Min1[x]: cuts off values larger than 1: 1 if x>=1 and x if x<1"
Max1::usage 	= "Max1[x]: cuts off values smaller than 1: 1 if x<=1 and x if x>1"
Min0::usage 	= "Min0[x]: Cuts off values smaller than 0: 0 if x>=0 and x if x<0"
Max0::usage 	= "Max0[x]: cuts off values smaller than 0: 0 if x<=0 and x if x>0"
Maxc::usage 	= "Maxc[x,c]: cuts off values smaller than c: c if x<=c and x if x>c"
Minc::usage 	= "Minc[x,c]: cuts off values larger than c: c if x>=c and x if x<c"
roundoff::usage	= "roundoff[x,m]: rounds off x to m decimals"

vect0::usage 	= "vector of length nac[[1]] with values 0"
vect1::usage 	= "vector of length nac[[1]] with values 1"
vect00::usage 	= "vector of length na1 with values 0"
vect11::usage 	= "vector of length na1 with values 1 "
vect12::usage 	= "matrix of dimensions 2xna1 with values 1"


aggreg::usage 	= "aggreg[v,c] aggregates a vector v, according to ageclass distribution c"
aggregc::usage 	= "aggreg[v,c1,c2] redistributes a vector aggregated over ageclass distribution c1 to ageclass distribution c2"
meanaggreg::usage = "meanaggreg[v] calculates mean values per 5 year ageclass from age year data"
enlarge::usage	= "enlarge[v] expands 5 year ageclass data to values specified by age year"
enlargec::usage	= "enlargec[v,c] expands data specified by ageclass distrubtion c to values specified by age year"

subsetn::usage	= "subsetn[v1,v2] calculates age 85+ numbers at the end of year as sum of 84 (v1) and 85+ (v2) numbers at start"
subsetp::usage	= "subsetp[v1,v2,wgt] calculates age 85+ rates at the end of year as weighted sum of 84 (v1) and 85+ (v2) rates at start"


fsmooth::usage 	= "fsmooth[x] interpolates a 18 ageclass vector x by (1) expanding the
		   vector to a 86 years vector by copying each element 5 times, and (2)   
		   smoothing this vector using a penalty matrix."

fsmooth1::usage = "fsmooth1[x] interpolates a 18 ageclass vector x by (1) expanding the 
		   vector to a 86 years vector by copying each element 5 times, (2) applying   
		   a log-transformation to it, (3) smoothing this vector using a penalty matrix,
		   and (4) de-transforming it."

schrijf::usage	= "schrijf[naam, dat] writes array dat to file with name naam"


Begin["`Private`"]


Print["CZMFunctions package is evaluated"];


(* --------------------------------------------------
		INPUT FILE READING ROUTINES
----------------------------------------------------*)

skipcomment[dat_] := Block[{}, 
	Skip[dat, Record, RecordSeparators -> {{"(*"}, {"*)"}}];
	Read[dat, Word]];


(* --------------------------------------------------
		CUT-OFF AND ROUND-OFF ROUTINES
----------------------------------------------------*)

Min1[x_] 	:= Min[x, 1]; 
Max1[x_] 	:= Max[x, 1]; 
Max0[x_] 	:= Max[x, 0]; 
Min0[x_] 	:= Min[x, 0]; 
Maxc[x_, c_] 	:= Max[x, c]; 
Minc[x_, c_] 	:= Min[x, c]; 

roundoff[x_, m_] := 1. Round[m x] / m;

SetAttributes[{Max0, Min0, Max1, Min1, Maxc, Minc, roundoff}, Listable]; 


(* --------------------------------------------------
		UNIT VECTORS AND MATRICES
----------------------------------------------------*)

vect1 		= Table[1, {nac[[1]]}]; 
vect0 		= Table[0, {nac[[1]]}];
vect11 		= Table[1, {na1}]; 
vect12 		= {vect11, vect11}; 
vect00 		= 0 vect11;


(* --------------------------------------------------
		AGECLASS CONVERSION ROUTINES
----------------------------------------------------*)

aggreg[v_, c_] 		:= Table[Plus@@v[[initageclass[[c, ai]] + Range[lengthageclass[[c, ai]]]]], {ai, nac[[c]]}]; 

aggregc[v_, c1_, c2_] 	:= Table[Plus@@v[[Range[
				ageyearclass[[c1, initageclass[[c2, ai]] + 1]],
				ageyearclass[[c1,initageclass[[c2, ai + 1]]]]
				]]],
				{ai, nac[[c2]]}]; 

meanaggreg[v_]		:= aggreg[v, 1] / lengthageclass[[1, Range[nac[[1]]]]]; 

enlarge[v_] 		:= Flatten[Table[v[[ai]], {ai, nac[[1]]}, {lengthageclass[[1, ai]]}]];

enlargec[v_, c_] 	:= Flatten[Table[v[[a]], {a, nac[[c]]}, {lengthageclass[[c, a]]}]];

subsetn[v1_, v2_] 	:= Block[{}, v = Flatten[{v1, v2}]; Flatten[{v[[Range[na]]], Plus@@Take[v, -2]}]]; 

subsetp[v1_, v2_, wgt_] := Block[{}, v = Flatten[{v1, v2}]; Flatten[{v[[Range[na]]], Plus@@(wgt Take[v, -2])}]];


(* --------------------------------------------------
		SMOOTHING ROUTINES
----------------------------------------------------*)

(* Calculation of smoothing matrix. This matrix is based on a penalty matrix:
	n				= 90;
	pen				= Table[Switch[Abs[i - j], 0, 6, 1, -4, 2, 1, _, 0], {i, n}, {j, n}];
	pen[[{1, 2}, {1, 2}]] 		= {{1, -2}, {-2, 5}};
	pen[[{n - 1, n}, {n - 1,n}]] 	= {{5, -2}, {-2, 1}};
	wgt				= Table[0, {n}, {n}];
	Do[wgt[[5 i + 3, 5 i + 3]] 	= 1, {i, 0, nac[[1]] - 1}];
	makehat[c_] 			:= Inverse[wgt + c pen].wgt;
	hat				= makehat[5];
	hat1				= makehat[100];
	Put[hat, Global`inputpath <> "hatmatrix.m"]; *)

hat 	= ReadList[Global`inputpath <> "hatmatrix.m"][[1]];

fsmooth[x_] := Block[{}, 
        x1 = Flatten[Table[x[[i]], {i, nac[[1]]}, {5}]]; 
        Flatten[{Max0[(hat.x1)[[Range[na]]]], x[[nac[[1]]]]}]
	]; 

fsmooth1[x_] := Block[{}, 
	x1 = Flatten[Table[Log[x[[i]] + eps], {i, nac[[1]]}, {5}]]; 
        Flatten[{Exp[(hat.x1)[[Range[na]]]], x[[nac[[1]]]]}]
	]; 


(* --------------------------------------------------
		WRITING TO ASCII FILE
----------------------------------------------------*)

schrijf[naam_, dat_] := Block[{},

	fun1[x_] 	:= {Table[{WriteString[naam, x[[i]]], WriteString[naam, ";"]}, {i, Length[x]}]; WriteString[naam, "\n"]};
	fun2[x_, dep_] 	:= If[(dep == 2), fun1[x], Table[fun2[x[[i]], dep - 1], {i, Length[x]}]];
	OpenWrite[naam];
	fun2[dat, Depth[dat]];
	Close[naam]

	];

(* --------------------------------------------------
		Write info to Logfile
----------------------------------------------------*)

(* PACKAGE VERSION *)

version = 3.1;

WriteString[logfile, 
		"\t" <> "Package: " <> StringReplace[Evaluate[Context[]], "`Private`"-> ", " ] 
		<> "version " <> ToString[version] <> "\n\n"];


End[]


Protect[Evaluate[Context[] <> "*"]]


EndPackage[]
